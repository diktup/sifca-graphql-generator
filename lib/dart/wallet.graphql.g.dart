// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'wallet.graphql.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionType()
          ..enable = json['enable'] as bool?
          ..action = $enumDecodeNullable(
              _$PredefinedActionsEnumEnumMap, json['action'],
              unknownValue: PredefinedActionsEnum.artemisUnknown);

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('enable', instance.enable);
  writeNotNull('action', _$PredefinedActionsEnumEnumMap[instance.action]);
  return val;
}

const _$PredefinedActionsEnumEnumMap = {
  PredefinedActionsEnum.login: 'LOGIN',
  PredefinedActionsEnum.register: 'REGISTER',
  PredefinedActionsEnum.newsletter: 'NEWSLETTER',
  PredefinedActionsEnum.addWishlist: 'ADD_WISHLIST',
  PredefinedActionsEnum.productRating: 'PRODUCT_RATING',
  PredefinedActionsEnum.productReview: 'PRODUCT_REVIEW',
  PredefinedActionsEnum.completeProfile: 'COMPLETE_PROFILE',
  PredefinedActionsEnum.shareBlogFacebook: 'SHARE_BLOG_FACEBOOK',
  PredefinedActionsEnum.shareFacebookPage: 'SHARE_FACEBOOK_PAGE',
  PredefinedActionsEnum.shareProductFacebook: 'SHARE_PRODUCT_FACEBOOK',
  PredefinedActionsEnum.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType()
          ..id = json['id'] as String
          ..title = json['title'] as String?
          ..description = json['description'] as String?
          ..icon = json['icon'] as String?
          ..theme = json['theme'] as String?
          ..media = json['media'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..predefined = json['predefined'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionType
                  .fromJson(json['predefined'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  writeNotNull('icon', instance.icon);
  writeNotNull('theme', instance.theme);
  writeNotNull('media', instance.media?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('predefined', instance.predefined?.toJson());
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType()
          ..id = json['id'] as String
          ..title = json['title'] as String?
          ..description = json['description'] as String?
          ..icon = json['icon'] as String?
          ..cost = json['cost'] as int?
          ..kind = $enumDecodeNullable(_$JockerKindEnumEnumMap, json['kind'],
              unknownValue: JockerKindEnum.artemisUnknown)
          ..media = json['media'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  writeNotNull('icon', instance.icon);
  writeNotNull('cost', instance.cost);
  writeNotNull('kind', _$JockerKindEnumEnumMap[instance.kind]);
  writeNotNull('media', instance.media?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

const _$JockerKindEnumEnumMap = {
  JockerKindEnum.add10Sec: 'ADD_10_SEC',
  JockerKindEnum.eliminate2Suggestions: 'ELIMINATE_2_SUGGESTIONS',
  JockerKindEnum.showUsersPercentage: 'SHOW_USERS_PERCENTAGE',
  JockerKindEnum.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJockerFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker()
          ..jocker = json['jocker'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType
                  .fromJson(json['jocker'] as Map<String, dynamic>)
          ..cost = json['cost'] as String?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJockerToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('jocker', instance.jocker?.toJson());
  writeNotNull('cost', instance.cost);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType()
          ..id = json['id'] as String
          ..title = json['title'] as String?
          ..description = json['description'] as String?
          ..rules = json['rules'] as String?
          ..icon = json['icon'] as String?
          ..media = json['media'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..minStep = json['minStep'] as int?
          ..minCheckPoints = json['minCheckPoints'] as int?
          ..minGiftValue = json['minGiftValue'] as String?
          ..claimReward = json['claimReward'] as int?
          ..activityTypes = (json['activityTypes'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..jockers = (json['jockers'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..fees = json['fees'] as String?
          ..enable = json['enable'] as bool?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  writeNotNull('rules', instance.rules);
  writeNotNull('icon', instance.icon);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('minStep', instance.minStep);
  writeNotNull('minCheckPoints', instance.minCheckPoints);
  writeNotNull('minGiftValue', instance.minGiftValue);
  writeNotNull('claimReward', instance.claimReward);
  writeNotNull(
      'activityTypes', instance.activityTypes?.map((e) => e.toJson()).toList());
  writeNotNull('jockers', instance.jockers?.map((e) => e.toJson()).toList());
  writeNotNull('fees', instance.fees);
  writeNotNull('enable', instance.enable);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType$PhoneType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType$PhoneTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType$PictureType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType$PictureTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType()
          ..id = json['id'] as String
          ..email = json['email'] as String?
          ..gender = $enumDecodeNullable(_$GenderEnumMap, json['gender'],
              unknownValue: Gender.artemisUnknown)
          ..lastName = json['lastName'] as String?
          ..username = json['username'] as String?
          ..firstName = json['firstName'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>)
          ..picture = json['picture'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('email', instance.email);
  writeNotNull('gender', _$GenderEnumMap[instance.gender]);
  writeNotNull('lastName', instance.lastName);
  writeNotNull('username', instance.username);
  writeNotNull('firstName', instance.firstName);
  writeNotNull('phone', instance.phone?.toJson());
  writeNotNull('picture', instance.picture?.toJson());
  return val;
}

const _$GenderEnumMap = {
  Gender.male: 'MALE',
  Gender.female: 'FEMALE',
  Gender.preferNotToSay: 'PREFER_NOT_TO_SAY',
  Gender.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeWinner
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeWinnerFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeWinner()
          ..rank = json['rank'] as int
          ..reward = (json['reward'] as num?)?.toDouble();

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeWinnerToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeWinner
            instance) {
  final val = <String, dynamic>{
    'rank': instance.rank,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('reward', instance.reward);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeCheckpoint
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeCheckpointFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeCheckpoint()
          ..checkpoint = json['checkpoint'] as int?
          ..amount = (json['amount'] as num?)?.toDouble();

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeCheckpointToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeCheckpoint
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('checkpoint', instance.checkpoint);
  writeNotNull('amount', instance.amount);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldType()
          ..field = $enumDecodeNullable(
              _$AudienceCriteriaFieldEnumEnumMap, json['field'],
              unknownValue: AudienceCriteriaFieldEnum.artemisUnknown)
          ..operators = (json['operators'] as List<dynamic>?)
              ?.map((e) => $enumDecode(_$OperatorEnumEnumMap, e,
                  unknownValue: OperatorEnum.artemisUnknown))
              .toList();

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('field', _$AudienceCriteriaFieldEnumEnumMap[instance.field]);
  writeNotNull('operators',
      instance.operators?.map((e) => _$OperatorEnumEnumMap[e]!).toList());
  return val;
}

const _$AudienceCriteriaFieldEnumEnumMap = {
  AudienceCriteriaFieldEnum.age: 'AGE',
  AudienceCriteriaFieldEnum.state: 'STATE',
  AudienceCriteriaFieldEnum.gender: 'GENDER',
  AudienceCriteriaFieldEnum.country: 'COUNTRY',
  AudienceCriteriaFieldEnum.hobbies: 'HOBBIES',
  AudienceCriteriaFieldEnum.language: 'LANGUAGE',
  AudienceCriteriaFieldEnum.location: 'LOCATION',
  AudienceCriteriaFieldEnum.education: 'EDUCATION',
  AudienceCriteriaFieldEnum.interests: 'INTERESTS',
  AudienceCriteriaFieldEnum.joinDate: 'JOIN_DATE',
  AudienceCriteriaFieldEnum.occupation: 'OCCUPATION',
  AudienceCriteriaFieldEnum.questAction: 'QUEST_ACTION',
  AudienceCriteriaFieldEnum.maritalStatus: 'MARITAL_STATUS',
  AudienceCriteriaFieldEnum.reputationLevel: 'REPUTATION_LEVEL',
  AudienceCriteriaFieldEnum.quantitativeCurrent: 'QUANTITATIVE_CURRENT',
  AudienceCriteriaFieldEnum.quantitativeOverall: 'QUANTITATIVE_OVERALL',
  AudienceCriteriaFieldEnum.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

const _$OperatorEnumEnumMap = {
  OperatorEnum.equal: 'EQUAL',
  OperatorEnum.greater: 'GREATER',
  OperatorEnum.between: 'BETWEEN',
  OperatorEnum.different: 'DIFFERENT',
  OperatorEnum.notBetween: 'NOT_BETWEEN',
  OperatorEnum.includedIn: 'INCLUDED_IN',
  OperatorEnum.atLeastOne: 'AT_LEAST_ONE',
  OperatorEnum.notSpecified: 'NOT_SPECIFIED',
  OperatorEnum.notIncludedIn: 'NOT_INCLUDED_IN',
  OperatorEnum.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType()
          ..id = json['id'] as String
          ..icon = json['icon'] as String?
          ..title = json['title'] as String?
          ..style = json['style'] as String?
          ..enable = json['enable'] as bool?
          ..description = json['description'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..media = json['media'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..fields = (json['fields'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('icon', instance.icon);
  writeNotNull('title', instance.title);
  writeNotNull('style', instance.style);
  writeNotNull('enable', instance.enable);
  writeNotNull('description', instance.description);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('fields', instance.fields?.map((e) => e.toJson()).toList());
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionType()
          ..enable = json['enable'] as bool?
          ..action = $enumDecodeNullable(
              _$PredefinedActionsEnumEnumMap, json['action'],
              unknownValue: PredefinedActionsEnum.artemisUnknown);

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('enable', instance.enable);
  writeNotNull('action', _$PredefinedActionsEnumEnumMap[instance.action]);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType()
          ..id = json['id'] as String
          ..title = json['title'] as String?
          ..description = json['description'] as String?
          ..icon = json['icon'] as String?
          ..theme = json['theme'] as String?
          ..media = json['media'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..predefined = json['predefined'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionType
                  .fromJson(json['predefined'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  writeNotNull('icon', instance.icon);
  writeNotNull('theme', instance.theme);
  writeNotNull('media', instance.media?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('predefined', instance.predefined?.toJson());
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxType()
          ..min = json['min'] as int?
          ..max = json['max'] as int?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('min', instance.min);
  writeNotNull('max', instance.max);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingType()
          ..max = json['max'] as int?
          ..text = json['text'] as bool?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('max', instance.max);
  writeNotNull('text', instance.text);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesType()
          ..minValue = json['minValue'] as int?
          ..maxValue = json['maxValue'] as int?
          ..score = json['score'] as bool?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('minValue', instance.minValue);
  writeNotNull('maxValue', instance.maxValue);
  writeNotNull('score', instance.score);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType()
          ..output = $enumDecodeNullable(
              _$CalculatedOutputEnumEnumMap, json['output'],
              unknownValue: CalculatedOutputEnum.artemisUnknown)
          ..kw$show = json['show'] as bool?
          ..formula = json['formula'] as String?
          ..values = (json['values'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('output', _$CalculatedOutputEnumEnumMap[instance.output]);
  writeNotNull('show', instance.kw$show);
  writeNotNull('formula', instance.formula);
  writeNotNull('values', instance.values?.map((e) => e.toJson()).toList());
  return val;
}

const _$CalculatedOutputEnumEnumMap = {
  CalculatedOutputEnum.number: 'NUMBER',
  CalculatedOutputEnum.text: 'TEXT',
  CalculatedOutputEnum.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateType()
          ..outdated = json['outdated'] as bool?
          ..interval = json['interval'] as bool?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('outdated', instance.outdated);
  writeNotNull('interval', instance.interval);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactType()
          ..firstname = json['firstname'] as bool?
          ..lastname = json['lastname'] as bool?
          ..email = json['email'] as bool?
          ..phone = json['phone'] as bool?
          ..description = json['description'] as bool?
          ..address = json['address'] as bool?
          ..birthday = json['birthday'] as bool?
          ..gender = json['gender'] as bool?
          ..civility = json['civility'] as bool?
          ..profession = json['profession'] as bool?
          ..academicLevel = json['academicLevel'] as bool?
          ..language = json['language'] as bool?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('firstname', instance.firstname);
  writeNotNull('lastname', instance.lastname);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone);
  writeNotNull('description', instance.description);
  writeNotNull('address', instance.address);
  writeNotNull('birthday', instance.birthday);
  writeNotNull('gender', instance.gender);
  writeNotNull('civility', instance.civility);
  writeNotNull('profession', instance.profession);
  writeNotNull('academicLevel', instance.academicLevel);
  writeNotNull('language', instance.language);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberType()
          ..minValue = json['minValue'] as int?
          ..maxValue = json['maxValue'] as int?
          ..interval = json['interval'] as bool?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('minValue', instance.minValue);
  writeNotNull('maxValue', instance.maxValue);
  writeNotNull('interval', instance.interval);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsType()
          ..name = json['name'] as String?
          ..type = json['type'] as String?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('type', instance.type);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType()
          ..link = json['link'] as int?
          ..method = $enumDecodeNullable(_$ApiMethodsEnumMap, json['method'],
              unknownValue: ApiMethods.artemisUnknown)
          ..auth = json['auth'] as String?
          ..secret = json['secret'] as String?
          ..params = (json['params'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('link', instance.link);
  writeNotNull('method', _$ApiMethodsEnumMap[instance.method]);
  writeNotNull('auth', instance.auth);
  writeNotNull('secret', instance.secret);
  writeNotNull('params', instance.params?.map((e) => e.toJson()).toList());
  return val;
}

const _$ApiMethodsEnumMap = {
  ApiMethods.kw$GET: 'GET',
  ApiMethods.post: 'POST',
  ApiMethods.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixType()
          ..lines = json['lines'] as String?
          ..columns = json['columns'] as String?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('lines', instance.lines);
  writeNotNull('columns', instance.columns);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleType()
          ..leftLabel = json['leftLabel'] as String?
          ..rightLabel = json['rightLabel'] as String?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('leftLabel', instance.leftLabel);
  writeNotNull('rightLabel', instance.rightLabel);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoType()
          ..item = json['item'] as String
          ..enable = json['enable'] as bool?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoType
            instance) {
  final val = <String, dynamic>{
    'item': instance.item,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('enable', instance.enable);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepType()
          ..id = json['id'] as String;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepTypeToJson(
            GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepType
                instance) =>
        <String, dynamic>{
          'id': instance.id,
        };

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType()
          ..id = json['id'] as String
          ..order = json['order'] as int?
          ..title = json['title'] as String?
          ..choices = (json['choices'] as List<dynamic>)
              .map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..mandatory = json['mandatory'] as bool?
          ..type = $enumDecodeNullable(_$QuestionTypeEnumEnumMap, json['type'],
              unknownValue: QuestionTypeEnum.artemisUnknown)
          ..challengeStep = json['challengeStep'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepType
                  .fromJson(json['challengeStep'] as Map<String, dynamic>)
          ..points = json['points'] as int?
          ..score = json['score'] as bool?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('order', instance.order);
  writeNotNull('title', instance.title);
  val['choices'] = instance.choices.map((e) => e.toJson()).toList();
  writeNotNull('mandatory', instance.mandatory);
  writeNotNull('type', _$QuestionTypeEnumEnumMap[instance.type]);
  writeNotNull('challengeStep', instance.challengeStep?.toJson());
  writeNotNull('points', instance.points);
  writeNotNull('score', instance.score);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

const _$QuestionTypeEnumEnumMap = {
  QuestionTypeEnum.shortAnswer: 'SHORT_ANSWER',
  QuestionTypeEnum.paragraph: 'PARAGRAPH',
  QuestionTypeEnum.multipleChoice: 'MULTIPLE_CHOICE',
  QuestionTypeEnum.checkboxes: 'CHECKBOXES',
  QuestionTypeEnum.dropdown: 'DROPDOWN',
  QuestionTypeEnum.picture: 'PICTURE',
  QuestionTypeEnum.date: 'DATE',
  QuestionTypeEnum.time: 'TIME',
  QuestionTypeEnum.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType()
          ..maxResponses = (json['maxResponses'] as num?)?.toDouble()
          ..personalised = json['personalised'] as bool?
          ..unique = json['unique'] as bool?
          ..random = json['random'] as bool?
          ..leaderboard = json['leaderboard'] as bool?
          ..api = json['api'] as bool?
          ..image = json['image'] as bool?
          ..interaction = json['interaction'] as bool?
          ..suggestions = json['suggestions'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType
                  .fromJson(json['suggestions'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('maxResponses', instance.maxResponses);
  writeNotNull('personalised', instance.personalised);
  writeNotNull('unique', instance.unique);
  writeNotNull('random', instance.random);
  writeNotNull('leaderboard', instance.leaderboard);
  writeNotNull('api', instance.api);
  writeNotNull('image', instance.image);
  writeNotNull('interaction', instance.interaction);
  writeNotNull('suggestions', instance.suggestions?.toJson());
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyType()
          ..levels = json['levels'] as int?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('levels', instance.levels);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreType()
          ..min = json['min'] as int?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('min', instance.min);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadType()
          ..url = json['url'] as String?
          ..image = json['image'] as String?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('url', instance.url);
  writeNotNull('image', instance.image);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType()
          ..rank = json['rank'] as int?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('rank', instance.rank);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType()
          ..verification = json['verification'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType
                  .fromJson(json['verification'] as Map<String, dynamic>)
          ..verified = json['verified'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType
                  .fromJson(json['verified'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('verification', instance.verification?.toJson());
  writeNotNull('verified', instance.verified?.toJson());
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType()
          ..number = json['number'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType
                  .fromJson(json['number'] as Map<String, dynamic>)
          ..email = json['email'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType
                  .fromJson(json['email'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number?.toJson());
  writeNotNull('email', instance.email?.toJson());
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoType()
          ..minSeconds = json['minSeconds'] as int?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('minSeconds', instance.minSeconds);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType()
          ..size48 = json['size48'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size96 = json['size96'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size96'] as Map<String, dynamic>)
          ..size144 = json['size144'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size144'] as Map<String, dynamic>)
          ..size240 = json['size240'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size240'] as Map<String, dynamic>)
          ..size480 = json['size480'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size480'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size96', instance.size96?.toJson());
  writeNotNull('size144', instance.size144?.toJson());
  writeNotNull('size240', instance.size240?.toJson());
  writeNotNull('size480', instance.size480?.toJson());
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType()
          ..svg = json['svg'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
                  .fromJson(json['png'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType()
          ..style = $enumDecode(_$SocialImageStyleEnumEnumMap, json['style'],
              unknownValue: SocialImageStyleEnum.artemisUnknown)
          ..images = (json['images'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType
            instance) {
  final val = <String, dynamic>{
    'style': _$SocialImageStyleEnumEnumMap[instance.style]!,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('images', instance.images?.map((e) => e.toJson()).toList());
  return val;
}

const _$SocialImageStyleEnumEnumMap = {
  SocialImageStyleEnum.bubble: 'BUBBLE',
  SocialImageStyleEnum.color: 'COLOR',
  SocialImageStyleEnum.sticker: 'STICKER',
  SocialImageStyleEnum.colorHandDrown: 'COLOR_HAND_DROWN',
  SocialImageStyleEnum.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..fontIcon = json['fontIcon'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..images = (json['images'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('fontIcon', instance.fontIcon);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('images', instance.images?.map((e) => e.toJson()).toList());
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType()
          ..socialMedia = json['socialMedia'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType
                  .fromJson(json['socialMedia'] as Map<String, dynamic>)
          ..action = $enumDecodeNullable(
              _$SocialActionEnumEnumMap, json['action'],
              unknownValue: SocialActionEnum.artemisUnknown)
          ..socialContent = $enumDecodeNullable(
              _$SocialContentTypeEnumEnumMap, json['socialContent'],
              unknownValue: SocialContentTypeEnum.artemisUnknown)
          ..url = json['url'] as String?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('socialMedia', instance.socialMedia?.toJson());
  writeNotNull('action', _$SocialActionEnumEnumMap[instance.action]);
  writeNotNull(
      'socialContent', _$SocialContentTypeEnumEnumMap[instance.socialContent]);
  writeNotNull('url', instance.url);
  return val;
}

const _$SocialActionEnumEnumMap = {
  SocialActionEnum.share: 'SHARE',
  SocialActionEnum.like: 'LIKE',
  SocialActionEnum.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

const _$SocialContentTypeEnumEnumMap = {
  SocialContentTypeEnum.page: 'PAGE',
  SocialContentTypeEnum.profile: 'PROFILE',
  SocialContentTypeEnum.post: 'POST',
  SocialContentTypeEnum.video: 'VIDEO',
  SocialContentTypeEnum.story: 'STORY',
  SocialContentTypeEnum.reel: 'REEL',
  SocialContentTypeEnum.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadType()
          ..playstore = json['playstore'] as String?
          ..appstore = json['appstore'] as String?
          ..appgallery = json['appgallery'] as String?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('playstore', instance.playstore);
  writeNotNull('appstore', instance.appstore);
  writeNotNull('appgallery', instance.appgallery);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType()
          ..textBox = json['textBox'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxType
                  .fromJson(json['textBox'] as Map<String, dynamic>)
          ..rating = json['rating'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingType
                  .fromJson(json['rating'] as Map<String, dynamic>)
          ..calculated = json['calculated'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType
                  .fromJson(json['calculated'] as Map<String, dynamic>)
          ..date = json['date'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateType
                  .fromJson(json['date'] as Map<String, dynamic>)
          ..contact = json['contact'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..number = json['number'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberType
                  .fromJson(json['number'] as Map<String, dynamic>)
          ..api = json['api'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType
                  .fromJson(json['api'] as Map<String, dynamic>)
          ..matrix = json['matrix'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixType
                  .fromJson(json['matrix'] as Map<String, dynamic>)
          ..toggle = json['toggle'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleType
                  .fromJson(json['toggle'] as Map<String, dynamic>)
          ..choices = json['choices'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType
                  .fromJson(json['choices'] as Map<String, dynamic>)
          ..smiley = json['smiley'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyType
                  .fromJson(json['smiley'] as Map<String, dynamic>)
          ..score = json['score'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreType
                  .fromJson(json['score'] as Map<String, dynamic>)
          ..lead = json['lead'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadType
                  .fromJson(json['lead'] as Map<String, dynamic>)
          ..verification = json['verification'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType
                  .fromJson(json['verification'] as Map<String, dynamic>)
          ..video = json['video'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoType
                  .fromJson(json['video'] as Map<String, dynamic>)
          ..socialMedia = json['socialMedia'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType
                  .fromJson(json['socialMedia'] as Map<String, dynamic>)
          ..appDownload = json['appDownload'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadType
                  .fromJson(json['appDownload'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('textBox', instance.textBox?.toJson());
  writeNotNull('rating', instance.rating?.toJson());
  writeNotNull('calculated', instance.calculated?.toJson());
  writeNotNull('date', instance.date?.toJson());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('number', instance.number?.toJson());
  writeNotNull('api', instance.api?.toJson());
  writeNotNull('matrix', instance.matrix?.toJson());
  writeNotNull('toggle', instance.toggle?.toJson());
  writeNotNull('choices', instance.choices?.toJson());
  writeNotNull('smiley', instance.smiley?.toJson());
  writeNotNull('score', instance.score?.toJson());
  writeNotNull('lead', instance.lead?.toJson());
  writeNotNull('verification', instance.verification?.toJson());
  writeNotNull('video', instance.video?.toJson());
  writeNotNull('socialMedia', instance.socialMedia?.toJson());
  writeNotNull('appDownload', instance.appDownload?.toJson());
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType()
          ..id = json['id'] as String
          ..activityType = json['activityType'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType
                  .fromJson(json['activityType'] as Map<String, dynamic>)
          ..required = json['required'] as bool?
          ..definition = json['definition'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType
                  .fromJson(json['definition'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('activityType', instance.activityType?.toJson());
  writeNotNull('required', instance.required);
  writeNotNull('definition', instance.definition?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType()
          ..value = $enumDecodeNullable(
              _$AudienceCriteriaFieldEnumEnumMap, json['value'],
              unknownValue: AudienceCriteriaFieldEnum.artemisUnknown)
          ..action = json['action'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType
                  .fromJson(json['action'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('value', _$AudienceCriteriaFieldEnumEnumMap[instance.value]);
  writeNotNull('action', instance.action?.toJson());
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathType()
          ..lat = (json['lat'] as num).toDouble()
          ..lng = (json['lng'] as num).toDouble()
          ..order = (json['order'] as num).toDouble();

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathTypeToJson(
            GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathType
                instance) =>
        <String, dynamic>{
          'lat': instance.lat,
          'lng': instance.lng,
          'order': instance.order,
        };

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType()
          ..radius = (json['radius'] as num?)?.toDouble()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..paths = (json['paths'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('radius', instance.radius);
  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('paths', instance.paths?.map((e) => e.toJson()).toList());
  return val;
}

const _$ZoneTypesEnumEnumMap = {
  ZoneTypesEnum.point: 'Point',
  ZoneTypesEnum.polygon: 'Polygon',
  ZoneTypesEnum.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType()
          ..id = json['id'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = (json['population'] as num?)?.toDouble()
          ..ascii = json['ascii'] as String?
          ..lat = (json['lat'] as num?)?.toDouble()
          ..lng = (json['lng'] as num?)?.toDouble()
          ..country = json['country'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

const _$StateCapitalEnumEnumMap = {
  StateCapitalEnum.primary: 'PRIMARY',
  StateCapitalEnum.admin: 'ADMIN',
  StateCapitalEnum.minor: 'MINOR',
  StateCapitalEnum.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksType()
          ..discount = json['discount'] as String
          ..description = json['description'] as String?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksType
            instance) {
  final val = <String, dynamic>{
    'discount': instance.discount,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('description', instance.description);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalType()
          ..min = json['min'] as int?
          ..max = json['max'] as int?;

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('min', instance.min);
  writeNotNull('max', instance.max);
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType()
          ..id = json['id'] as String
          ..rank = json['rank'] as int
          ..color = json['color'] as String?
          ..picture = json['picture'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..perks = json['perks'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksType
                  .fromJson(json['perks'] as Map<String, dynamic>)
          ..lossAmount = json['lossAmount'] as int
          ..nextLevelMax = json['nextLevelMax'] as int?
          ..inactivityCycle = json['inactivityCycle'] as int
          ..levelInterval = json['levelInterval'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalType
                  .fromJson(json['levelInterval'] as Map<String, dynamic>)
          ..reputationLevel = json['reputationLevel'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'rank': instance.rank,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('color', instance.color);
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('perks', instance.perks?.toJson());
  val['lossAmount'] = instance.lossAmount;
  writeNotNull('nextLevelMax', instance.nextLevelMax);
  val['inactivityCycle'] = instance.inactivityCycle;
  writeNotNull('levelInterval', instance.levelInterval?.toJson());
  writeNotNull('reputationLevel', instance.reputationLevel);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType()
          ..startDate = json['startDate'] == null
              ? null
              : DateTime.parse(json['startDate'] as String)
          ..endDate = json['endDate'] == null
              ? null
              : DateTime.parse(json['endDate'] as String)
          ..minValue = json['minValue'] as String?
          ..maxValue = json['maxValue'] as String?
          ..value = json['value'] as String?
          ..values = (json['values'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..zone = json['zone'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType
                  .fromJson(json['zone'] as Map<String, dynamic>)
          ..countries = (json['countries'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..states = (json['states'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..languages = (json['languages'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..reputations = (json['reputations'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('startDate', instance.startDate?.toIso8601String());
  writeNotNull('endDate', instance.endDate?.toIso8601String());
  writeNotNull('minValue', instance.minValue);
  writeNotNull('maxValue', instance.maxValue);
  writeNotNull('value', instance.value);
  writeNotNull('values', instance.values);
  writeNotNull('zone', instance.zone?.toJson());
  writeNotNull(
      'countries', instance.countries?.map((e) => e.toJson()).toList());
  writeNotNull('states', instance.states?.map((e) => e.toJson()).toList());
  writeNotNull(
      'languages', instance.languages?.map((e) => e.toJson()).toList());
  writeNotNull(
      'reputations', instance.reputations?.map((e) => e.toJson()).toList());
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType()
          ..field = json['field'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType
                  .fromJson(json['field'] as Map<String, dynamic>)
          ..kw$operator = $enumDecodeNullable(
              _$OperatorEnumEnumMap, json['operator'],
              unknownValue: OperatorEnum.artemisUnknown)
          ..values = (json['values'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('field', instance.field?.toJson());
  writeNotNull('operator', _$OperatorEnumEnumMap[instance.kw$operator]);
  writeNotNull('values', instance.values?.map((e) => e.toJson()).toList());
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType()
          ..rank = json['rank'] as int?
          ..criteria = json['criteria'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType
                  .fromJson(json['criteria'] as Map<String, dynamic>)
          ..filters = (json['filters'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('rank', instance.rank);
  writeNotNull('criteria', instance.criteria?.toJson());
  writeNotNull('filters', instance.filters?.map((e) => e.toJson()).toList());
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType()
          ..id = json['id'] as String
          ..icon = json['icon'] as String?
          ..title = json['title'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..segments = (json['segments'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('icon', instance.icon);
  writeNotNull('title', instance.title);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('segments', instance.segments?.map((e) => e.toJson()).toList());
  return val;
}

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType()
          ..id = json['id'] as String
          ..title = json['title'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..challengeType = json['challengeType'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType
                  .fromJson(json['challengeType'] as Map<String, dynamic>)
          ..creator = json['creator'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType
                  .fromJson(json['creator'] as Map<String, dynamic>)
          ..startDate = json['startDate'] == null
              ? null
              : DateTime.parse(json['startDate'] as String)
          ..endDate = json['endDate'] == null
              ? null
              : DateTime.parse(json['endDate'] as String)
          ..status = $enumDecodeNullable(
              _$ChallengeStatusEnumEnumMap, json['status'],
              unknownValue: ChallengeStatusEnum.artemisUnknown)
          ..winners = (json['winners'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeWinner
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..checkpoints = (json['checkpoints'] as List<dynamic>?)
              ?.map((e) =>
                  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeCheckpoint
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..maxAnswers = json['maxAnswers'] as int?
          ..audience = json['audience'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType
                  .fromJson(json['audience'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('challengeType', instance.challengeType?.toJson());
  writeNotNull('creator', instance.creator?.toJson());
  writeNotNull('startDate', instance.startDate?.toIso8601String());
  writeNotNull('endDate', instance.endDate?.toIso8601String());
  writeNotNull('status', _$ChallengeStatusEnumEnumMap[instance.status]);
  writeNotNull('winners', instance.winners?.map((e) => e.toJson()).toList());
  writeNotNull(
      'checkpoints', instance.checkpoints?.map((e) => e.toJson()).toList());
  writeNotNull('maxAnswers', instance.maxAnswers);
  writeNotNull('audience', instance.audience?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

const _$ChallengeStatusEnumEnumMap = {
  ChallengeStatusEnum.draft: 'DRAFT',
  ChallengeStatusEnum.ongoing: 'ONGOING',
  ChallengeStatusEnum.finished: 'FINISHED',
  ChallengeStatusEnum.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType()
          ..amount = json['amount'] as String?
          ..usage = $enumDecode(_$PocketUsageTypeEnumMap, json['usage'],
              unknownValue: PocketUsageType.artemisUnknown)
          ..pocketType = $enumDecode(
              _$PocketTypeEnumEnumMap, json['pocketType'],
              unknownValue: PocketTypeEnum.artemisUnknown)
          ..challenge = json['challenge'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType
                  .fromJson(json['challenge'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('amount', instance.amount);
  val['usage'] = _$PocketUsageTypeEnumMap[instance.usage]!;
  val['pocketType'] = _$PocketTypeEnumEnumMap[instance.pocketType]!;
  writeNotNull('challenge', instance.challenge?.toJson());
  return val;
}

const _$PocketUsageTypeEnumMap = {
  PocketUsageType.main: 'MAIN',
  PocketUsageType.bonus: 'BONUS',
  PocketUsageType.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

const _$PocketTypeEnumEnumMap = {
  PocketTypeEnum.quantitative: 'QUANTITATIVE',
  PocketTypeEnum.qualitative: 'QUALITATIVE',
  PocketTypeEnum.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType()
          ..id = json['id'] as String
          ..pocket = json['pocket'] == null
              ? null
              : GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType
                  .fromJson(json['pocket'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoTypeToJson(
        GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('pocket', instance.pocket?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetCurrentUserQuantitativeWallet$Query
    _$GetCurrentUserQuantitativeWallet$QueryFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWallet$Query()
          ..getCurrentUserQuantitativeWallet =
              GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType
                  .fromJson(json['getCurrentUserQuantitativeWallet']
                      as Map<String, dynamic>);

Map<String, dynamic> _$GetCurrentUserQuantitativeWallet$QueryToJson(
        GetCurrentUserQuantitativeWallet$Query instance) =>
    <String, dynamic>{
      'getCurrentUserQuantitativeWallet':
          instance.getCurrentUserQuantitativeWallet.toJson(),
    };

TargetACIInput _$TargetACIInputFromJson(Map<String, dynamic> json) =>
    TargetACIInput(
      pos: json['pos'] as String?,
      wholesaler: json['wholesaler'] as String?,
      manufacturer: json['manufacturer'] as String?,
      user: json['user'] as String?,
    );

Map<String, dynamic> _$TargetACIInputToJson(TargetACIInput instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('pos', instance.pos);
  writeNotNull('wholesaler', instance.wholesaler);
  writeNotNull('manufacturer', instance.manufacturer);
  writeNotNull('user', instance.user);
  return val;
}

IsWalletAndCardInitialized$Query$IsWalletAndCardInititalizedDtoType
    _$IsWalletAndCardInitialized$Query$IsWalletAndCardInititalizedDtoTypeFromJson(
            Map<String, dynamic> json) =>
        IsWalletAndCardInitialized$Query$IsWalletAndCardInititalizedDtoType()
          ..isUserCardCreated = json['isUserCardCreated'] as bool
          ..isQuantitativeWalletCreated =
              json['isQuantitativeWalletCreated'] as bool;

Map<String, dynamic>
    _$IsWalletAndCardInitialized$Query$IsWalletAndCardInititalizedDtoTypeToJson(
            IsWalletAndCardInitialized$Query$IsWalletAndCardInititalizedDtoType
                instance) =>
        <String, dynamic>{
          'isUserCardCreated': instance.isUserCardCreated,
          'isQuantitativeWalletCreated': instance.isQuantitativeWalletCreated,
        };

IsWalletAndCardInitialized$Query _$IsWalletAndCardInitialized$QueryFromJson(
        Map<String, dynamic> json) =>
    IsWalletAndCardInitialized$Query()
      ..isWalletAndCardInitialized =
          IsWalletAndCardInitialized$Query$IsWalletAndCardInititalizedDtoType
              .fromJson(
                  json['isWalletAndCardInitialized'] as Map<String, dynamic>);

Map<String, dynamic> _$IsWalletAndCardInitialized$QueryToJson(
        IsWalletAndCardInitialized$Query instance) =>
    <String, dynamic>{
      'isWalletAndCardInitialized':
          instance.isWalletAndCardInitialized.toJson(),
    };

WalletOwnerHasEnoughBalance$Query$WalletOwnerHasEnoughBalanceType
    _$WalletOwnerHasEnoughBalance$Query$WalletOwnerHasEnoughBalanceTypeFromJson(
            Map<String, dynamic> json) =>
        WalletOwnerHasEnoughBalance$Query$WalletOwnerHasEnoughBalanceType()
          ..hasEnoughBalance = json['hasEnoughBalance'] as bool;

Map<String, dynamic>
    _$WalletOwnerHasEnoughBalance$Query$WalletOwnerHasEnoughBalanceTypeToJson(
            WalletOwnerHasEnoughBalance$Query$WalletOwnerHasEnoughBalanceType
                instance) =>
        <String, dynamic>{
          'hasEnoughBalance': instance.hasEnoughBalance,
        };

WalletOwnerHasEnoughBalance$Query _$WalletOwnerHasEnoughBalance$QueryFromJson(
        Map<String, dynamic> json) =>
    WalletOwnerHasEnoughBalance$Query()
      ..walletOwnerHasEnoughBalance =
          WalletOwnerHasEnoughBalance$Query$WalletOwnerHasEnoughBalanceType
              .fromJson(
                  json['walletOwnerHasEnoughBalance'] as Map<String, dynamic>);

Map<String, dynamic> _$WalletOwnerHasEnoughBalance$QueryToJson(
        WalletOwnerHasEnoughBalance$Query instance) =>
    <String, dynamic>{
      'walletOwnerHasEnoughBalance':
          instance.walletOwnerHasEnoughBalance.toJson(),
    };

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PhoneType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PhoneTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$LonLatType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$LonLatType()
          ..type = json['type'] as String?
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$LonLatTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', instance.type);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = (json['population'] as num?)?.toDouble()
          ..ascii = json['ascii'] as String?
          ..lat = (json['lat'] as num?)?.toDouble()
          ..lng = (json['lng'] as num?)?.toDouble()
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$FullAddressOwnerType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$FullAddressOwnerTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..addressLine = json['addressLine'] as String?
          ..location = json['location'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('addressLine', instance.addressLine);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType()
          ..size48 = json['size48'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size96 = json['size96'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size96'] as Map<String, dynamic>)
          ..size144 = json['size144'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size144'] as Map<String, dynamic>)
          ..size240 = json['size240'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size240'] as Map<String, dynamic>)
          ..size480 = json['size480'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size480'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size96', instance.size96?.toJson());
  writeNotNull('size144', instance.size144?.toJson());
  writeNotNull('size240', instance.size240?.toJson());
  writeNotNull('size480', instance.size480?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType()
          ..svg = json['svg'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
                  .fromJson(json['png'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType()
          ..style = $enumDecode(_$SocialImageStyleEnumEnumMap, json['style'],
              unknownValue: SocialImageStyleEnum.artemisUnknown)
          ..images = (json['images'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType
            instance) {
  final val = <String, dynamic>{
    'style': _$SocialImageStyleEnumEnumMap[instance.style]!,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('images', instance.images?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..fontIcon = json['fontIcon'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..images = (json['images'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('fontIcon', instance.fontIcon);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('images', instance.images?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType()
          ..name = json['name'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType
                  .fromJson(json['name'] as Map<String, dynamic>)
          ..value = json['value'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name?.toJson());
  writeNotNull('value', instance.value);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$OoredooDataType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$OoredooDataTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$OoredooDataType()
          ..id = json['id'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$OoredooDataTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$OoredooDataType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('id', instance.id);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$FacebookDataType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$FacebookDataTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$FacebookDataType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..token = json['token'] as String
          ..email = json['email'] as String
          ..lastName = json['last_name'] as String?
          ..firstName = json['first_name'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$FacebookDataTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$FacebookDataType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  val['token'] = instance.token;
  val['email'] = instance.email;
  writeNotNull('last_name', instance.lastName);
  writeNotNull('first_name', instance.firstName);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$GoogleDataType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$GoogleDataTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$GoogleDataType()
          ..sub = json['sub'] as String
          ..name = json['name'] as String?
          ..email = json['email'] as String
          ..token = json['token'] as String
          ..locale = json['locale'] as String?
          ..picture = json['picture'] as String?
          ..givenName = json['given_name'] as String?
          ..familyName = json['family_name'] as String?
          ..emailVerified = json['email_verified'] as bool?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$GoogleDataTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$GoogleDataType
            instance) {
  final val = <String, dynamic>{
    'sub': instance.sub,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  val['email'] = instance.email;
  val['token'] = instance.token;
  writeNotNull('locale', instance.locale);
  writeNotNull('picture', instance.picture);
  writeNotNull('given_name', instance.givenName);
  writeNotNull('family_name', instance.familyName);
  writeNotNull('email_verified', instance.emailVerified);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$AppleDataType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$AppleDataTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$AppleDataType()
          ..email = json['email'] as String?
          ..status = json['status'] as String?
          ..givenName = json['givenName'] as String?
          ..familyName = json['familyName'] as String?
          ..identityToken = json['identityToken'] as String
          ..userIdentifier = json['userIdentifier'] as String?
          ..authorizationCode = json['authorizationCode'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$AppleDataTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$AppleDataType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('email', instance.email);
  writeNotNull('status', instance.status);
  writeNotNull('givenName', instance.givenName);
  writeNotNull('familyName', instance.familyName);
  val['identityToken'] = instance.identityToken;
  writeNotNull('userIdentifier', instance.userIdentifier);
  writeNotNull('authorizationCode', instance.authorizationCode);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType()
          ..ooredoo = json['ooredoo'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$OoredooDataType
                  .fromJson(json['ooredoo'] as Map<String, dynamic>)
          ..facebook = json['facebook'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$FacebookDataType
                  .fromJson(json['facebook'] as Map<String, dynamic>)
          ..google = json['google'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$GoogleDataType
                  .fromJson(json['google'] as Map<String, dynamic>)
          ..apple = json['apple'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$AppleDataType
                  .fromJson(json['apple'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ooredoo', instance.ooredoo?.toJson());
  writeNotNull('facebook', instance.facebook?.toJson());
  writeNotNull('google', instance.google?.toJson());
  writeNotNull('apple', instance.apple?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserEducationType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserEducationTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserEducationType()
          ..level = $enumDecodeNullable(_$AcademicLevelEnumMap, json['level'],
              unknownValue: AcademicLevel.artemisUnknown)
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..from = json['from'] == null
              ? null
              : DateTime.parse(json['from'] as String)
          ..to =
              json['to'] == null ? null : DateTime.parse(json['to'] as String)
          ..graduated = json['graduated'] as bool?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserEducationTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserEducationType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('level', _$AcademicLevelEnumMap[instance.level]);
  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('tags', instance.tags);
  writeNotNull('from', instance.from?.toIso8601String());
  writeNotNull('to', instance.to?.toIso8601String());
  writeNotNull('graduated', instance.graduated);
  return val;
}

const _$AcademicLevelEnumMap = {
  AcademicLevel.primary: 'PRIMARY',
  AcademicLevel.highSchool: 'HIGH_SCHOOL',
  AcademicLevel.university: 'UNIVERSITY',
  AcademicLevel.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = (json['population'] as num?)?.toDouble()
          ..ascii = json['ascii'] as String?
          ..lat = (json['lat'] as num?)?.toDouble()
          ..lng = (json['lng'] as num?)?.toDouble()
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType()
          ..company = json['company'] as String?
          ..position = json['position'] as String?
          ..description = json['description'] as String?
          ..city = json['city'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType
                  .fromJson(json['city'] as Map<String, dynamic>)
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..from = json['from'] == null
              ? null
              : DateTime.parse(json['from'] as String)
          ..to =
              json['to'] == null ? null : DateTime.parse(json['to'] as String)
          ..current = json['current'] as bool?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('company', instance.company);
  writeNotNull('position', instance.position);
  writeNotNull('description', instance.description);
  writeNotNull('city', instance.city?.toJson());
  writeNotNull('tags', instance.tags);
  writeNotNull('from', instance.from?.toIso8601String());
  writeNotNull('to', instance.to?.toIso8601String());
  writeNotNull('current', instance.current);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = (json['population'] as num?)?.toDouble()
          ..ascii = json['ascii'] as String?
          ..lat = (json['lat'] as num?)?.toDouble()
          ..lng = (json['lng'] as num?)?.toDouble()
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType()
          ..id = json['id'] as String
          ..apps = (json['apps'] as List<dynamic>?)
              ?.map((e) => $enumDecode(_$AppEnumMap, e,
                  unknownValue: App.artemisUnknown))
              .toList()
          ..email = json['email'] as String?
          ..roles = (json['roles'] as List<dynamic>?)
              ?.map((e) => $enumDecode(_$UserRoleEnumMap, e,
                  unknownValue: UserRole.artemisUnknown))
              .toList()
          ..title = json['title'] as String?
          ..about = json['about'] as String?
          ..gender = $enumDecodeNullable(_$GenderEnumMap, json['gender'],
              unknownValue: Gender.artemisUnknown)
          ..locale = json['locale'] as String?
          ..source = $enumDecodeNullable(_$SourcesEnumEnumMap, json['source'],
              unknownValue: SourcesEnum.artemisUnknown)
          ..status = $enumDecodeNullable(_$UserStatusEnumMap, json['status'],
              unknownValue: UserStatus.artemisUnknown)
          ..lastName = json['lastName'] as String?
          ..username = json['username'] as String?
          ..firstName = json['firstName'] as String?
          ..plugged = json['plugged'] as bool?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..isMailValid = json['isMailValid'] as bool?
          ..dateOfBirth = json['dateOfBirth'] == null
              ? null
              : DateTime.parse(json['dateOfBirth'] as String)
          ..phoneNumber = json['phoneNumber'] as String?
          ..mobileTheme = $enumDecodeNullable(
              _$MobileThemesEnumEnumMap, json['mobileTheme'],
              unknownValue: MobileThemesEnum.artemisUnknown)
          ..placeOfBirth = json['placeOfBirth'] as String?
          ..maritalStatus = $enumDecodeNullable(
              _$MaritalStatusEnumMap, json['maritalStatus'],
              unknownValue: MaritalStatus.artemisUnknown)
          ..newsletterSubs = json['newsletterSubs'] as bool?
          ..hasAutoGeneratedEmail = json['hasAutoGeneratedEmail'] as bool?
          ..phone = json['phone'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>)
          ..picture = json['picture'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..languages = (json['languages'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..nationality = json['nationality'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryType
                  .fromJson(json['nationality'] as Map<String, dynamic>)
          ..billingAddress = (json['billingAddress'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..shippingAddress = (json['shippingAddress'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..residentialAddress = (json['residentialAddress'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..chatContact = (json['chatContact'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..socialMedia = (json['socialMedia'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..socialLoginData = json['socialLoginData'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType
                  .fromJson(json['socialLoginData'] as Map<String, dynamic>)
          ..education = (json['education'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserEducationType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..work = (json['work'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..lived = (json['lived'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..hobbies = (json['hobbies'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..interests = (json['interests'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('apps', instance.apps?.map((e) => _$AppEnumMap[e]!).toList());
  writeNotNull('email', instance.email);
  writeNotNull(
      'roles', instance.roles?.map((e) => _$UserRoleEnumMap[e]!).toList());
  writeNotNull('title', instance.title);
  writeNotNull('about', instance.about);
  writeNotNull('gender', _$GenderEnumMap[instance.gender]);
  writeNotNull('locale', instance.locale);
  writeNotNull('source', _$SourcesEnumEnumMap[instance.source]);
  writeNotNull('status', _$UserStatusEnumMap[instance.status]);
  writeNotNull('lastName', instance.lastName);
  writeNotNull('username', instance.username);
  writeNotNull('firstName', instance.firstName);
  writeNotNull('plugged', instance.plugged);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('isMailValid', instance.isMailValid);
  writeNotNull('dateOfBirth', instance.dateOfBirth?.toIso8601String());
  writeNotNull('phoneNumber', instance.phoneNumber);
  writeNotNull('mobileTheme', _$MobileThemesEnumEnumMap[instance.mobileTheme]);
  writeNotNull('placeOfBirth', instance.placeOfBirth);
  writeNotNull('maritalStatus', _$MaritalStatusEnumMap[instance.maritalStatus]);
  writeNotNull('newsletterSubs', instance.newsletterSubs);
  writeNotNull('hasAutoGeneratedEmail', instance.hasAutoGeneratedEmail);
  writeNotNull('phone', instance.phone?.toJson());
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  writeNotNull(
      'languages', instance.languages?.map((e) => e.toJson()).toList());
  writeNotNull('nationality', instance.nationality?.toJson());
  writeNotNull('billingAddress',
      instance.billingAddress?.map((e) => e.toJson()).toList());
  writeNotNull('shippingAddress',
      instance.shippingAddress?.map((e) => e.toJson()).toList());
  writeNotNull('residentialAddress',
      instance.residentialAddress?.map((e) => e.toJson()).toList());
  writeNotNull(
      'chatContact', instance.chatContact?.map((e) => e.toJson()).toList());
  writeNotNull(
      'socialMedia', instance.socialMedia?.map((e) => e.toJson()).toList());
  writeNotNull('socialLoginData', instance.socialLoginData?.toJson());
  writeNotNull(
      'education', instance.education?.map((e) => e.toJson()).toList());
  writeNotNull('work', instance.work?.map((e) => e.toJson()).toList());
  writeNotNull('lived', instance.lived?.map((e) => e.toJson()).toList());
  writeNotNull('hobbies', instance.hobbies);
  writeNotNull('interests', instance.interests);
  return val;
}

const _$AppEnumMap = {
  App.bosk: 'BOSK',
  App.skuad: 'SKUAD',
  App.figamy: 'FIGAMY',
  App.cockpit: 'COCKPIT',
  App.diktup: 'DIKTUP',
  App.magari: 'MAGARI',
  App.recolda: 'RECOLDA',
  App.sifca: 'SIFCA',
  App.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

const _$UserRoleEnumMap = {
  UserRole.api: 'API',
  UserRole.admin: 'ADMIN',
  UserRole.editor: 'EDITOR',
  UserRole.manager: 'MANAGER',
  UserRole.consumer: 'CONSUMER',
  UserRole.community: 'COMMUNITY',
  UserRole.financial: 'FINANCIAL',
  UserRole.warehouse: 'WAREHOUSE',
  UserRole.commercial: 'COMMERCIAL',
  UserRole.merchandiser: 'MERCHANDISER',
  UserRole.notSpecified: 'NOT_SPECIFIED',
  UserRole.groupModerator: 'GROUP_MODERATOR',
  UserRole.wholesalerOwner: 'WHOLESALER_OWNER',
  UserRole.wholesalerManager: 'WHOLESALER_MANAGER',
  UserRole.manufacturerOwner: 'MANUFACTURER_OWNER',
  UserRole.wholesalerAssistant: 'WHOLESALER_ASSISTANT',
  UserRole.manufacturerManager: 'MANUFACTURER_MANAGER',
  UserRole.manufacturerAssistant: 'MANUFACTURER_ASSISTANT',
  UserRole.sales: 'SALES',
  UserRole.system: 'SYSTEM',
  UserRole.catalog: 'CATALOG',
  UserRole.content: 'CONTENT',
  UserRole.loyalty: 'LOYALTY',
  UserRole.network: 'NETWORK',
  UserRole.customers: 'CUSTOMERS',
  UserRole.inventory: 'INVENTORY',
  UserRole.organization: 'ORGANIZATION',
  UserRole.merchandising: 'MERCHANDISING',
  UserRole.dashboardsSales: 'DASHBOARDS_SALES',
  UserRole.dashboardsFinance: 'DASHBOARDS_FINANCE',
  UserRole.dashboardsAnalytics: 'DASHBOARDS_ANALYTICS',
  UserRole.dashboardsWarehouse: 'DASHBOARDS_WAREHOUSE',
  UserRole.dashboardsMerchandising: 'DASHBOARDS_MERCHANDISING',
  UserRole.posOwner: 'POS_OWNER',
  UserRole.posWaiter: 'POS_WAITER',
  UserRole.posManager: 'POS_MANAGER',
  UserRole.deliveryMan: 'DELIVERY_MAN',
  UserRole.posAssistant: 'POS_ASSISTANT',
  UserRole.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

const _$SourcesEnumEnumMap = {
  SourcesEnum.figamy: 'FIGAMY',
  SourcesEnum.ooredoo: 'OOREDOO',
  SourcesEnum.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

const _$UserStatusEnumMap = {
  UserStatus.online: 'ONLINE',
  UserStatus.away: 'AWAY',
  UserStatus.busy: 'BUSY',
  UserStatus.offline: 'OFFLINE',
  UserStatus.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

const _$MobileThemesEnumEnumMap = {
  MobileThemesEnum.dark: 'DARK',
  MobileThemesEnum.light: 'LIGHT',
  MobileThemesEnum.system: 'SYSTEM',
  MobileThemesEnum.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

const _$MaritalStatusEnumMap = {
  MaritalStatus.single: 'SINGLE',
  MaritalStatus.married: 'MARRIED',
  MaritalStatus.engaged: 'ENGAGED',
  MaritalStatus.widowed: 'WIDOWED',
  MaritalStatus.divorced: 'DIVORCED',
  MaritalStatus.seperated: 'SEPERATED',
  MaritalStatus.inRelationship: 'IN_RELATIONSHIP',
  MaritalStatus.preferNotToSay: 'PREFER_NOT_TO_SAY',
  MaritalStatus.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType()
          ..currency = json['currency'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType
                  .fromJson(json['currency'] as Map<String, dynamic>)
          ..kw$default = json['default'] as bool?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('currency', instance.currency?.toJson());
  writeNotNull('default', instance.kw$default);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType()
          ..day = $enumDecodeNullable(_$DaysEnumMap, json['day'],
              unknownValue: Days.artemisUnknown)
          ..from = json['from'] as String?
          ..to = json['to'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('day', _$DaysEnumMap[instance.day]);
  writeNotNull('from', instance.from);
  writeNotNull('to', instance.to);
  return val;
}

const _$DaysEnumMap = {
  Days.monday: 'MONDAY',
  Days.tuesday: 'TUESDAY',
  Days.wednesday: 'WEDNESDAY',
  Days.thursday: 'THURSDAY',
  Days.friday: 'FRIDAY',
  Days.saturday: 'SATURDAY',
  Days.sunday: 'SUNDAY',
  Days.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$OpeningHoursType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$OpeningHoursTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$OpeningHoursType()
          ..status = $enumDecodeNullable(_$OpeningStatusEnumMap, json['status'],
              unknownValue: OpeningStatus.artemisUnknown)
          ..hours = (json['hours'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$OpeningHoursTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$OpeningHoursType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', _$OpeningStatusEnumMap[instance.status]);
  writeNotNull('hours', instance.hours?.map((e) => e.toJson()).toList());
  return val;
}

const _$OpeningStatusEnumMap = {
  OpeningStatus.alwaysOpen: 'ALWAYS_OPEN',
  OpeningStatus.notAvailable: 'NOT_AVAILABLE',
  OpeningStatus.selectedHours: 'SELECTED_HOURS',
  OpeningStatus.permanentlyClosed: 'PERMANENTLY_CLOSED',
  OpeningStatus.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType()
          ..day = $enumDecodeNullable(_$DaysEnumMap, json['day'],
              unknownValue: Days.artemisUnknown)
          ..from = json['from'] as String?
          ..to = json['to'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('day', _$DaysEnumMap[instance.day]);
  writeNotNull('from', instance.from);
  writeNotNull('to', instance.to);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SpecialOfferType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SpecialOfferTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SpecialOfferType()
          ..offerType = $enumDecodeNullable(
              _$SpecialOffersTypeEnumMap, json['offerType'],
              unknownValue: SpecialOffersType.artemisUnknown)
          ..hours = (json['hours'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SpecialOfferTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SpecialOfferType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('offerType', _$SpecialOffersTypeEnumMap[instance.offerType]);
  writeNotNull('hours', instance.hours?.map((e) => e.toJson()).toList());
  return val;
}

const _$SpecialOffersTypeEnumMap = {
  SpecialOffersType.bar: 'BAR',
  SpecialOffersType.lunch: 'LUNCH',
  SpecialOffersType.brunch: 'BRUNCH',
  SpecialOffersType.dinner: 'DINNER',
  SpecialOffersType.breakfast: 'BREAKFAST',
  SpecialOffersType.happyHour: 'HAPPY_HOUR',
  SpecialOffersType.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$LonLatType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$LonLatType()
          ..type = json['type'] as String?
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$LonLatTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', instance.type);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = (json['population'] as num?)?.toDouble()
          ..ascii = json['ascii'] as String?
          ..lat = (json['lat'] as num?)?.toDouble()
          ..lng = (json['lng'] as num?)?.toDouble()
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..addressLine = json['addressLine'] as String?
          ..location = json['location'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('addressLine', instance.addressLine);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType()
          ..size48 = json['size48'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size96 = json['size96'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size96'] as Map<String, dynamic>)
          ..size144 = json['size144'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size144'] as Map<String, dynamic>)
          ..size240 = json['size240'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size240'] as Map<String, dynamic>)
          ..size480 = json['size480'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size480'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size96', instance.size96?.toJson());
  writeNotNull('size144', instance.size144?.toJson());
  writeNotNull('size240', instance.size240?.toJson());
  writeNotNull('size480', instance.size480?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType()
          ..svg = json['svg'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
                  .fromJson(json['png'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType()
          ..style = $enumDecode(_$SocialImageStyleEnumEnumMap, json['style'],
              unknownValue: SocialImageStyleEnum.artemisUnknown)
          ..images = (json['images'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType
            instance) {
  final val = <String, dynamic>{
    'style': _$SocialImageStyleEnumEnumMap[instance.style]!,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('images', instance.images?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..fontIcon = json['fontIcon'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..images = (json['images'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('fontIcon', instance.fontIcon);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('images', instance.images?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType()
          ..name = json['name'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType
                  .fromJson(json['name'] as Map<String, dynamic>)
          ..value = json['value'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name?.toJson());
  writeNotNull('value', instance.value);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType()
          ..type = json['type'] as String?
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', instance.type);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = (json['population'] as num?)?.toDouble()
          ..ascii = json['ascii'] as String?
          ..lat = (json['lat'] as num?)?.toDouble()
          ..lng = (json['lng'] as num?)?.toDouble()
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..addressLine = json['addressLine'] as String?
          ..location = json['location'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('addressLine', instance.addressLine);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = json['type'] as String?
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', instance.type);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = (json['population'] as num?)?.toDouble()
          ..ascii = json['ascii'] as String?
          ..lat = (json['lat'] as num?)?.toDouble()
          ..lng = (json['lng'] as num?)?.toDouble()
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..addressLine = json['addressLine'] as String?
          ..location = json['location'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('addressLine', instance.addressLine);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

const _$BankDetailsHolderTypeEnumEnumMap = {
  BankDetailsHolderTypeEnum.private: 'PRIVATE',
  BankDetailsHolderTypeEnum.company: 'COMPANY',
  BankDetailsHolderTypeEnum.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSCategoryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSCategoryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSCategoryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSCategoryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSCategoryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSCategoryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSCategoryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSCategoryType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..mapPicture = json['mapPicture'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..picture = json['picture'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSCategoryType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSCategoryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSCategoryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('mapPicture', instance.mapPicture);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('picture', instance.picture?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSServicesType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSServicesTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSServicesType()
          ..id = json['id'] as String?
          ..index = json['index'] as int?
          ..name = json['name'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSServicesTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSServicesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('id', instance.id);
  writeNotNull('index', instance.index);
  writeNotNull('name', instance.name);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType()
          ..alt = json['alt'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt'] as Map<String, dynamic>)
          ..alt2x = json['alt2x'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt2x'] as Map<String, dynamic>)
          ..alt128 = json['alt_128'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt_128'] as Map<String, dynamic>)
          ..alt256 = json['alt_256'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt_256'] as Map<String, dynamic>)
          ..alt512 = json['alt_512'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt_512'] as Map<String, dynamic>)
          ..cardFlat = json['card_flat'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat'] as Map<String, dynamic>)
          ..cardFlat2x = json['card_flat2x'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat2x'] as Map<String, dynamic>)
          ..cardFlat128 = json['card_flat_128'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat_128'] as Map<String, dynamic>)
          ..cardFlat256 = json['card_flat_256'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat_256'] as Map<String, dynamic>)
          ..cardFlat512 = json['card_flat_512'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat_512'] as Map<String, dynamic>)
          ..dark = json['dark'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark'] as Map<String, dynamic>)
          ..dark2x = json['dark2x'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark2x'] as Map<String, dynamic>)
          ..dark128 = json['dark_128'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark_128'] as Map<String, dynamic>)
          ..dark256 = json['dark_256'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark_256'] as Map<String, dynamic>)
          ..dark512 = json['dark_512'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark_512'] as Map<String, dynamic>)
          ..flat = json['flat'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat'] as Map<String, dynamic>)
          ..flat2x = json['flat2x'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat2x'] as Map<String, dynamic>)
          ..flat128 = json['flat_128'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat_128'] as Map<String, dynamic>)
          ..flat256 = json['flat_256'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat_256'] as Map<String, dynamic>)
          ..flat512 = json['flat_512'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat_512'] as Map<String, dynamic>)
          ..light = json['light'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light'] as Map<String, dynamic>)
          ..light2x = json['light2x'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light2x'] as Map<String, dynamic>)
          ..light128 = json['light_128'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light_128'] as Map<String, dynamic>)
          ..light256 = json['light_256'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light_256'] as Map<String, dynamic>)
          ..light512 = json['light_512'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light_512'] as Map<String, dynamic>)
          ..kw$default = json['default'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..default2x = json['default2x'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default2x'] as Map<String, dynamic>)
          ..default128 = json['default_128'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default_128'] as Map<String, dynamic>)
          ..default256 = json['default_256'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default_256'] as Map<String, dynamic>)
          ..default512 = json['default_512'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default_512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('alt', instance.alt?.toJson());
  writeNotNull('alt2x', instance.alt2x?.toJson());
  writeNotNull('alt_128', instance.alt128?.toJson());
  writeNotNull('alt_256', instance.alt256?.toJson());
  writeNotNull('alt_512', instance.alt512?.toJson());
  writeNotNull('card_flat', instance.cardFlat?.toJson());
  writeNotNull('card_flat2x', instance.cardFlat2x?.toJson());
  writeNotNull('card_flat_128', instance.cardFlat128?.toJson());
  writeNotNull('card_flat_256', instance.cardFlat256?.toJson());
  writeNotNull('card_flat_512', instance.cardFlat512?.toJson());
  writeNotNull('dark', instance.dark?.toJson());
  writeNotNull('dark2x', instance.dark2x?.toJson());
  writeNotNull('dark_128', instance.dark128?.toJson());
  writeNotNull('dark_256', instance.dark256?.toJson());
  writeNotNull('dark_512', instance.dark512?.toJson());
  writeNotNull('flat', instance.flat?.toJson());
  writeNotNull('flat2x', instance.flat2x?.toJson());
  writeNotNull('flat_128', instance.flat128?.toJson());
  writeNotNull('flat_256', instance.flat256?.toJson());
  writeNotNull('flat_512', instance.flat512?.toJson());
  writeNotNull('light', instance.light?.toJson());
  writeNotNull('light2x', instance.light2x?.toJson());
  writeNotNull('light_128', instance.light128?.toJson());
  writeNotNull('light_256', instance.light256?.toJson());
  writeNotNull('light_512', instance.light512?.toJson());
  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('default2x', instance.default2x?.toJson());
  writeNotNull('default_128', instance.default128?.toJson());
  writeNotNull('default_256', instance.default256?.toJson());
  writeNotNull('default_512', instance.default512?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType()
          ..alt = json['alt'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['alt'] as Map<String, dynamic>)
          ..cardFlat = json['card_flat'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['card_flat'] as Map<String, dynamic>)
          ..dark = json['dark'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['dark'] as Map<String, dynamic>)
          ..flat = json['flat'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['flat'] as Map<String, dynamic>)
          ..light = json['light'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['light'] as Map<String, dynamic>)
          ..kw$default = json['default'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('alt', instance.alt?.toJson());
  writeNotNull('card_flat', instance.cardFlat?.toJson());
  writeNotNull('dark', instance.dark?.toJson());
  writeNotNull('flat', instance.flat?.toJson());
  writeNotNull('light', instance.light?.toJson());
  writeNotNull('default', instance.kw$default?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType()
          ..png = json['png'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..svg = json['svg'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType
                  .fromJson(json['svg'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('png', instance.png?.toJson());
  writeNotNull('svg', instance.svg?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..paymentType = $enumDecodeNullable(
              _$PaymentTypeEnumEnumMap, json['paymentType'],
              unknownValue: PaymentTypeEnum.artemisUnknown)
          ..materialIcon = json['materialIcon'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..images = json['images'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType
                  .fromJson(json['images'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('paymentType', _$PaymentTypeEnumEnumMap[instance.paymentType]);
  writeNotNull('materialIcon', instance.materialIcon);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('images', instance.images?.toJson());
  return val;
}

const _$PaymentTypeEnumEnumMap = {
  PaymentTypeEnum.creditCard: 'CREDIT_CARD',
  PaymentTypeEnum.payment: 'PAYMENT',
  PaymentTypeEnum.methods: 'METHODS',
  PaymentTypeEnum.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType()
          ..type = json['type'] as String?
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', instance.type);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = (json['population'] as num?)?.toDouble()
          ..ascii = json['ascii'] as String?
          ..lat = (json['lat'] as num?)?.toDouble()
          ..lng = (json['lng'] as num?)?.toDouble()
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..addressLine = json['addressLine'] as String?
          ..location = json['location'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('addressLine', instance.addressLine);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = json['type'] as String?
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', instance.type);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = (json['population'] as num?)?.toDouble()
          ..ascii = json['ascii'] as String?
          ..lat = (json['lat'] as num?)?.toDouble()
          ..lng = (json['lng'] as num?)?.toDouble()
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..addressLine = json['addressLine'] as String?
          ..location = json['location'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('addressLine', instance.addressLine);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType()
          ..id = json['id'] as String
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..programName = json['programName'] as String?
          ..picture = json['picture'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..company = json['company'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'createdAt': instance.createdAt.toIso8601String(),
    'updatedAt': instance.updatedAt.toIso8601String(),
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('programName', instance.programName);
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('company', instance.company?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType()
          ..to = DateTime.parse(json['to'] as String)
          ..from = DateTime.parse(json['from'] as String)
          ..loyaltyProgram = json['loyaltyProgram'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType
                  .fromJson(json['loyaltyProgram'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType
            instance) {
  final val = <String, dynamic>{
    'to': instance.to.toIso8601String(),
    'from': instance.from.toIso8601String(),
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('loyaltyProgram', instance.loyaltyProgram?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType()
          ..id = json['id'] as String
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..name = json['name'] as String?
          ..title = json['title'] as String?
          ..email = (json['email'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..phone = (json['phone'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..website = json['website'] as String?
          ..subtitle = json['subtitle'] as String?
          ..currencies = (json['currencies'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..turnover = json['turnover'] as String?
          ..reference = json['reference'] as String?
          ..published = json['published'] as bool?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..brandColor = json['brandColor'] as String?
          ..isFollowed = json['isFollowed'] as bool?
          ..description = json['description'] as String?
          ..contactEmails = (json['contactEmails'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..averageCustomers = (json['averageCustomers'] as num?)?.toDouble()
          ..languages = (json['languages'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..picture = json['picture'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..outsidePictures = (json['outsidePictures'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..insidePictures = (json['insidePictures'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..openingHours = json['openingHours'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$OpeningHoursType
                  .fromJson(json['openingHours'] as Map<String, dynamic>)
          ..specialOffers = (json['specialOffers'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SpecialOfferType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..locations = (json['locations'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..chatContact = (json['chatContact'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..socialMedia = (json['socialMedia'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..company = json['company'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>)
          ..posCategory = (json['posCategory'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSCategoryType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..services = (json['services'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSServicesType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..paymentMethods = (json['paymentMethods'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..loyaltyPrograms = (json['loyaltyPrograms'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('tags', instance.tags);
  writeNotNull('name', instance.name);
  writeNotNull('title', instance.title);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone);
  writeNotNull('website', instance.website);
  writeNotNull('subtitle', instance.subtitle);
  writeNotNull(
      'currencies', instance.currencies?.map((e) => e.toJson()).toList());
  writeNotNull('turnover', instance.turnover);
  writeNotNull('reference', instance.reference);
  writeNotNull('published', instance.published);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('brandColor', instance.brandColor);
  writeNotNull('isFollowed', instance.isFollowed);
  writeNotNull('description', instance.description);
  writeNotNull('contactEmails', instance.contactEmails);
  writeNotNull('averageCustomers', instance.averageCustomers);
  writeNotNull(
      'languages', instance.languages?.map((e) => e.toJson()).toList());
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('outsidePictures',
      instance.outsidePictures?.map((e) => e.toJson()).toList());
  writeNotNull('insidePictures',
      instance.insidePictures?.map((e) => e.toJson()).toList());
  writeNotNull('openingHours', instance.openingHours?.toJson());
  writeNotNull(
      'specialOffers', instance.specialOffers?.map((e) => e.toJson()).toList());
  writeNotNull(
      'locations', instance.locations?.map((e) => e.toJson()).toList());
  writeNotNull(
      'chatContact', instance.chatContact?.map((e) => e.toJson()).toList());
  writeNotNull(
      'socialMedia', instance.socialMedia?.map((e) => e.toJson()).toList());
  writeNotNull('company', instance.company?.toJson());
  writeNotNull(
      'posCategory', instance.posCategory?.map((e) => e.toJson()).toList());
  writeNotNull('services', instance.services?.map((e) => e.toJson()).toList());
  writeNotNull('paymentMethods',
      instance.paymentMethods?.map((e) => e.toJson()).toList());
  writeNotNull('loyaltyPrograms',
      instance.loyaltyPrograms?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType()
          ..currency = json['currency'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType
                  .fromJson(json['currency'] as Map<String, dynamic>)
          ..kw$default = json['default'] as bool?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('currency', instance.currency?.toJson());
  writeNotNull('default', instance.kw$default);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$IPhoneType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$IPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$IPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$IPhoneTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$IPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$LonLatType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$LonLatType()
          ..type = json['type'] as String?
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$LonLatTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', instance.type);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = (json['population'] as num?)?.toDouble()
          ..ascii = json['ascii'] as String?
          ..lat = (json['lat'] as num?)?.toDouble()
          ..lng = (json['lng'] as num?)?.toDouble()
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..addressLine = json['addressLine'] as String?
          ..location = json['location'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('addressLine', instance.addressLine);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType()
          ..type = json['type'] as String?
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', instance.type);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = (json['population'] as num?)?.toDouble()
          ..ascii = json['ascii'] as String?
          ..lat = (json['lat'] as num?)?.toDouble()
          ..lng = (json['lng'] as num?)?.toDouble()
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..addressLine = json['addressLine'] as String?
          ..location = json['location'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('addressLine', instance.addressLine);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyLegalType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyLegalTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = json['type'] as String?
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', instance.type);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = (json['population'] as num?)?.toDouble()
          ..ascii = json['ascii'] as String?
          ..lat = (json['lat'] as num?)?.toDouble()
          ..lng = (json['lng'] as num?)?.toDouble()
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..addressLine = json['addressLine'] as String?
          ..location = json['location'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('addressLine', instance.addressLine);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..email = json['email'] as String?
          ..website = json['website'] as String?
          ..currencies = (json['currencies'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..phone = json['phone'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$IPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>)
          ..fax = json['fax'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$IPhoneType
                  .fromJson(json['fax'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..description = json['description'] as String?
          ..contactEmails = (json['contactEmails'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..address = json['address'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..company = json['company'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>)
          ..picture = json['picture'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('email', instance.email);
  writeNotNull('website', instance.website);
  writeNotNull(
      'currencies', instance.currencies?.map((e) => e.toJson()).toList());
  writeNotNull('phone', instance.phone?.toJson());
  writeNotNull('fax', instance.fax?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('description', instance.description);
  writeNotNull('contactEmails', instance.contactEmails);
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('company', instance.company?.toJson());
  writeNotNull('picture', instance.picture?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType()
          ..currency = json['currency'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType
                  .fromJson(json['currency'] as Map<String, dynamic>)
          ..kw$default = json['default'] as bool?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('currency', instance.currency?.toJson());
  writeNotNull('default', instance.kw$default);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$LonLatType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$LonLatType()
          ..type = json['type'] as String?
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$LonLatTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', instance.type);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = (json['population'] as num?)?.toDouble()
          ..ascii = json['ascii'] as String?
          ..lat = (json['lat'] as num?)?.toDouble()
          ..lng = (json['lng'] as num?)?.toDouble()
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..addressLine = json['addressLine'] as String?
          ..location = json['location'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('addressLine', instance.addressLine);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType()
          ..type = json['type'] as String?
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', instance.type);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = (json['population'] as num?)?.toDouble()
          ..ascii = json['ascii'] as String?
          ..lat = (json['lat'] as num?)?.toDouble()
          ..lng = (json['lng'] as num?)?.toDouble()
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..addressLine = json['addressLine'] as String?
          ..location = json['location'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('addressLine', instance.addressLine);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyLegalTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = json['type'] as String?
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', instance.type);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = (json['population'] as num?)?.toDouble()
          ..ascii = json['ascii'] as String?
          ..lat = (json['lat'] as num?)?.toDouble()
          ..lng = (json['lng'] as num?)?.toDouble()
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..addressLine = json['addressLine'] as String?
          ..location = json['location'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('addressLine', instance.addressLine);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType()
          ..id = json['id'] as String
          ..email = json['email'] as String?
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..website = json['website'] as String?
          ..contactEmails = (json['contactEmails'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..currencies = (json['currencies'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..picture = json['picture'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..company = json['company'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerTypeToJson(
        WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('email', instance.email);
  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('website', instance.website);
  writeNotNull('contactEmails', instance.contactEmails);
  writeNotNull(
      'currencies', instance.currencies?.map((e) => e.toJson()).toList());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('company', instance.company?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$OwnerDtoType
    _$WalletByOwner$Query$WalletDtoType$OwnerDtoTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$OwnerDtoType()
          ..user = json['user'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType
                  .fromJson(json['user'] as Map<String, dynamic>)
          ..pos = json['pos'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType
                  .fromJson(json['pos'] as Map<String, dynamic>)
          ..wholesaler = json['wholesaler'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType
                  .fromJson(json['wholesaler'] as Map<String, dynamic>)
          ..manufacturer = json['manufacturer'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType
                  .fromJson(json['manufacturer'] as Map<String, dynamic>);

Map<String, dynamic> _$WalletByOwner$Query$WalletDtoType$OwnerDtoTypeToJson(
    WalletByOwner$Query$WalletDtoType$OwnerDtoType instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('user', instance.user?.toJson());
  writeNotNull('pos', instance.pos?.toJson());
  writeNotNull('wholesaler', instance.wholesaler?.toJson());
  writeNotNull('manufacturer', instance.manufacturer?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaType$PictureType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionType()
          ..enable = json['enable'] as bool?
          ..action = $enumDecodeNullable(
              _$PredefinedActionsEnumEnumMap, json['action'],
              unknownValue: PredefinedActionsEnum.artemisUnknown);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('enable', instance.enable);
  writeNotNull('action', _$PredefinedActionsEnumEnumMap[instance.action]);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType()
          ..id = json['id'] as String
          ..title = json['title'] as String?
          ..description = json['description'] as String?
          ..icon = json['icon'] as String?
          ..theme = json['theme'] as String?
          ..media = json['media'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..predefined = json['predefined'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionType
                  .fromJson(json['predefined'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  writeNotNull('icon', instance.icon);
  writeNotNull('theme', instance.theme);
  writeNotNull('media', instance.media?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('predefined', instance.predefined?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType()
          ..id = json['id'] as String
          ..title = json['title'] as String?
          ..description = json['description'] as String?
          ..icon = json['icon'] as String?
          ..cost = json['cost'] as int?
          ..kind = $enumDecodeNullable(_$JockerKindEnumEnumMap, json['kind'],
              unknownValue: JockerKindEnum.artemisUnknown)
          ..media = json['media'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  writeNotNull('icon', instance.icon);
  writeNotNull('cost', instance.cost);
  writeNotNull('kind', _$JockerKindEnumEnumMap[instance.kind]);
  writeNotNull('media', instance.media?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJockerFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker()
          ..jocker = json['jocker'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType
                  .fromJson(json['jocker'] as Map<String, dynamic>)
          ..cost = json['cost'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJockerToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('jocker', instance.jocker?.toJson());
  writeNotNull('cost', instance.cost);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType()
          ..id = json['id'] as String
          ..title = json['title'] as String?
          ..description = json['description'] as String?
          ..rules = json['rules'] as String?
          ..icon = json['icon'] as String?
          ..media = json['media'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..minStep = json['minStep'] as int?
          ..minCheckPoints = json['minCheckPoints'] as int?
          ..minGiftValue = json['minGiftValue'] as String?
          ..claimReward = json['claimReward'] as int?
          ..activityTypes = (json['activityTypes'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..jockers = (json['jockers'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..fees = json['fees'] as String?
          ..enable = json['enable'] as bool?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  writeNotNull('rules', instance.rules);
  writeNotNull('icon', instance.icon);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('minStep', instance.minStep);
  writeNotNull('minCheckPoints', instance.minCheckPoints);
  writeNotNull('minGiftValue', instance.minGiftValue);
  writeNotNull('claimReward', instance.claimReward);
  writeNotNull(
      'activityTypes', instance.activityTypes?.map((e) => e.toJson()).toList());
  writeNotNull('jockers', instance.jockers?.map((e) => e.toJson()).toList());
  writeNotNull('fees', instance.fees);
  writeNotNull('enable', instance.enable);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType$PhoneType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType$PhoneTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType$PictureType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType()
          ..id = json['id'] as String
          ..email = json['email'] as String?
          ..gender = $enumDecodeNullable(_$GenderEnumMap, json['gender'],
              unknownValue: Gender.artemisUnknown)
          ..lastName = json['lastName'] as String?
          ..username = json['username'] as String?
          ..firstName = json['firstName'] as String?
          ..phone = json['phone'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>)
          ..picture = json['picture'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('email', instance.email);
  writeNotNull('gender', _$GenderEnumMap[instance.gender]);
  writeNotNull('lastName', instance.lastName);
  writeNotNull('username', instance.username);
  writeNotNull('firstName', instance.firstName);
  writeNotNull('phone', instance.phone?.toJson());
  writeNotNull('picture', instance.picture?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeWinner
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeWinnerFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeWinner()
          ..rank = json['rank'] as int
          ..reward = (json['reward'] as num?)?.toDouble();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeWinnerToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeWinner
            instance) {
  final val = <String, dynamic>{
    'rank': instance.rank,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('reward', instance.reward);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeCheckpoint
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeCheckpointFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeCheckpoint()
          ..checkpoint = json['checkpoint'] as int?
          ..amount = (json['amount'] as num?)?.toDouble();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeCheckpointToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeCheckpoint
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('checkpoint', instance.checkpoint);
  writeNotNull('amount', instance.amount);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldType()
          ..field = $enumDecodeNullable(
              _$AudienceCriteriaFieldEnumEnumMap, json['field'],
              unknownValue: AudienceCriteriaFieldEnum.artemisUnknown)
          ..operators = (json['operators'] as List<dynamic>?)
              ?.map((e) => $enumDecode(_$OperatorEnumEnumMap, e,
                  unknownValue: OperatorEnum.artemisUnknown))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('field', _$AudienceCriteriaFieldEnumEnumMap[instance.field]);
  writeNotNull('operators',
      instance.operators?.map((e) => _$OperatorEnumEnumMap[e]!).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType()
          ..id = json['id'] as String
          ..icon = json['icon'] as String?
          ..title = json['title'] as String?
          ..style = json['style'] as String?
          ..enable = json['enable'] as bool?
          ..description = json['description'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..media = json['media'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..fields = (json['fields'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('icon', instance.icon);
  writeNotNull('title', instance.title);
  writeNotNull('style', instance.style);
  writeNotNull('enable', instance.enable);
  writeNotNull('description', instance.description);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('fields', instance.fields?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionType()
          ..enable = json['enable'] as bool?
          ..action = $enumDecodeNullable(
              _$PredefinedActionsEnumEnumMap, json['action'],
              unknownValue: PredefinedActionsEnum.artemisUnknown);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('enable', instance.enable);
  writeNotNull('action', _$PredefinedActionsEnumEnumMap[instance.action]);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType()
          ..id = json['id'] as String
          ..title = json['title'] as String?
          ..description = json['description'] as String?
          ..icon = json['icon'] as String?
          ..theme = json['theme'] as String?
          ..media = json['media'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..predefined = json['predefined'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionType
                  .fromJson(json['predefined'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  writeNotNull('icon', instance.icon);
  writeNotNull('theme', instance.theme);
  writeNotNull('media', instance.media?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('predefined', instance.predefined?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxType()
          ..min = json['min'] as int?
          ..max = json['max'] as int?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('min', instance.min);
  writeNotNull('max', instance.max);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingType()
          ..max = json['max'] as int?
          ..text = json['text'] as bool?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('max', instance.max);
  writeNotNull('text', instance.text);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesType()
          ..minValue = json['minValue'] as int?
          ..maxValue = json['maxValue'] as int?
          ..score = json['score'] as bool?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('minValue', instance.minValue);
  writeNotNull('maxValue', instance.maxValue);
  writeNotNull('score', instance.score);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType()
          ..output = $enumDecodeNullable(
              _$CalculatedOutputEnumEnumMap, json['output'],
              unknownValue: CalculatedOutputEnum.artemisUnknown)
          ..kw$show = json['show'] as bool?
          ..formula = json['formula'] as String?
          ..values = (json['values'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('output', _$CalculatedOutputEnumEnumMap[instance.output]);
  writeNotNull('show', instance.kw$show);
  writeNotNull('formula', instance.formula);
  writeNotNull('values', instance.values?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateType()
          ..outdated = json['outdated'] as bool?
          ..interval = json['interval'] as bool?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('outdated', instance.outdated);
  writeNotNull('interval', instance.interval);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactType()
          ..firstname = json['firstname'] as bool?
          ..lastname = json['lastname'] as bool?
          ..email = json['email'] as bool?
          ..phone = json['phone'] as bool?
          ..description = json['description'] as bool?
          ..address = json['address'] as bool?
          ..birthday = json['birthday'] as bool?
          ..gender = json['gender'] as bool?
          ..civility = json['civility'] as bool?
          ..profession = json['profession'] as bool?
          ..academicLevel = json['academicLevel'] as bool?
          ..language = json['language'] as bool?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('firstname', instance.firstname);
  writeNotNull('lastname', instance.lastname);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone);
  writeNotNull('description', instance.description);
  writeNotNull('address', instance.address);
  writeNotNull('birthday', instance.birthday);
  writeNotNull('gender', instance.gender);
  writeNotNull('civility', instance.civility);
  writeNotNull('profession', instance.profession);
  writeNotNull('academicLevel', instance.academicLevel);
  writeNotNull('language', instance.language);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberType()
          ..minValue = json['minValue'] as int?
          ..maxValue = json['maxValue'] as int?
          ..interval = json['interval'] as bool?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('minValue', instance.minValue);
  writeNotNull('maxValue', instance.maxValue);
  writeNotNull('interval', instance.interval);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsType()
          ..name = json['name'] as String?
          ..type = json['type'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('type', instance.type);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType()
          ..link = json['link'] as int?
          ..method = $enumDecodeNullable(_$ApiMethodsEnumMap, json['method'],
              unknownValue: ApiMethods.artemisUnknown)
          ..auth = json['auth'] as String?
          ..secret = json['secret'] as String?
          ..params = (json['params'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('link', instance.link);
  writeNotNull('method', _$ApiMethodsEnumMap[instance.method]);
  writeNotNull('auth', instance.auth);
  writeNotNull('secret', instance.secret);
  writeNotNull('params', instance.params?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixType()
          ..lines = json['lines'] as String?
          ..columns = json['columns'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('lines', instance.lines);
  writeNotNull('columns', instance.columns);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleType()
          ..leftLabel = json['leftLabel'] as String?
          ..rightLabel = json['rightLabel'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('leftLabel', instance.leftLabel);
  writeNotNull('rightLabel', instance.rightLabel);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoType()
          ..item = json['item'] as String
          ..enable = json['enable'] as bool?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoType
            instance) {
  final val = <String, dynamic>{
    'item': instance.item,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('enable', instance.enable);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepType()
          ..id = json['id'] as String;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepTypeToJson(
            WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepType
                instance) =>
        <String, dynamic>{
          'id': instance.id,
        };

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType()
          ..id = json['id'] as String
          ..order = json['order'] as int?
          ..title = json['title'] as String?
          ..choices = (json['choices'] as List<dynamic>)
              .map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..mandatory = json['mandatory'] as bool?
          ..type = $enumDecodeNullable(_$QuestionTypeEnumEnumMap, json['type'],
              unknownValue: QuestionTypeEnum.artemisUnknown)
          ..challengeStep = json['challengeStep'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepType
                  .fromJson(json['challengeStep'] as Map<String, dynamic>)
          ..points = json['points'] as int?
          ..score = json['score'] as bool?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('order', instance.order);
  writeNotNull('title', instance.title);
  val['choices'] = instance.choices.map((e) => e.toJson()).toList();
  writeNotNull('mandatory', instance.mandatory);
  writeNotNull('type', _$QuestionTypeEnumEnumMap[instance.type]);
  writeNotNull('challengeStep', instance.challengeStep?.toJson());
  writeNotNull('points', instance.points);
  writeNotNull('score', instance.score);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType()
          ..maxResponses = (json['maxResponses'] as num?)?.toDouble()
          ..personalised = json['personalised'] as bool?
          ..unique = json['unique'] as bool?
          ..random = json['random'] as bool?
          ..leaderboard = json['leaderboard'] as bool?
          ..api = json['api'] as bool?
          ..image = json['image'] as bool?
          ..interaction = json['interaction'] as bool?
          ..suggestions = json['suggestions'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType
                  .fromJson(json['suggestions'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('maxResponses', instance.maxResponses);
  writeNotNull('personalised', instance.personalised);
  writeNotNull('unique', instance.unique);
  writeNotNull('random', instance.random);
  writeNotNull('leaderboard', instance.leaderboard);
  writeNotNull('api', instance.api);
  writeNotNull('image', instance.image);
  writeNotNull('interaction', instance.interaction);
  writeNotNull('suggestions', instance.suggestions?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyType()
          ..levels = json['levels'] as int?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('levels', instance.levels);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreType()
          ..min = json['min'] as int?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('min', instance.min);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadType()
          ..url = json['url'] as String?
          ..image = json['image'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('url', instance.url);
  writeNotNull('image', instance.image);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType()
          ..rank = json['rank'] as int?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('rank', instance.rank);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType()
          ..verification = json['verification'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType
                  .fromJson(json['verification'] as Map<String, dynamic>)
          ..verified = json['verified'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType
                  .fromJson(json['verified'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('verification', instance.verification?.toJson());
  writeNotNull('verified', instance.verified?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType()
          ..number = json['number'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType
                  .fromJson(json['number'] as Map<String, dynamic>)
          ..email = json['email'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType
                  .fromJson(json['email'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number?.toJson());
  writeNotNull('email', instance.email?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoType()
          ..minSeconds = json['minSeconds'] as int?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('minSeconds', instance.minSeconds);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType()
          ..size48 = json['size48'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size96 = json['size96'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size96'] as Map<String, dynamic>)
          ..size144 = json['size144'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size144'] as Map<String, dynamic>)
          ..size240 = json['size240'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size240'] as Map<String, dynamic>)
          ..size480 = json['size480'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size480'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size96', instance.size96?.toJson());
  writeNotNull('size144', instance.size144?.toJson());
  writeNotNull('size240', instance.size240?.toJson());
  writeNotNull('size480', instance.size480?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType()
          ..svg = json['svg'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
                  .fromJson(json['png'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType()
          ..style = $enumDecode(_$SocialImageStyleEnumEnumMap, json['style'],
              unknownValue: SocialImageStyleEnum.artemisUnknown)
          ..images = (json['images'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType
            instance) {
  final val = <String, dynamic>{
    'style': _$SocialImageStyleEnumEnumMap[instance.style]!,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('images', instance.images?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..fontIcon = json['fontIcon'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..images = (json['images'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('fontIcon', instance.fontIcon);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('images', instance.images?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType()
          ..socialMedia = json['socialMedia'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType
                  .fromJson(json['socialMedia'] as Map<String, dynamic>)
          ..action = $enumDecodeNullable(
              _$SocialActionEnumEnumMap, json['action'],
              unknownValue: SocialActionEnum.artemisUnknown)
          ..socialContent = $enumDecodeNullable(
              _$SocialContentTypeEnumEnumMap, json['socialContent'],
              unknownValue: SocialContentTypeEnum.artemisUnknown)
          ..url = json['url'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('socialMedia', instance.socialMedia?.toJson());
  writeNotNull('action', _$SocialActionEnumEnumMap[instance.action]);
  writeNotNull(
      'socialContent', _$SocialContentTypeEnumEnumMap[instance.socialContent]);
  writeNotNull('url', instance.url);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadType()
          ..playstore = json['playstore'] as String?
          ..appstore = json['appstore'] as String?
          ..appgallery = json['appgallery'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('playstore', instance.playstore);
  writeNotNull('appstore', instance.appstore);
  writeNotNull('appgallery', instance.appgallery);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType()
          ..textBox = json['textBox'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxType
                  .fromJson(json['textBox'] as Map<String, dynamic>)
          ..rating = json['rating'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingType
                  .fromJson(json['rating'] as Map<String, dynamic>)
          ..calculated = json['calculated'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType
                  .fromJson(json['calculated'] as Map<String, dynamic>)
          ..date = json['date'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateType
                  .fromJson(json['date'] as Map<String, dynamic>)
          ..contact = json['contact'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..number = json['number'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberType
                  .fromJson(json['number'] as Map<String, dynamic>)
          ..api = json['api'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType
                  .fromJson(json['api'] as Map<String, dynamic>)
          ..matrix = json['matrix'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixType
                  .fromJson(json['matrix'] as Map<String, dynamic>)
          ..toggle = json['toggle'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleType
                  .fromJson(json['toggle'] as Map<String, dynamic>)
          ..choices = json['choices'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType
                  .fromJson(json['choices'] as Map<String, dynamic>)
          ..smiley = json['smiley'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyType
                  .fromJson(json['smiley'] as Map<String, dynamic>)
          ..score = json['score'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreType
                  .fromJson(json['score'] as Map<String, dynamic>)
          ..lead = json['lead'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadType
                  .fromJson(json['lead'] as Map<String, dynamic>)
          ..verification = json['verification'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType
                  .fromJson(json['verification'] as Map<String, dynamic>)
          ..video = json['video'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoType
                  .fromJson(json['video'] as Map<String, dynamic>)
          ..socialMedia = json['socialMedia'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType
                  .fromJson(json['socialMedia'] as Map<String, dynamic>)
          ..appDownload = json['appDownload'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadType
                  .fromJson(json['appDownload'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('textBox', instance.textBox?.toJson());
  writeNotNull('rating', instance.rating?.toJson());
  writeNotNull('calculated', instance.calculated?.toJson());
  writeNotNull('date', instance.date?.toJson());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('number', instance.number?.toJson());
  writeNotNull('api', instance.api?.toJson());
  writeNotNull('matrix', instance.matrix?.toJson());
  writeNotNull('toggle', instance.toggle?.toJson());
  writeNotNull('choices', instance.choices?.toJson());
  writeNotNull('smiley', instance.smiley?.toJson());
  writeNotNull('score', instance.score?.toJson());
  writeNotNull('lead', instance.lead?.toJson());
  writeNotNull('verification', instance.verification?.toJson());
  writeNotNull('video', instance.video?.toJson());
  writeNotNull('socialMedia', instance.socialMedia?.toJson());
  writeNotNull('appDownload', instance.appDownload?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType()
          ..id = json['id'] as String
          ..activityType = json['activityType'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType
                  .fromJson(json['activityType'] as Map<String, dynamic>)
          ..required = json['required'] as bool?
          ..definition = json['definition'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType
                  .fromJson(json['definition'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('activityType', instance.activityType?.toJson());
  writeNotNull('required', instance.required);
  writeNotNull('definition', instance.definition?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType()
          ..value = $enumDecodeNullable(
              _$AudienceCriteriaFieldEnumEnumMap, json['value'],
              unknownValue: AudienceCriteriaFieldEnum.artemisUnknown)
          ..action = json['action'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType
                  .fromJson(json['action'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('value', _$AudienceCriteriaFieldEnumEnumMap[instance.value]);
  writeNotNull('action', instance.action?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathType()
          ..lat = (json['lat'] as num).toDouble()
          ..lng = (json['lng'] as num).toDouble()
          ..order = (json['order'] as num).toDouble();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathTypeToJson(
            WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathType
                instance) =>
        <String, dynamic>{
          'lat': instance.lat,
          'lng': instance.lng,
          'order': instance.order,
        };

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType()
          ..radius = (json['radius'] as num?)?.toDouble()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..paths = (json['paths'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('radius', instance.radius);
  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('paths', instance.paths?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType()
          ..id = json['id'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = (json['population'] as num?)?.toDouble()
          ..ascii = json['ascii'] as String?
          ..lat = (json['lat'] as num?)?.toDouble()
          ..lng = (json['lng'] as num?)?.toDouble()
          ..country = json['country'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksType()
          ..discount = json['discount'] as String
          ..description = json['description'] as String?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksType
            instance) {
  final val = <String, dynamic>{
    'discount': instance.discount,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('description', instance.description);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalType()
          ..min = json['min'] as int?
          ..max = json['max'] as int?;

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('min', instance.min);
  writeNotNull('max', instance.max);
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType()
          ..id = json['id'] as String
          ..rank = json['rank'] as int
          ..color = json['color'] as String?
          ..picture = json['picture'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..perks = json['perks'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksType
                  .fromJson(json['perks'] as Map<String, dynamic>)
          ..lossAmount = json['lossAmount'] as int
          ..nextLevelMax = json['nextLevelMax'] as int?
          ..inactivityCycle = json['inactivityCycle'] as int
          ..levelInterval = json['levelInterval'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalType
                  .fromJson(json['levelInterval'] as Map<String, dynamic>)
          ..reputationLevel = json['reputationLevel'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'rank': instance.rank,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('color', instance.color);
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('perks', instance.perks?.toJson());
  val['lossAmount'] = instance.lossAmount;
  writeNotNull('nextLevelMax', instance.nextLevelMax);
  val['inactivityCycle'] = instance.inactivityCycle;
  writeNotNull('levelInterval', instance.levelInterval?.toJson());
  writeNotNull('reputationLevel', instance.reputationLevel);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType()
          ..startDate = json['startDate'] == null
              ? null
              : DateTime.parse(json['startDate'] as String)
          ..endDate = json['endDate'] == null
              ? null
              : DateTime.parse(json['endDate'] as String)
          ..minValue = json['minValue'] as String?
          ..maxValue = json['maxValue'] as String?
          ..value = json['value'] as String?
          ..values = (json['values'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..zone = json['zone'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType
                  .fromJson(json['zone'] as Map<String, dynamic>)
          ..countries = (json['countries'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..states = (json['states'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..languages = (json['languages'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..reputations = (json['reputations'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('startDate', instance.startDate?.toIso8601String());
  writeNotNull('endDate', instance.endDate?.toIso8601String());
  writeNotNull('minValue', instance.minValue);
  writeNotNull('maxValue', instance.maxValue);
  writeNotNull('value', instance.value);
  writeNotNull('values', instance.values);
  writeNotNull('zone', instance.zone?.toJson());
  writeNotNull(
      'countries', instance.countries?.map((e) => e.toJson()).toList());
  writeNotNull('states', instance.states?.map((e) => e.toJson()).toList());
  writeNotNull(
      'languages', instance.languages?.map((e) => e.toJson()).toList());
  writeNotNull(
      'reputations', instance.reputations?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType()
          ..field = json['field'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType
                  .fromJson(json['field'] as Map<String, dynamic>)
          ..kw$operator = $enumDecodeNullable(
              _$OperatorEnumEnumMap, json['operator'],
              unknownValue: OperatorEnum.artemisUnknown)
          ..values = (json['values'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('field', instance.field?.toJson());
  writeNotNull('operator', _$OperatorEnumEnumMap[instance.kw$operator]);
  writeNotNull('values', instance.values?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType()
          ..rank = json['rank'] as int?
          ..criteria = json['criteria'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType
                  .fromJson(json['criteria'] as Map<String, dynamic>)
          ..filters = (json['filters'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('rank', instance.rank);
  writeNotNull('criteria', instance.criteria?.toJson());
  writeNotNull('filters', instance.filters?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType()
          ..id = json['id'] as String
          ..icon = json['icon'] as String?
          ..title = json['title'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..segments = (json['segments'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('icon', instance.icon);
  writeNotNull('title', instance.title);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('segments', instance.segments?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType()
          ..id = json['id'] as String
          ..title = json['title'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..challengeType = json['challengeType'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType
                  .fromJson(json['challengeType'] as Map<String, dynamic>)
          ..creator = json['creator'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType
                  .fromJson(json['creator'] as Map<String, dynamic>)
          ..startDate = json['startDate'] == null
              ? null
              : DateTime.parse(json['startDate'] as String)
          ..endDate = json['endDate'] == null
              ? null
              : DateTime.parse(json['endDate'] as String)
          ..status = $enumDecodeNullable(
              _$ChallengeStatusEnumEnumMap, json['status'],
              unknownValue: ChallengeStatusEnum.artemisUnknown)
          ..winners = (json['winners'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeWinner
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..checkpoints = (json['checkpoints'] as List<dynamic>?)
              ?.map((e) =>
                  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeCheckpoint
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..maxAnswers = json['maxAnswers'] as int?
          ..audience = json['audience'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType
                  .fromJson(json['audience'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeTypeToJson(
        WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('challengeType', instance.challengeType?.toJson());
  writeNotNull('creator', instance.creator?.toJson());
  writeNotNull('startDate', instance.startDate?.toIso8601String());
  writeNotNull('endDate', instance.endDate?.toIso8601String());
  writeNotNull('status', _$ChallengeStatusEnumEnumMap[instance.status]);
  writeNotNull('winners', instance.winners?.map((e) => e.toJson()).toList());
  writeNotNull(
      'checkpoints', instance.checkpoints?.map((e) => e.toJson()).toList());
  writeNotNull('maxAnswers', instance.maxAnswers);
  writeNotNull('audience', instance.audience?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

WalletByOwner$Query$WalletDtoType$PocketType
    _$WalletByOwner$Query$WalletDtoType$PocketTypeFromJson(
            Map<String, dynamic> json) =>
        WalletByOwner$Query$WalletDtoType$PocketType()
          ..amount = json['amount'] as String?
          ..usage = $enumDecode(_$PocketUsageTypeEnumMap, json['usage'],
              unknownValue: PocketUsageType.artemisUnknown)
          ..pocketType = $enumDecode(
              _$PocketTypeEnumEnumMap, json['pocketType'],
              unknownValue: PocketTypeEnum.artemisUnknown)
          ..challenge = json['challenge'] == null
              ? null
              : WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType
                  .fromJson(json['challenge'] as Map<String, dynamic>);

Map<String, dynamic> _$WalletByOwner$Query$WalletDtoType$PocketTypeToJson(
    WalletByOwner$Query$WalletDtoType$PocketType instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('amount', instance.amount);
  val['usage'] = _$PocketUsageTypeEnumMap[instance.usage]!;
  val['pocketType'] = _$PocketTypeEnumEnumMap[instance.pocketType]!;
  writeNotNull('challenge', instance.challenge?.toJson());
  return val;
}

WalletByOwner$Query$WalletDtoType _$WalletByOwner$Query$WalletDtoTypeFromJson(
        Map<String, dynamic> json) =>
    WalletByOwner$Query$WalletDtoType()
      ..id = json['id'] as String
      ..owner = json['owner'] == null
          ? null
          : WalletByOwner$Query$WalletDtoType$OwnerDtoType.fromJson(
              json['owner'] as Map<String, dynamic>)
      ..createdAt = DateTime.parse(json['createdAt'] as String)
      ..updatedAt = DateTime.parse(json['updatedAt'] as String)
      ..pockets = (json['pockets'] as List<dynamic>?)
          ?.map((e) => WalletByOwner$Query$WalletDtoType$PocketType.fromJson(
              e as Map<String, dynamic>))
          .toList();

Map<String, dynamic> _$WalletByOwner$Query$WalletDtoTypeToJson(
    WalletByOwner$Query$WalletDtoType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('owner', instance.owner?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('pockets', instance.pockets?.map((e) => e.toJson()).toList());
  return val;
}

WalletByOwner$Query _$WalletByOwner$QueryFromJson(Map<String, dynamic> json) =>
    WalletByOwner$Query()
      ..walletByOwner = WalletByOwner$Query$WalletDtoType.fromJson(
          json['walletByOwner'] as Map<String, dynamic>);

Map<String, dynamic> _$WalletByOwner$QueryToJson(
        WalletByOwner$Query instance) =>
    <String, dynamic>{
      'walletByOwner': instance.walletByOwner.toJson(),
    };

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType()
          ..currency = json['currency'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyType
                  .fromJson(json['currency'] as Map<String, dynamic>)
          ..kw$default = json['default'] as bool?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('currency', instance.currency?.toJson());
  writeNotNull('default', instance.kw$default);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OpeningHoursType$OpeningHoursDayType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OpeningHoursType$OpeningHoursDayTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OpeningHoursType$OpeningHoursDayType()
          ..day = $enumDecodeNullable(_$DaysEnumMap, json['day'],
              unknownValue: Days.artemisUnknown)
          ..from = json['from'] as String?
          ..to = json['to'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OpeningHoursType$OpeningHoursDayTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OpeningHoursType$OpeningHoursDayType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('day', _$DaysEnumMap[instance.day]);
  writeNotNull('from', instance.from);
  writeNotNull('to', instance.to);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OpeningHoursType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OpeningHoursTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OpeningHoursType()
          ..status = $enumDecodeNullable(_$OpeningStatusEnumMap, json['status'],
              unknownValue: OpeningStatus.artemisUnknown)
          ..hours = (json['hours'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OpeningHoursType$OpeningHoursDayType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OpeningHoursTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OpeningHoursType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', _$OpeningStatusEnumMap[instance.status]);
  writeNotNull('hours', instance.hours?.map((e) => e.toJson()).toList());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SpecialOfferType$OpeningHoursDayType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SpecialOfferType$OpeningHoursDayTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SpecialOfferType$OpeningHoursDayType()
          ..day = $enumDecodeNullable(_$DaysEnumMap, json['day'],
              unknownValue: Days.artemisUnknown)
          ..from = json['from'] as String?
          ..to = json['to'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SpecialOfferType$OpeningHoursDayTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SpecialOfferType$OpeningHoursDayType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('day', _$DaysEnumMap[instance.day]);
  writeNotNull('from', instance.from);
  writeNotNull('to', instance.to);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SpecialOfferType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SpecialOfferTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SpecialOfferType()
          ..offerType = $enumDecodeNullable(
              _$SpecialOffersTypeEnumMap, json['offerType'],
              unknownValue: SpecialOffersType.artemisUnknown)
          ..hours = (json['hours'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SpecialOfferType$OpeningHoursDayType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SpecialOfferTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SpecialOfferType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('offerType', _$SpecialOffersTypeEnumMap[instance.offerType]);
  writeNotNull('hours', instance.hours?.map((e) => e.toJson()).toList());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$LonLatType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$LonLatType()
          ..type = json['type'] as String?
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$LonLatTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', instance.type);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = (json['population'] as num?)?.toDouble()
          ..ascii = json['ascii'] as String?
          ..lat = (json['lat'] as num?)?.toDouble()
          ..lng = (json['lng'] as num?)?.toDouble()
          ..country = json['country'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$FullAddressOwnerType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$FullAddressOwnerTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..addressLine = json['addressLine'] as String?
          ..location = json['location'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('addressLine', instance.addressLine);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType()
          ..size48 = json['size48'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size96 = json['size96'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size96'] as Map<String, dynamic>)
          ..size144 = json['size144'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size144'] as Map<String, dynamic>)
          ..size240 = json['size240'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size240'] as Map<String, dynamic>)
          ..size480 = json['size480'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size480'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size96', instance.size96?.toJson());
  writeNotNull('size144', instance.size144?.toJson());
  writeNotNull('size240', instance.size240?.toJson());
  writeNotNull('size480', instance.size480?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType()
          ..svg = json['svg'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
                  .fromJson(json['png'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType()
          ..style = $enumDecode(_$SocialImageStyleEnumEnumMap, json['style'],
              unknownValue: SocialImageStyleEnum.artemisUnknown)
          ..images = (json['images'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType
            instance) {
  final val = <String, dynamic>{
    'style': _$SocialImageStyleEnumEnumMap[instance.style]!,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('images', instance.images?.map((e) => e.toJson()).toList());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..fontIcon = json['fontIcon'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..images = (json['images'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('fontIcon', instance.fontIcon);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('images', instance.images?.map((e) => e.toJson()).toList());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType()
          ..name = json['name'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType
                  .fromJson(json['name'] as Map<String, dynamic>)
          ..value = json['value'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name?.toJson());
  writeNotNull('value', instance.value);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$LonLatType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$LonLatType()
          ..type = json['type'] as String?
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$LonLatTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', instance.type);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = (json['population'] as num?)?.toDouble()
          ..ascii = json['ascii'] as String?
          ..lat = (json['lat'] as num?)?.toDouble()
          ..lng = (json['lng'] as num?)?.toDouble()
          ..country = json['country'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$FullAddressOwnerType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..addressLine = json['addressLine'] as String?
          ..location = json['location'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('addressLine', instance.addressLine);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyLegalType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyLegalTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = json['type'] as String?
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', instance.type);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = (json['population'] as num?)?.toDouble()
          ..ascii = json['ascii'] as String?
          ..lat = (json['lat'] as num?)?.toDouble()
          ..lng = (json['lng'] as num?)?.toDouble()
          ..country = json['country'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..addressLine = json['addressLine'] as String?
          ..location = json['location'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('addressLine', instance.addressLine);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyContactDetailsType$PhoneType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyContactDetailsType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyContactDetailsTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSCategoryType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSCategoryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSCategoryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSCategoryType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSCategoryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSCategoryType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSCategoryTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSCategoryType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..mapPicture = json['mapPicture'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..picture = json['picture'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSCategoryType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSCategoryTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSCategoryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('mapPicture', instance.mapPicture);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('picture', instance.picture?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSServicesType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSServicesTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSServicesType()
          ..id = json['id'] as String?
          ..index = json['index'] as int?
          ..name = json['name'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSServicesTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSServicesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('id', instance.id);
  writeNotNull('index', instance.index);
  writeNotNull('name', instance.name);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType()
          ..alt = json['alt'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt'] as Map<String, dynamic>)
          ..alt2x = json['alt2x'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt2x'] as Map<String, dynamic>)
          ..alt128 = json['alt_128'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt_128'] as Map<String, dynamic>)
          ..alt256 = json['alt_256'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt_256'] as Map<String, dynamic>)
          ..alt512 = json['alt_512'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt_512'] as Map<String, dynamic>)
          ..cardFlat = json['card_flat'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat'] as Map<String, dynamic>)
          ..cardFlat2x = json['card_flat2x'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat2x'] as Map<String, dynamic>)
          ..cardFlat128 = json['card_flat_128'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat_128'] as Map<String, dynamic>)
          ..cardFlat256 = json['card_flat_256'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat_256'] as Map<String, dynamic>)
          ..cardFlat512 = json['card_flat_512'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat_512'] as Map<String, dynamic>)
          ..dark = json['dark'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark'] as Map<String, dynamic>)
          ..dark2x = json['dark2x'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark2x'] as Map<String, dynamic>)
          ..dark128 = json['dark_128'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark_128'] as Map<String, dynamic>)
          ..dark256 = json['dark_256'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark_256'] as Map<String, dynamic>)
          ..dark512 = json['dark_512'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark_512'] as Map<String, dynamic>)
          ..flat = json['flat'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat'] as Map<String, dynamic>)
          ..flat2x = json['flat2x'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat2x'] as Map<String, dynamic>)
          ..flat128 = json['flat_128'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat_128'] as Map<String, dynamic>)
          ..flat256 = json['flat_256'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat_256'] as Map<String, dynamic>)
          ..flat512 = json['flat_512'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat_512'] as Map<String, dynamic>)
          ..light = json['light'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light'] as Map<String, dynamic>)
          ..light2x = json['light2x'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light2x'] as Map<String, dynamic>)
          ..light128 = json['light_128'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light_128'] as Map<String, dynamic>)
          ..light256 = json['light_256'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light_256'] as Map<String, dynamic>)
          ..light512 = json['light_512'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light_512'] as Map<String, dynamic>)
          ..kw$default = json['default'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..default2x = json['default2x'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default2x'] as Map<String, dynamic>)
          ..default128 = json['default_128'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default_128'] as Map<String, dynamic>)
          ..default256 = json['default_256'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default_256'] as Map<String, dynamic>)
          ..default512 = json['default_512'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default_512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('alt', instance.alt?.toJson());
  writeNotNull('alt2x', instance.alt2x?.toJson());
  writeNotNull('alt_128', instance.alt128?.toJson());
  writeNotNull('alt_256', instance.alt256?.toJson());
  writeNotNull('alt_512', instance.alt512?.toJson());
  writeNotNull('card_flat', instance.cardFlat?.toJson());
  writeNotNull('card_flat2x', instance.cardFlat2x?.toJson());
  writeNotNull('card_flat_128', instance.cardFlat128?.toJson());
  writeNotNull('card_flat_256', instance.cardFlat256?.toJson());
  writeNotNull('card_flat_512', instance.cardFlat512?.toJson());
  writeNotNull('dark', instance.dark?.toJson());
  writeNotNull('dark2x', instance.dark2x?.toJson());
  writeNotNull('dark_128', instance.dark128?.toJson());
  writeNotNull('dark_256', instance.dark256?.toJson());
  writeNotNull('dark_512', instance.dark512?.toJson());
  writeNotNull('flat', instance.flat?.toJson());
  writeNotNull('flat2x', instance.flat2x?.toJson());
  writeNotNull('flat_128', instance.flat128?.toJson());
  writeNotNull('flat_256', instance.flat256?.toJson());
  writeNotNull('flat_512', instance.flat512?.toJson());
  writeNotNull('light', instance.light?.toJson());
  writeNotNull('light2x', instance.light2x?.toJson());
  writeNotNull('light_128', instance.light128?.toJson());
  writeNotNull('light_256', instance.light256?.toJson());
  writeNotNull('light_512', instance.light512?.toJson());
  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('default2x', instance.default2x?.toJson());
  writeNotNull('default_128', instance.default128?.toJson());
  writeNotNull('default_256', instance.default256?.toJson());
  writeNotNull('default_512', instance.default512?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType()
          ..alt = json['alt'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['alt'] as Map<String, dynamic>)
          ..cardFlat = json['card_flat'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['card_flat'] as Map<String, dynamic>)
          ..dark = json['dark'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['dark'] as Map<String, dynamic>)
          ..flat = json['flat'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['flat'] as Map<String, dynamic>)
          ..light = json['light'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['light'] as Map<String, dynamic>)
          ..kw$default = json['default'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('alt', instance.alt?.toJson());
  writeNotNull('card_flat', instance.cardFlat?.toJson());
  writeNotNull('dark', instance.dark?.toJson());
  writeNotNull('flat', instance.flat?.toJson());
  writeNotNull('light', instance.light?.toJson());
  writeNotNull('default', instance.kw$default?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType()
          ..png = json['png'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..svg = json['svg'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType
                  .fromJson(json['svg'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('png', instance.png?.toJson());
  writeNotNull('svg', instance.svg?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..paymentType = $enumDecodeNullable(
              _$PaymentTypeEnumEnumMap, json['paymentType'],
              unknownValue: PaymentTypeEnum.artemisUnknown)
          ..materialIcon = json['materialIcon'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..images = json['images'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType
                  .fromJson(json['images'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('paymentType', _$PaymentTypeEnumEnumMap[instance.paymentType]);
  writeNotNull('materialIcon', instance.materialIcon);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('images', instance.images?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType()
          ..type = json['type'] as String?
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', instance.type);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = (json['population'] as num?)?.toDouble()
          ..ascii = json['ascii'] as String?
          ..lat = (json['lat'] as num?)?.toDouble()
          ..lng = (json['lng'] as num?)?.toDouble()
          ..country = json['country'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..addressLine = json['addressLine'] as String?
          ..location = json['location'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('addressLine', instance.addressLine);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = json['type'] as String?
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', instance.type);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = (json['population'] as num?)?.toDouble()
          ..ascii = json['ascii'] as String?
          ..lat = (json['lat'] as num?)?.toDouble()
          ..lng = (json['lng'] as num?)?.toDouble()
          ..country = json['country'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..addressLine = json['addressLine'] as String?
          ..location = json['location'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('addressLine', instance.addressLine);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType()
          ..id = json['id'] as String
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..programName = json['programName'] as String?
          ..picture = json['picture'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..company = json['company'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'createdAt': instance.createdAt.toIso8601String(),
    'updatedAt': instance.updatedAt.toIso8601String(),
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('programName', instance.programName);
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('company', instance.company?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType()
          ..to = DateTime.parse(json['to'] as String)
          ..from = DateTime.parse(json['from'] as String)
          ..loyaltyProgram = json['loyaltyProgram'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType
                  .fromJson(json['loyaltyProgram'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType
            instance) {
  final val = <String, dynamic>{
    'to': instance.to.toIso8601String(),
    'from': instance.from.toIso8601String(),
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('loyaltyProgram', instance.loyaltyProgram?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionType()
          ..enable = json['enable'] as bool?
          ..action = $enumDecodeNullable(
              _$PredefinedActionsEnumEnumMap, json['action'],
              unknownValue: PredefinedActionsEnum.artemisUnknown);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('enable', instance.enable);
  writeNotNull('action', _$PredefinedActionsEnumEnumMap[instance.action]);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType()
          ..id = json['id'] as String
          ..title = json['title'] as String?
          ..description = json['description'] as String?
          ..icon = json['icon'] as String?
          ..theme = json['theme'] as String?
          ..media = json['media'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..predefined = json['predefined'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionType
                  .fromJson(json['predefined'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  writeNotNull('icon', instance.icon);
  writeNotNull('theme', instance.theme);
  writeNotNull('media', instance.media?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('predefined', instance.predefined?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType()
          ..id = json['id'] as String
          ..title = json['title'] as String?
          ..description = json['description'] as String?
          ..icon = json['icon'] as String?
          ..cost = json['cost'] as int?
          ..kind = $enumDecodeNullable(_$JockerKindEnumEnumMap, json['kind'],
              unknownValue: JockerKindEnum.artemisUnknown)
          ..media = json['media'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  writeNotNull('icon', instance.icon);
  writeNotNull('cost', instance.cost);
  writeNotNull('kind', _$JockerKindEnumEnumMap[instance.kind]);
  writeNotNull('media', instance.media?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJockerFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker()
          ..jocker = json['jocker'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType
                  .fromJson(json['jocker'] as Map<String, dynamic>)
          ..cost = json['cost'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJockerToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('jocker', instance.jocker?.toJson());
  writeNotNull('cost', instance.cost);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType()
          ..id = json['id'] as String
          ..title = json['title'] as String?
          ..description = json['description'] as String?
          ..rules = json['rules'] as String?
          ..icon = json['icon'] as String?
          ..media = json['media'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..minStep = json['minStep'] as int?
          ..minCheckPoints = json['minCheckPoints'] as int?
          ..minGiftValue = json['minGiftValue'] as String?
          ..claimReward = json['claimReward'] as int?
          ..activityTypes = (json['activityTypes'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..jockers = (json['jockers'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..fees = json['fees'] as String?
          ..enable = json['enable'] as bool?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  writeNotNull('rules', instance.rules);
  writeNotNull('icon', instance.icon);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('minStep', instance.minStep);
  writeNotNull('minCheckPoints', instance.minCheckPoints);
  writeNotNull('minGiftValue', instance.minGiftValue);
  writeNotNull('claimReward', instance.claimReward);
  writeNotNull(
      'activityTypes', instance.activityTypes?.map((e) => e.toJson()).toList());
  writeNotNull('jockers', instance.jockers?.map((e) => e.toJson()).toList());
  writeNotNull('fees', instance.fees);
  writeNotNull('enable', instance.enable);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType$PhoneType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType$PhoneTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType()
          ..id = json['id'] as String
          ..email = json['email'] as String?
          ..gender = $enumDecodeNullable(_$GenderEnumMap, json['gender'],
              unknownValue: Gender.artemisUnknown)
          ..lastName = json['lastName'] as String?
          ..username = json['username'] as String?
          ..firstName = json['firstName'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>)
          ..picture = json['picture'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('email', instance.email);
  writeNotNull('gender', _$GenderEnumMap[instance.gender]);
  writeNotNull('lastName', instance.lastName);
  writeNotNull('username', instance.username);
  writeNotNull('firstName', instance.firstName);
  writeNotNull('phone', instance.phone?.toJson());
  writeNotNull('picture', instance.picture?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeWinner
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeWinnerFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeWinner()
          ..rank = json['rank'] as int
          ..reward = (json['reward'] as num?)?.toDouble();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeWinnerToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeWinner
            instance) {
  final val = <String, dynamic>{
    'rank': instance.rank,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('reward', instance.reward);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeCheckpoint
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeCheckpointFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeCheckpoint()
          ..checkpoint = json['checkpoint'] as int?
          ..amount = (json['amount'] as num?)?.toDouble();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeCheckpointToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeCheckpoint
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('checkpoint', instance.checkpoint);
  writeNotNull('amount', instance.amount);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldType()
          ..field = $enumDecodeNullable(
              _$AudienceCriteriaFieldEnumEnumMap, json['field'],
              unknownValue: AudienceCriteriaFieldEnum.artemisUnknown)
          ..operators = (json['operators'] as List<dynamic>?)
              ?.map((e) => $enumDecode(_$OperatorEnumEnumMap, e,
                  unknownValue: OperatorEnum.artemisUnknown))
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('field', _$AudienceCriteriaFieldEnumEnumMap[instance.field]);
  writeNotNull('operators',
      instance.operators?.map((e) => _$OperatorEnumEnumMap[e]!).toList());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType()
          ..id = json['id'] as String
          ..icon = json['icon'] as String?
          ..title = json['title'] as String?
          ..style = json['style'] as String?
          ..enable = json['enable'] as bool?
          ..description = json['description'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..media = json['media'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..fields = (json['fields'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('icon', instance.icon);
  writeNotNull('title', instance.title);
  writeNotNull('style', instance.style);
  writeNotNull('enable', instance.enable);
  writeNotNull('description', instance.description);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('fields', instance.fields?.map((e) => e.toJson()).toList());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionType()
          ..enable = json['enable'] as bool?
          ..action = $enumDecodeNullable(
              _$PredefinedActionsEnumEnumMap, json['action'],
              unknownValue: PredefinedActionsEnum.artemisUnknown);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('enable', instance.enable);
  writeNotNull('action', _$PredefinedActionsEnumEnumMap[instance.action]);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType()
          ..id = json['id'] as String
          ..title = json['title'] as String?
          ..description = json['description'] as String?
          ..icon = json['icon'] as String?
          ..theme = json['theme'] as String?
          ..media = json['media'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..predefined = json['predefined'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionType
                  .fromJson(json['predefined'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  writeNotNull('icon', instance.icon);
  writeNotNull('theme', instance.theme);
  writeNotNull('media', instance.media?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('predefined', instance.predefined?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxType()
          ..min = json['min'] as int?
          ..max = json['max'] as int?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('min', instance.min);
  writeNotNull('max', instance.max);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingType()
          ..max = json['max'] as int?
          ..text = json['text'] as bool?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('max', instance.max);
  writeNotNull('text', instance.text);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesType()
          ..minValue = json['minValue'] as int?
          ..maxValue = json['maxValue'] as int?
          ..score = json['score'] as bool?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('minValue', instance.minValue);
  writeNotNull('maxValue', instance.maxValue);
  writeNotNull('score', instance.score);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType()
          ..output = $enumDecodeNullable(
              _$CalculatedOutputEnumEnumMap, json['output'],
              unknownValue: CalculatedOutputEnum.artemisUnknown)
          ..kw$show = json['show'] as bool?
          ..formula = json['formula'] as String?
          ..values = (json['values'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('output', _$CalculatedOutputEnumEnumMap[instance.output]);
  writeNotNull('show', instance.kw$show);
  writeNotNull('formula', instance.formula);
  writeNotNull('values', instance.values?.map((e) => e.toJson()).toList());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateType()
          ..outdated = json['outdated'] as bool?
          ..interval = json['interval'] as bool?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('outdated', instance.outdated);
  writeNotNull('interval', instance.interval);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactType()
          ..firstname = json['firstname'] as bool?
          ..lastname = json['lastname'] as bool?
          ..email = json['email'] as bool?
          ..phone = json['phone'] as bool?
          ..description = json['description'] as bool?
          ..address = json['address'] as bool?
          ..birthday = json['birthday'] as bool?
          ..gender = json['gender'] as bool?
          ..civility = json['civility'] as bool?
          ..profession = json['profession'] as bool?
          ..academicLevel = json['academicLevel'] as bool?
          ..language = json['language'] as bool?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('firstname', instance.firstname);
  writeNotNull('lastname', instance.lastname);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone);
  writeNotNull('description', instance.description);
  writeNotNull('address', instance.address);
  writeNotNull('birthday', instance.birthday);
  writeNotNull('gender', instance.gender);
  writeNotNull('civility', instance.civility);
  writeNotNull('profession', instance.profession);
  writeNotNull('academicLevel', instance.academicLevel);
  writeNotNull('language', instance.language);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberType()
          ..minValue = json['minValue'] as int?
          ..maxValue = json['maxValue'] as int?
          ..interval = json['interval'] as bool?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('minValue', instance.minValue);
  writeNotNull('maxValue', instance.maxValue);
  writeNotNull('interval', instance.interval);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsType()
          ..name = json['name'] as String?
          ..type = json['type'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('type', instance.type);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType()
          ..link = json['link'] as int?
          ..method = $enumDecodeNullable(_$ApiMethodsEnumMap, json['method'],
              unknownValue: ApiMethods.artemisUnknown)
          ..auth = json['auth'] as String?
          ..secret = json['secret'] as String?
          ..params = (json['params'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('link', instance.link);
  writeNotNull('method', _$ApiMethodsEnumMap[instance.method]);
  writeNotNull('auth', instance.auth);
  writeNotNull('secret', instance.secret);
  writeNotNull('params', instance.params?.map((e) => e.toJson()).toList());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixType()
          ..lines = json['lines'] as String?
          ..columns = json['columns'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('lines', instance.lines);
  writeNotNull('columns', instance.columns);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleType()
          ..leftLabel = json['leftLabel'] as String?
          ..rightLabel = json['rightLabel'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('leftLabel', instance.leftLabel);
  writeNotNull('rightLabel', instance.rightLabel);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoType()
          ..item = json['item'] as String
          ..enable = json['enable'] as bool?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoType
            instance) {
  final val = <String, dynamic>{
    'item': instance.item,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('enable', instance.enable);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepType()
          ..id = json['id'] as String;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepTypeToJson(
            GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepType
                instance) =>
        <String, dynamic>{
          'id': instance.id,
        };

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType()
          ..id = json['id'] as String
          ..order = json['order'] as int?
          ..title = json['title'] as String?
          ..choices = (json['choices'] as List<dynamic>)
              .map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..mandatory = json['mandatory'] as bool?
          ..type = $enumDecodeNullable(_$QuestionTypeEnumEnumMap, json['type'],
              unknownValue: QuestionTypeEnum.artemisUnknown)
          ..challengeStep = json['challengeStep'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepType
                  .fromJson(json['challengeStep'] as Map<String, dynamic>)
          ..points = json['points'] as int?
          ..score = json['score'] as bool?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('order', instance.order);
  writeNotNull('title', instance.title);
  val['choices'] = instance.choices.map((e) => e.toJson()).toList();
  writeNotNull('mandatory', instance.mandatory);
  writeNotNull('type', _$QuestionTypeEnumEnumMap[instance.type]);
  writeNotNull('challengeStep', instance.challengeStep?.toJson());
  writeNotNull('points', instance.points);
  writeNotNull('score', instance.score);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType()
          ..maxResponses = (json['maxResponses'] as num?)?.toDouble()
          ..personalised = json['personalised'] as bool?
          ..unique = json['unique'] as bool?
          ..random = json['random'] as bool?
          ..leaderboard = json['leaderboard'] as bool?
          ..api = json['api'] as bool?
          ..image = json['image'] as bool?
          ..interaction = json['interaction'] as bool?
          ..suggestions = json['suggestions'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType
                  .fromJson(json['suggestions'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('maxResponses', instance.maxResponses);
  writeNotNull('personalised', instance.personalised);
  writeNotNull('unique', instance.unique);
  writeNotNull('random', instance.random);
  writeNotNull('leaderboard', instance.leaderboard);
  writeNotNull('api', instance.api);
  writeNotNull('image', instance.image);
  writeNotNull('interaction', instance.interaction);
  writeNotNull('suggestions', instance.suggestions?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyType()
          ..levels = json['levels'] as int?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('levels', instance.levels);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreType()
          ..min = json['min'] as int?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('min', instance.min);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadType()
          ..url = json['url'] as String?
          ..image = json['image'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('url', instance.url);
  writeNotNull('image', instance.image);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType()
          ..rank = json['rank'] as int?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('rank', instance.rank);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType()
          ..verification = json['verification'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType
                  .fromJson(json['verification'] as Map<String, dynamic>)
          ..verified = json['verified'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType
                  .fromJson(json['verified'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('verification', instance.verification?.toJson());
  writeNotNull('verified', instance.verified?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType()
          ..number = json['number'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType
                  .fromJson(json['number'] as Map<String, dynamic>)
          ..email = json['email'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType
                  .fromJson(json['email'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number?.toJson());
  writeNotNull('email', instance.email?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoType()
          ..minSeconds = json['minSeconds'] as int?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('minSeconds', instance.minSeconds);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType()
          ..size48 = json['size48'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size96 = json['size96'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size96'] as Map<String, dynamic>)
          ..size144 = json['size144'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size144'] as Map<String, dynamic>)
          ..size240 = json['size240'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size240'] as Map<String, dynamic>)
          ..size480 = json['size480'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size480'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size96', instance.size96?.toJson());
  writeNotNull('size144', instance.size144?.toJson());
  writeNotNull('size240', instance.size240?.toJson());
  writeNotNull('size480', instance.size480?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType()
          ..svg = json['svg'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
                  .fromJson(json['png'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType()
          ..style = $enumDecode(_$SocialImageStyleEnumEnumMap, json['style'],
              unknownValue: SocialImageStyleEnum.artemisUnknown)
          ..images = (json['images'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType
            instance) {
  final val = <String, dynamic>{
    'style': _$SocialImageStyleEnumEnumMap[instance.style]!,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('images', instance.images?.map((e) => e.toJson()).toList());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..fontIcon = json['fontIcon'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..images = (json['images'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('fontIcon', instance.fontIcon);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('images', instance.images?.map((e) => e.toJson()).toList());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType()
          ..socialMedia = json['socialMedia'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType
                  .fromJson(json['socialMedia'] as Map<String, dynamic>)
          ..action = $enumDecodeNullable(
              _$SocialActionEnumEnumMap, json['action'],
              unknownValue: SocialActionEnum.artemisUnknown)
          ..socialContent = $enumDecodeNullable(
              _$SocialContentTypeEnumEnumMap, json['socialContent'],
              unknownValue: SocialContentTypeEnum.artemisUnknown)
          ..url = json['url'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('socialMedia', instance.socialMedia?.toJson());
  writeNotNull('action', _$SocialActionEnumEnumMap[instance.action]);
  writeNotNull(
      'socialContent', _$SocialContentTypeEnumEnumMap[instance.socialContent]);
  writeNotNull('url', instance.url);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadType()
          ..playstore = json['playstore'] as String?
          ..appstore = json['appstore'] as String?
          ..appgallery = json['appgallery'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('playstore', instance.playstore);
  writeNotNull('appstore', instance.appstore);
  writeNotNull('appgallery', instance.appgallery);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType()
          ..textBox = json['textBox'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxType
                  .fromJson(json['textBox'] as Map<String, dynamic>)
          ..rating = json['rating'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingType
                  .fromJson(json['rating'] as Map<String, dynamic>)
          ..calculated = json['calculated'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType
                  .fromJson(json['calculated'] as Map<String, dynamic>)
          ..date = json['date'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateType
                  .fromJson(json['date'] as Map<String, dynamic>)
          ..contact = json['contact'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..number = json['number'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberType
                  .fromJson(json['number'] as Map<String, dynamic>)
          ..api = json['api'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType
                  .fromJson(json['api'] as Map<String, dynamic>)
          ..matrix = json['matrix'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixType
                  .fromJson(json['matrix'] as Map<String, dynamic>)
          ..toggle = json['toggle'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleType
                  .fromJson(json['toggle'] as Map<String, dynamic>)
          ..choices = json['choices'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType
                  .fromJson(json['choices'] as Map<String, dynamic>)
          ..smiley = json['smiley'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyType
                  .fromJson(json['smiley'] as Map<String, dynamic>)
          ..score = json['score'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreType
                  .fromJson(json['score'] as Map<String, dynamic>)
          ..lead = json['lead'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadType
                  .fromJson(json['lead'] as Map<String, dynamic>)
          ..verification = json['verification'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType
                  .fromJson(json['verification'] as Map<String, dynamic>)
          ..video = json['video'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoType
                  .fromJson(json['video'] as Map<String, dynamic>)
          ..socialMedia = json['socialMedia'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType
                  .fromJson(json['socialMedia'] as Map<String, dynamic>)
          ..appDownload = json['appDownload'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadType
                  .fromJson(json['appDownload'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('textBox', instance.textBox?.toJson());
  writeNotNull('rating', instance.rating?.toJson());
  writeNotNull('calculated', instance.calculated?.toJson());
  writeNotNull('date', instance.date?.toJson());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('number', instance.number?.toJson());
  writeNotNull('api', instance.api?.toJson());
  writeNotNull('matrix', instance.matrix?.toJson());
  writeNotNull('toggle', instance.toggle?.toJson());
  writeNotNull('choices', instance.choices?.toJson());
  writeNotNull('smiley', instance.smiley?.toJson());
  writeNotNull('score', instance.score?.toJson());
  writeNotNull('lead', instance.lead?.toJson());
  writeNotNull('verification', instance.verification?.toJson());
  writeNotNull('video', instance.video?.toJson());
  writeNotNull('socialMedia', instance.socialMedia?.toJson());
  writeNotNull('appDownload', instance.appDownload?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType()
          ..id = json['id'] as String
          ..activityType = json['activityType'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType
                  .fromJson(json['activityType'] as Map<String, dynamic>)
          ..required = json['required'] as bool?
          ..definition = json['definition'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType
                  .fromJson(json['definition'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('activityType', instance.activityType?.toJson());
  writeNotNull('required', instance.required);
  writeNotNull('definition', instance.definition?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType()
          ..value = $enumDecodeNullable(
              _$AudienceCriteriaFieldEnumEnumMap, json['value'],
              unknownValue: AudienceCriteriaFieldEnum.artemisUnknown)
          ..action = json['action'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType
                  .fromJson(json['action'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('value', _$AudienceCriteriaFieldEnumEnumMap[instance.value]);
  writeNotNull('action', instance.action?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathType()
          ..lat = (json['lat'] as num).toDouble()
          ..lng = (json['lng'] as num).toDouble()
          ..order = (json['order'] as num).toDouble();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathTypeToJson(
            GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathType
                instance) =>
        <String, dynamic>{
          'lat': instance.lat,
          'lng': instance.lng,
          'order': instance.order,
        };

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType()
          ..radius = (json['radius'] as num?)?.toDouble()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..paths = (json['paths'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('radius', instance.radius);
  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('paths', instance.paths?.map((e) => e.toJson()).toList());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = (json['population'] as num?)?.toDouble()
          ..ascii = json['ascii'] as String?
          ..lat = (json['lat'] as num?)?.toDouble()
          ..lng = (json['lng'] as num?)?.toDouble()
          ..country = json['country'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksType()
          ..discount = json['discount'] as String
          ..description = json['description'] as String?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksType
            instance) {
  final val = <String, dynamic>{
    'discount': instance.discount,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('description', instance.description);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalType()
          ..min = json['min'] as int?
          ..max = json['max'] as int?;

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('min', instance.min);
  writeNotNull('max', instance.max);
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType()
          ..id = json['id'] as String
          ..rank = json['rank'] as int
          ..color = json['color'] as String?
          ..picture = json['picture'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..perks = json['perks'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksType
                  .fromJson(json['perks'] as Map<String, dynamic>)
          ..lossAmount = json['lossAmount'] as int
          ..nextLevelMax = json['nextLevelMax'] as int?
          ..inactivityCycle = json['inactivityCycle'] as int
          ..levelInterval = json['levelInterval'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalType
                  .fromJson(json['levelInterval'] as Map<String, dynamic>)
          ..reputationLevel = json['reputationLevel'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'rank': instance.rank,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('color', instance.color);
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('perks', instance.perks?.toJson());
  val['lossAmount'] = instance.lossAmount;
  writeNotNull('nextLevelMax', instance.nextLevelMax);
  val['inactivityCycle'] = instance.inactivityCycle;
  writeNotNull('levelInterval', instance.levelInterval?.toJson());
  writeNotNull('reputationLevel', instance.reputationLevel);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType()
          ..startDate = json['startDate'] == null
              ? null
              : DateTime.parse(json['startDate'] as String)
          ..endDate = json['endDate'] == null
              ? null
              : DateTime.parse(json['endDate'] as String)
          ..minValue = json['minValue'] as String?
          ..maxValue = json['maxValue'] as String?
          ..value = json['value'] as String?
          ..values = (json['values'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..zone = json['zone'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType
                  .fromJson(json['zone'] as Map<String, dynamic>)
          ..countries = (json['countries'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..states = (json['states'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..languages = (json['languages'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..reputations = (json['reputations'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('startDate', instance.startDate?.toIso8601String());
  writeNotNull('endDate', instance.endDate?.toIso8601String());
  writeNotNull('minValue', instance.minValue);
  writeNotNull('maxValue', instance.maxValue);
  writeNotNull('value', instance.value);
  writeNotNull('values', instance.values);
  writeNotNull('zone', instance.zone?.toJson());
  writeNotNull(
      'countries', instance.countries?.map((e) => e.toJson()).toList());
  writeNotNull('states', instance.states?.map((e) => e.toJson()).toList());
  writeNotNull(
      'languages', instance.languages?.map((e) => e.toJson()).toList());
  writeNotNull(
      'reputations', instance.reputations?.map((e) => e.toJson()).toList());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType()
          ..field = json['field'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType
                  .fromJson(json['field'] as Map<String, dynamic>)
          ..kw$operator = $enumDecodeNullable(
              _$OperatorEnumEnumMap, json['operator'],
              unknownValue: OperatorEnum.artemisUnknown)
          ..values = (json['values'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('field', instance.field?.toJson());
  writeNotNull('operator', _$OperatorEnumEnumMap[instance.kw$operator]);
  writeNotNull('values', instance.values?.map((e) => e.toJson()).toList());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType()
          ..rank = json['rank'] as int?
          ..criteria = json['criteria'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType
                  .fromJson(json['criteria'] as Map<String, dynamic>)
          ..filters = (json['filters'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('rank', instance.rank);
  writeNotNull('criteria', instance.criteria?.toJson());
  writeNotNull('filters', instance.filters?.map((e) => e.toJson()).toList());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType()
          ..id = json['id'] as String
          ..icon = json['icon'] as String?
          ..title = json['title'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..segments = (json['segments'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('icon', instance.icon);
  writeNotNull('title', instance.title);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('segments', instance.segments?.map((e) => e.toJson()).toList());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType()
          ..id = json['id'] as String
          ..title = json['title'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..challengeType = json['challengeType'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType
                  .fromJson(json['challengeType'] as Map<String, dynamic>)
          ..creator = json['creator'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType
                  .fromJson(json['creator'] as Map<String, dynamic>)
          ..startDate = json['startDate'] == null
              ? null
              : DateTime.parse(json['startDate'] as String)
          ..endDate = json['endDate'] == null
              ? null
              : DateTime.parse(json['endDate'] as String)
          ..status = $enumDecodeNullable(
              _$ChallengeStatusEnumEnumMap, json['status'],
              unknownValue: ChallengeStatusEnum.artemisUnknown)
          ..winners = (json['winners'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeWinner
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..checkpoints = (json['checkpoints'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeCheckpoint
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..maxAnswers = json['maxAnswers'] as int?
          ..audience = json['audience'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType
                  .fromJson(json['audience'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('challengeType', instance.challengeType?.toJson());
  writeNotNull('creator', instance.creator?.toJson());
  writeNotNull('startDate', instance.startDate?.toIso8601String());
  writeNotNull('endDate', instance.endDate?.toIso8601String());
  writeNotNull('status', _$ChallengeStatusEnumEnumMap[instance.status]);
  writeNotNull('winners', instance.winners?.map((e) => e.toJson()).toList());
  writeNotNull(
      'checkpoints', instance.checkpoints?.map((e) => e.toJson()).toList());
  writeNotNull('maxAnswers', instance.maxAnswers);
  writeNotNull('audience', instance.audience?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType()
          ..amount = json['amount'] as String?
          ..usage = $enumDecode(_$PocketUsageTypeEnumMap, json['usage'],
              unknownValue: PocketUsageType.artemisUnknown)
          ..pocketType = $enumDecode(
              _$PocketTypeEnumEnumMap, json['pocketType'],
              unknownValue: PocketTypeEnum.artemisUnknown)
          ..challenge = json['challenge'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType
                  .fromJson(json['challenge'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('amount', instance.amount);
  val['usage'] = _$PocketUsageTypeEnumMap[instance.usage]!;
  val['pocketType'] = _$PocketTypeEnumEnumMap[instance.pocketType]!;
  writeNotNull('challenge', instance.challenge?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType()
          ..id = json['id'] as String
          ..pocket = json['pocket'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType
                  .fromJson(json['pocket'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('pocket', instance.pocket?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType()
          ..id = json['id'] as String
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..name = json['name'] as String?
          ..title = json['title'] as String?
          ..email = (json['email'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..phone = (json['phone'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..website = json['website'] as String?
          ..subtitle = json['subtitle'] as String?
          ..currencies = (json['currencies'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..turnover = json['turnover'] as String?
          ..reference = json['reference'] as String?
          ..published = json['published'] as bool?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..brandColor = json['brandColor'] as String?
          ..isFollowed = json['isFollowed'] as bool?
          ..description = json['description'] as String?
          ..contactEmails = (json['contactEmails'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..averageCustomers = (json['averageCustomers'] as num?)?.toDouble()
          ..languages = (json['languages'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..picture = json['picture'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..outsidePictures = (json['outsidePictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..insidePictures = (json['insidePictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..openingHours = json['openingHours'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OpeningHoursType
                  .fromJson(json['openingHours'] as Map<String, dynamic>)
          ..specialOffers = (json['specialOffers'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SpecialOfferType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..locations = (json['locations'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..chatContact = (json['chatContact'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..socialMedia = (json['socialMedia'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..company = json['company'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>)
          ..posCategory = (json['posCategory'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSCategoryType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..services = (json['services'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSServicesType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..paymentMethods = (json['paymentMethods'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..loyaltyPrograms = (json['loyaltyPrograms'] as List<dynamic>?)
              ?.map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..wallet = json['wallet'] == null
              ? null
              : GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType
                  .fromJson(json['wallet'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('tags', instance.tags);
  writeNotNull('name', instance.name);
  writeNotNull('title', instance.title);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone);
  writeNotNull('website', instance.website);
  writeNotNull('subtitle', instance.subtitle);
  writeNotNull(
      'currencies', instance.currencies?.map((e) => e.toJson()).toList());
  writeNotNull('turnover', instance.turnover);
  writeNotNull('reference', instance.reference);
  writeNotNull('published', instance.published);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('brandColor', instance.brandColor);
  writeNotNull('isFollowed', instance.isFollowed);
  writeNotNull('description', instance.description);
  writeNotNull('contactEmails', instance.contactEmails);
  writeNotNull('averageCustomers', instance.averageCustomers);
  writeNotNull(
      'languages', instance.languages?.map((e) => e.toJson()).toList());
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('outsidePictures',
      instance.outsidePictures?.map((e) => e.toJson()).toList());
  writeNotNull('insidePictures',
      instance.insidePictures?.map((e) => e.toJson()).toList());
  writeNotNull('openingHours', instance.openingHours?.toJson());
  writeNotNull(
      'specialOffers', instance.specialOffers?.map((e) => e.toJson()).toList());
  writeNotNull(
      'locations', instance.locations?.map((e) => e.toJson()).toList());
  writeNotNull(
      'chatContact', instance.chatContact?.map((e) => e.toJson()).toList());
  writeNotNull(
      'socialMedia', instance.socialMedia?.map((e) => e.toJson()).toList());
  writeNotNull('company', instance.company?.toJson());
  writeNotNull(
      'posCategory', instance.posCategory?.map((e) => e.toJson()).toList());
  writeNotNull('services', instance.services?.map((e) => e.toJson()).toList());
  writeNotNull('paymentMethods',
      instance.paymentMethods?.map((e) => e.toJson()).toList());
  writeNotNull('loyaltyPrograms',
      instance.loyaltyPrograms?.map((e) => e.toJson()).toList());
  writeNotNull('wallet', instance.wallet?.toJson());
  return val;
}

GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateTypeFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType()
          ..count = json['count'] as int?
          ..isLast = json['isLast'] as bool?
          ..objects = (json['objects'] as List<dynamic>)
              .map((e) =>
                  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateTypeToJson(
        GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('count', instance.count);
  writeNotNull('isLast', instance.isLast);
  val['objects'] = instance.objects.map((e) => e.toJson()).toList();
  return val;
}

GetPointOfSalesWithWalletsForModule$Query
    _$GetPointOfSalesWithWalletsForModule$QueryFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModule$Query()
          ..getPointOfSalesWithWalletsForModule =
              GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType
                  .fromJson(json['getPointOfSalesWithWalletsForModule']
                      as Map<String, dynamic>);

Map<String, dynamic> _$GetPointOfSalesWithWalletsForModule$QueryToJson(
        GetPointOfSalesWithWalletsForModule$Query instance) =>
    <String, dynamic>{
      'getPointOfSalesWithWalletsForModule':
          instance.getPointOfSalesWithWalletsForModule.toJson(),
    };

PaginationInput _$PaginationInputFromJson(Map<String, dynamic> json) =>
    PaginationInput(
      page: json['page'] as int?,
      limit: json['limit'] as int?,
    );

Map<String, dynamic> _$PaginationInputToJson(PaginationInput instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('page', instance.page);
  writeNotNull('limit', instance.limit);
  return val;
}

GetCurrentUserQuantitativeWalletArguments
    _$GetCurrentUserQuantitativeWalletArgumentsFromJson(
            Map<String, dynamic> json) =>
        GetCurrentUserQuantitativeWalletArguments(
          target: json['target'] == null
              ? null
              : TargetACIInput.fromJson(json['target'] as Map<String, dynamic>),
        );

Map<String, dynamic> _$GetCurrentUserQuantitativeWalletArgumentsToJson(
    GetCurrentUserQuantitativeWalletArguments instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('target', instance.target?.toJson());
  return val;
}

IsWalletAndCardInitializedArguments
    _$IsWalletAndCardInitializedArgumentsFromJson(Map<String, dynamic> json) =>
        IsWalletAndCardInitializedArguments(
          userId: json['userId'] as String?,
        );

Map<String, dynamic> _$IsWalletAndCardInitializedArgumentsToJson(
    IsWalletAndCardInitializedArguments instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('userId', instance.userId);
  return val;
}

WalletOwnerHasEnoughBalanceArguments
    _$WalletOwnerHasEnoughBalanceArgumentsFromJson(Map<String, dynamic> json) =>
        WalletOwnerHasEnoughBalanceArguments(
          pos: json['pos'] as String?,
          user: json['user'] as String?,
          amount: (json['amount'] as num).toDouble(),
          wholesaler: json['wholesaler'] as String?,
          manufacturer: json['manufacturer'] as String?,
          usage: $enumDecode(_$PocketUsageTypeEnumMap, json['usage'],
              unknownValue: PocketUsageType.artemisUnknown),
        );

Map<String, dynamic> _$WalletOwnerHasEnoughBalanceArgumentsToJson(
    WalletOwnerHasEnoughBalanceArguments instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('pos', instance.pos);
  writeNotNull('user', instance.user);
  val['amount'] = instance.amount;
  writeNotNull('wholesaler', instance.wholesaler);
  writeNotNull('manufacturer', instance.manufacturer);
  val['usage'] = _$PocketUsageTypeEnumMap[instance.usage]!;
  return val;
}

WalletByOwnerArguments _$WalletByOwnerArgumentsFromJson(
        Map<String, dynamic> json) =>
    WalletByOwnerArguments(
      pos: json['pos'] as String?,
      user: json['user'] as String?,
      wholesaler: json['wholesaler'] as String?,
      manufacturer: json['manufacturer'] as String?,
    );

Map<String, dynamic> _$WalletByOwnerArgumentsToJson(
    WalletByOwnerArguments instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('pos', instance.pos);
  writeNotNull('user', instance.user);
  writeNotNull('wholesaler', instance.wholesaler);
  writeNotNull('manufacturer', instance.manufacturer);
  return val;
}

GetPointOfSalesWithWalletsForModuleArguments
    _$GetPointOfSalesWithWalletsForModuleArgumentsFromJson(
            Map<String, dynamic> json) =>
        GetPointOfSalesWithWalletsForModuleArguments(
          moduleName: json['moduleName'] as String,
          pagination: json['pagination'] == null
              ? null
              : PaginationInput.fromJson(
                  json['pagination'] as Map<String, dynamic>),
          searchString: json['searchString'] as String?,
        );

Map<String, dynamic> _$GetPointOfSalesWithWalletsForModuleArgumentsToJson(
    GetPointOfSalesWithWalletsForModuleArguments instance) {
  final val = <String, dynamic>{
    'moduleName': instance.moduleName,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('pagination', instance.pagination?.toJson());
  writeNotNull('searchString', instance.searchString);
  return val;
}
