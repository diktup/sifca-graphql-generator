// GENERATED CODE - DO NOT MODIFY BY HAND

import 'package:artemis/artemis.dart';
import 'package:json_annotation/json_annotation.dart';
import 'package:equatable/equatable.dart';
import 'package:gql/ast.dart';
part 'wallet.graphql.g.dart';

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureType>?
      deg360;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType>?
      deg360;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType>?
      deg360;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionTypeFromJson(
          json);

  bool? enable;

  @JsonKey(unknownEnumValue: PredefinedActionsEnum.artemisUnknown)
  PredefinedActionsEnum? action;

  @override
  List<Object?> get props => [enable, action];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeTypeFromJson(
          json);

  late String id;

  String? title;

  String? description;

  String? icon;

  String? theme;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType?
      media;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionType?
      predefined;

  @override
  List<Object?> get props => [
        id,
        title,
        description,
        icon,
        theme,
        media,
        createdAt,
        updatedAt,
        predefined
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType>?
      deg360;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerTypeFromJson(
          json);

  late String id;

  String? title;

  String? description;

  String? icon;

  int? cost;

  @JsonKey(unknownEnumValue: JockerKindEnum.artemisUnknown)
  JockerKindEnum? kind;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType?
      media;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props =>
      [id, title, description, icon, cost, kind, media, createdAt, updatedAt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJockerFromJson(
          json);

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType?
      jocker;

  String? cost;

  @override
  List<Object?> get props => [jocker, cost];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJockerToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeTypeFromJson(
          json);

  late String id;

  String? title;

  String? description;

  String? rules;

  String? icon;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType?
      media;

  int? minStep;

  int? minCheckPoints;

  String? minGiftValue;

  int? claimReward;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType>?
      activityTypes;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker>?
      jockers;

  String? fees;

  bool? enable;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [
        id,
        title,
        description,
        rules,
        icon,
        media,
        minStep,
        minCheckPoints,
        minGiftValue,
        claimReward,
        activityTypes,
        jockers,
        fees,
        enable,
        createdAt,
        updatedAt
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType$PhoneType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType$PhoneType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType$PhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType$PhoneTypeFromJson(
          json);

  String? number;

  bool? isValid;

  String? countryCode;

  int? validationNumber;

  @override
  List<Object?> get props => [number, isValid, countryCode, validationNumber];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType$PhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType$PictureType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserTypeFromJson(
          json);

  late String id;

  String? email;

  @JsonKey(unknownEnumValue: Gender.artemisUnknown)
  Gender? gender;

  String? lastName;

  String? username;

  String? firstName;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType$PhoneType?
      phone;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType$PictureType?
      picture;

  @override
  List<Object?> get props =>
      [id, email, gender, lastName, username, firstName, phone, picture];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeWinner
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeWinner();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeWinner.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeWinnerFromJson(
          json);

  late int rank;

  double? reward;

  @override
  List<Object?> get props => [rank, reward];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeWinnerToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeCheckpoint
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeCheckpoint();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeCheckpoint.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeCheckpointFromJson(
          json);

  int? checkpoint;

  double? amount;

  @override
  List<Object?> get props => [checkpoint, amount];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeCheckpointToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType>?
      deg360;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType>?
      deg360;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldTypeFromJson(
          json);

  @JsonKey(unknownEnumValue: AudienceCriteriaFieldEnum.artemisUnknown)
  AudienceCriteriaFieldEnum? field;

  @JsonKey(unknownEnumValue: OperatorEnum.artemisUnknown)
  List<OperatorEnum>? operators;

  @override
  List<Object?> get props => [field, operators];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaTypeFromJson(
          json);

  late String id;

  String? icon;

  String? title;

  String? style;

  bool? enable;

  String? description;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType?
      media;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldType>?
      fields;

  @override
  List<Object?> get props => [
        id,
        icon,
        title,
        style,
        enable,
        description,
        createdAt,
        updatedAt,
        media,
        fields
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType>?
      deg360;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionTypeFromJson(
          json);

  bool? enable;

  @JsonKey(unknownEnumValue: PredefinedActionsEnum.artemisUnknown)
  PredefinedActionsEnum? action;

  @override
  List<Object?> get props => [enable, action];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeTypeFromJson(
          json);

  late String id;

  String? title;

  String? description;

  String? icon;

  String? theme;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType?
      media;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionType?
      predefined;

  @override
  List<Object?> get props => [
        id,
        title,
        description,
        icon,
        theme,
        media,
        createdAt,
        updatedAt,
        predefined
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxTypeFromJson(
          json);

  int? min;

  int? max;

  @override
  List<Object?> get props => [min, max];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingTypeFromJson(
          json);

  int? max;

  bool? text;

  @override
  List<Object?> get props => [max, text];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesTypeFromJson(
          json);

  int? minValue;

  int? maxValue;

  bool? score;

  @override
  List<Object?> get props => [minValue, maxValue, score];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedTypeFromJson(
          json);

  @JsonKey(unknownEnumValue: CalculatedOutputEnum.artemisUnknown)
  CalculatedOutputEnum? output;

  @JsonKey(name: 'show')
  bool? kw$show;

  String? formula;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesType>?
      values;

  @override
  List<Object?> get props => [output, kw$show, formula, values];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateTypeFromJson(
          json);

  bool? outdated;

  bool? interval;

  @override
  List<Object?> get props => [outdated, interval];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactTypeFromJson(
          json);

  bool? firstname;

  bool? lastname;

  bool? email;

  bool? phone;

  bool? description;

  bool? address;

  bool? birthday;

  bool? gender;

  bool? civility;

  bool? profession;

  bool? academicLevel;

  bool? language;

  @override
  List<Object?> get props => [
        firstname,
        lastname,
        email,
        phone,
        description,
        address,
        birthday,
        gender,
        civility,
        profession,
        academicLevel,
        language
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberTypeFromJson(
          json);

  int? minValue;

  int? maxValue;

  bool? interval;

  @override
  List<Object?> get props => [minValue, maxValue, interval];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsTypeFromJson(
          json);

  String? name;

  String? type;

  @override
  List<Object?> get props => [name, type];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiTypeFromJson(
          json);

  int? link;

  @JsonKey(unknownEnumValue: ApiMethods.artemisUnknown)
  ApiMethods? method;

  String? auth;

  String? secret;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsType>?
      params;

  @override
  List<Object?> get props => [link, method, auth, secret, params];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixTypeFromJson(
          json);

  String? lines;

  String? columns;

  @override
  List<Object?> get props => [lines, columns];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleTypeFromJson(
          json);

  String? leftLabel;

  String? rightLabel;

  @override
  List<Object?> get props => [leftLabel, rightLabel];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoTypeFromJson(
          json);

  late String item;

  bool? enable;

  @override
  List<Object?> get props => [item, enable];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepTypeFromJson(
          json);

  late String id;

  @override
  List<Object?> get props => [id];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoTypeFromJson(
          json);

  late String id;

  int? order;

  String? title;

  late List<
          GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoType>
      choices;

  bool? mandatory;

  @JsonKey(unknownEnumValue: QuestionTypeEnum.artemisUnknown)
  QuestionTypeEnum? type;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepType?
      challengeStep;

  int? points;

  bool? score;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [
        id,
        order,
        title,
        choices,
        mandatory,
        type,
        challengeStep,
        points,
        score,
        createdAt,
        updatedAt
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesTypeFromJson(
          json);

  double? maxResponses;

  bool? personalised;

  bool? unique;

  bool? random;

  bool? leaderboard;

  bool? api;

  bool? image;

  bool? interaction;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType?
      suggestions;

  @override
  List<Object?> get props => [
        maxResponses,
        personalised,
        unique,
        random,
        leaderboard,
        api,
        image,
        interaction,
        suggestions
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyTypeFromJson(
          json);

  int? levels;

  @override
  List<Object?> get props => [levels];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreTypeFromJson(
          json);

  int? min;

  @override
  List<Object?> get props => [min];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadTypeFromJson(
          json);

  String? url;

  String? image;

  @override
  List<Object?> get props => [url, image];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentTypeFromJson(
          json);

  int? rank;

  @override
  List<Object?> get props => [rank];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemTypeFromJson(
          json);

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType?
      verification;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType?
      verified;

  @override
  List<Object?> get props => [verification, verified];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationTypeFromJson(
          json);

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType?
      number;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType?
      email;

  @override
  List<Object?> get props => [number, email];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoTypeFromJson(
          json);

  int? minSeconds;

  @override
  List<Object?> get props => [minSeconds];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeFromJson(
          json);

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size48;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size96;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size144;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size240;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size480;

  @override
  List<Object?> get props => [size48, size96, size144, size240, size480];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesTypeFromJson(
          json);

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType?
      svg;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType?
      png;

  @override
  List<Object?> get props => [svg, png];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesTypeFromJson(
          json);

  @JsonKey(unknownEnumValue: SocialImageStyleEnum.artemisUnknown)
  late SocialImageStyleEnum style;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType>?
      images;

  @override
  List<Object?> get props => [style, images];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? fontIcon;

  late DateTime createdAt;

  late DateTime updatedAt;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType>?
      images;

  @override
  List<Object?> get props =>
      [id, name, code, fontIcon, createdAt, updatedAt, images];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaTypeFromJson(
          json);

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType?
      socialMedia;

  @JsonKey(unknownEnumValue: SocialActionEnum.artemisUnknown)
  SocialActionEnum? action;

  @JsonKey(unknownEnumValue: SocialContentTypeEnum.artemisUnknown)
  SocialContentTypeEnum? socialContent;

  String? url;

  @override
  List<Object?> get props => [socialMedia, action, socialContent, url];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadTypeFromJson(
          json);

  String? playstore;

  String? appstore;

  String? appgallery;

  @override
  List<Object?> get props => [playstore, appstore, appgallery];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionTypeFromJson(
          json);

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxType?
      textBox;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingType?
      rating;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType?
      calculated;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateType?
      date;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactType?
      contact;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberType?
      number;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType?
      api;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixType?
      matrix;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleType?
      toggle;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType?
      choices;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyType?
      smiley;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreType?
      score;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadType?
      lead;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType?
      verification;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoType?
      video;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType?
      socialMedia;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadType?
      appDownload;

  @override
  List<Object?> get props => [
        textBox,
        rating,
        calculated,
        date,
        contact,
        number,
        api,
        matrix,
        toggle,
        choices,
        smiley,
        score,
        lead,
        verification,
        video,
        socialMedia,
        appDownload
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionTypeFromJson(
          json);

  late String id;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType?
      activityType;

  bool? required;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType?
      definition;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props =>
      [id, activityType, required, definition, createdAt, updatedAt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldTypeFromJson(
          json);

  @JsonKey(unknownEnumValue: AudienceCriteriaFieldEnum.artemisUnknown)
  AudienceCriteriaFieldEnum? value;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType?
      action;

  @override
  List<Object?> get props => [value, action];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathTypeFromJson(
          json);

  late double lat;

  late double lng;

  late double order;

  @override
  List<Object?> get props => [lat, lng, order];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneTypeFromJson(
          json);

  double? radius;

  @JsonKey(unknownEnumValue: ZoneTypesEnum.artemisUnknown)
  ZoneTypesEnum? type;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathType>?
      paths;

  @override
  List<Object?> get props => [radius, type, paths];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType?
      flagSquare;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType?
      flagSquare;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateTypeFromJson(
          json);

  late String id;

  String? adminName;

  @JsonKey(unknownEnumValue: StateCapitalEnum.artemisUnknown)
  StateCapitalEnum? capital;

  double? population;

  String? ascii;

  double? lat;

  double? lng;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType?
      country;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType?
      flagSquare;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        adminName,
        capital,
        population,
        ascii,
        lat,
        lng,
        country,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType?
      flagSquare;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType?
      flagWide;

  @override
  List<Object?> get props =>
      [id, name, code, iconFlag, createdAt, updatedAt, flagSquare, flagWide];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksTypeFromJson(
          json);

  late String discount;

  String? description;

  @override
  List<Object?> get props => [discount, description];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalTypeFromJson(
          json);

  int? min;

  int? max;

  @override
  List<Object?> get props => [min, max];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationTypeFromJson(
          json);

  late String id;

  late int rank;

  String? color;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureType?
      picture;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksType?
      perks;

  late int lossAmount;

  int? nextLevelMax;

  late int inactivityCycle;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalType?
      levelInterval;

  String? reputationLevel;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [
        id,
        rank,
        color,
        picture,
        perks,
        lossAmount,
        nextLevelMax,
        inactivityCycle,
        levelInterval,
        reputationLevel,
        createdAt,
        updatedAt
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesTypeFromJson(
          json);

  DateTime? startDate;

  DateTime? endDate;

  String? minValue;

  String? maxValue;

  String? value;

  List<String>? values;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType?
      zone;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType>?
      countries;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType>?
      states;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType>?
      languages;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType>?
      reputations;

  @override
  List<Object?> get props => [
        startDate,
        endDate,
        minValue,
        maxValue,
        value,
        values,
        zone,
        countries,
        states,
        languages,
        reputations
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterTypeFromJson(
          json);

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType?
      field;

  @JsonKey(name: 'operator', unknownEnumValue: OperatorEnum.artemisUnknown)
  OperatorEnum? kw$operator;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType>?
      values;

  @override
  List<Object?> get props => [field, kw$operator, values];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentTypeFromJson(
          json);

  int? rank;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType?
      criteria;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType>?
      filters;

  @override
  List<Object?> get props => [rank, criteria, filters];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceTypeFromJson(
          json);

  late String id;

  String? icon;

  String? title;

  late DateTime createdAt;

  late DateTime updatedAt;

  String? description;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType?
      media;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType>?
      segments;

  @override
  List<Object?> get props =>
      [id, icon, title, createdAt, updatedAt, description, media, segments];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeTypeFromJson(
          json);

  late String id;

  String? title;

  String? description;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$MediaType?
      media;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType?
      challengeType;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$UserType?
      creator;

  DateTime? startDate;

  DateTime? endDate;

  @JsonKey(unknownEnumValue: ChallengeStatusEnum.artemisUnknown)
  ChallengeStatusEnum? status;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeWinner>?
      winners;

  List<GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeCheckpoint>?
      checkpoints;

  int? maxAnswers;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType$AudienceType?
      audience;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [
        id,
        title,
        description,
        media,
        challengeType,
        creator,
        startDate,
        endDate,
        status,
        winners,
        checkpoints,
        maxAnswers,
        audience,
        createdAt,
        updatedAt
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketTypeFromJson(
          json);

  String? amount;

  @JsonKey(unknownEnumValue: PocketUsageType.artemisUnknown)
  late PocketUsageType usage;

  @JsonKey(unknownEnumValue: PocketTypeEnum.artemisUnknown)
  late PocketTypeEnum pocketType;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType$ChallengeType?
      challenge;

  @override
  List<Object?> get props => [amount, usage, pocketType, challenge];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType
    extends JsonSerializable with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType();

  factory GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoTypeFromJson(
          json);

  late String id;

  GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType$PocketType?
      pocket;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [id, pocket, createdAt, updatedAt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWallet$Query extends JsonSerializable
    with EquatableMixin {
  GetCurrentUserQuantitativeWallet$Query();

  factory GetCurrentUserQuantitativeWallet$Query.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWallet$QueryFromJson(json);

  late GetCurrentUserQuantitativeWallet$Query$WalletOnePocketDtoType
      getCurrentUserQuantitativeWallet;

  @override
  List<Object?> get props => [getCurrentUserQuantitativeWallet];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWallet$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class TargetACIInput extends JsonSerializable with EquatableMixin {
  TargetACIInput({
    this.pos,
    this.wholesaler,
    this.manufacturer,
    this.user,
  });

  factory TargetACIInput.fromJson(Map<String, dynamic> json) =>
      _$TargetACIInputFromJson(json);

  String? pos;

  String? wholesaler;

  String? manufacturer;

  String? user;

  @override
  List<Object?> get props => [pos, wholesaler, manufacturer, user];

  @override
  Map<String, dynamic> toJson() => _$TargetACIInputToJson(this);
}

@JsonSerializable(explicitToJson: true)
class IsWalletAndCardInitialized$Query$IsWalletAndCardInititalizedDtoType
    extends JsonSerializable with EquatableMixin {
  IsWalletAndCardInitialized$Query$IsWalletAndCardInititalizedDtoType();

  factory IsWalletAndCardInitialized$Query$IsWalletAndCardInititalizedDtoType.fromJson(
          Map<String, dynamic> json) =>
      _$IsWalletAndCardInitialized$Query$IsWalletAndCardInititalizedDtoTypeFromJson(
          json);

  late bool isUserCardCreated;

  late bool isQuantitativeWalletCreated;

  @override
  List<Object?> get props => [isUserCardCreated, isQuantitativeWalletCreated];

  @override
  Map<String, dynamic> toJson() =>
      _$IsWalletAndCardInitialized$Query$IsWalletAndCardInititalizedDtoTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class IsWalletAndCardInitialized$Query extends JsonSerializable
    with EquatableMixin {
  IsWalletAndCardInitialized$Query();

  factory IsWalletAndCardInitialized$Query.fromJson(
          Map<String, dynamic> json) =>
      _$IsWalletAndCardInitialized$QueryFromJson(json);

  late IsWalletAndCardInitialized$Query$IsWalletAndCardInititalizedDtoType
      isWalletAndCardInitialized;

  @override
  List<Object?> get props => [isWalletAndCardInitialized];

  @override
  Map<String, dynamic> toJson() =>
      _$IsWalletAndCardInitialized$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class WalletOwnerHasEnoughBalance$Query$WalletOwnerHasEnoughBalanceType
    extends JsonSerializable with EquatableMixin {
  WalletOwnerHasEnoughBalance$Query$WalletOwnerHasEnoughBalanceType();

  factory WalletOwnerHasEnoughBalance$Query$WalletOwnerHasEnoughBalanceType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletOwnerHasEnoughBalance$Query$WalletOwnerHasEnoughBalanceTypeFromJson(
          json);

  late bool hasEnoughBalance;

  @override
  List<Object?> get props => [hasEnoughBalance];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletOwnerHasEnoughBalance$Query$WalletOwnerHasEnoughBalanceTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletOwnerHasEnoughBalance$Query extends JsonSerializable
    with EquatableMixin {
  WalletOwnerHasEnoughBalance$Query();

  factory WalletOwnerHasEnoughBalance$Query.fromJson(
          Map<String, dynamic> json) =>
      _$WalletOwnerHasEnoughBalance$QueryFromJson(json);

  late WalletOwnerHasEnoughBalance$Query$WalletOwnerHasEnoughBalanceType
      walletOwnerHasEnoughBalance;

  @override
  List<Object?> get props => [walletOwnerHasEnoughBalance];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletOwnerHasEnoughBalance$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PhoneType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PhoneType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PhoneTypeFromJson(
          json);

  String? number;

  bool? isValid;

  String? countryCode;

  int? validationNumber;

  @override
  List<Object?> get props => [number, isValid, countryCode, validationNumber];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageType$PictureType?
      flagWide;

  @override
  List<Object?> get props =>
      [id, name, code, iconFlag, createdAt, updatedAt, flagSquare, flagWide];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$LonLatType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$LonLatType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$LonLatType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$LonLatTypeFromJson(
          json);

  String? type;

  List<double>? coordinates;

  @override
  List<Object?> get props => [type, coordinates];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$LonLatTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateTypeFromJson(
          json);

  late String id;

  late String name;

  String? adminName;

  @JsonKey(unknownEnumValue: StateCapitalEnum.artemisUnknown)
  StateCapitalEnum? capital;

  double? population;

  String? ascii;

  double? lat;

  double? lng;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$CountryType?
      country;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        adminName,
        capital,
        population,
        ascii,
        lat,
        lng,
        country,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
          json);

  String? number;

  String? countryCode;

  @override
  List<Object?> get props => [number, countryCode];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$FullAddressOwnerType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$FullAddressOwnerType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$FullAddressOwnerType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$FullAddressOwnerTypeFromJson(
          json);

  String? name;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType?
      phone;

  @override
  List<Object?> get props => [name, phone];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$FullAddressOwnerTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressTypeFromJson(
          json);

  String? city;

  String? address;

  String? postCode;

  String? addressLine;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$LonLatType?
      location;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$CountryType?
      country;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$StateType?
      state;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType$FullAddressOwnerType?
      owner;

  @override
  List<Object?> get props =>
      [city, address, postCode, addressLine, location, country, state, owner];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeFromJson(
          json);

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size48;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size96;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size144;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size240;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size480;

  @override
  List<Object?> get props => [size48, size96, size144, size240, size480];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesTypeFromJson(
          json);

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType?
      svg;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType?
      png;

  @override
  List<Object?> get props => [svg, png];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesTypeFromJson(
          json);

  @JsonKey(unknownEnumValue: SocialImageStyleEnum.artemisUnknown)
  late SocialImageStyleEnum style;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType>?
      images;

  @override
  List<Object?> get props => [style, images];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? fontIcon;

  late DateTime createdAt;

  late DateTime updatedAt;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType$SocialImagesType>?
      images;

  @override
  List<Object?> get props =>
      [id, name, code, fontIcon, createdAt, updatedAt, images];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueTypeFromJson(
          json);

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType$SocialType?
      name;

  String? value;

  @override
  List<Object?> get props => [name, value];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$OoredooDataType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$OoredooDataType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$OoredooDataType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$OoredooDataTypeFromJson(
          json);

  String? id;

  @override
  List<Object?> get props => [id];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$OoredooDataTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$FacebookDataType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$FacebookDataType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$FacebookDataType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$FacebookDataTypeFromJson(
          json);

  late String id;

  String? name;

  late String token;

  late String email;

  @JsonKey(name: 'last_name')
  String? lastName;

  @JsonKey(name: 'first_name')
  String? firstName;

  @override
  List<Object?> get props => [id, name, token, email, lastName, firstName];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$FacebookDataTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$GoogleDataType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$GoogleDataType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$GoogleDataType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$GoogleDataTypeFromJson(
          json);

  late String sub;

  String? name;

  late String email;

  late String token;

  String? locale;

  String? picture;

  @JsonKey(name: 'given_name')
  String? givenName;

  @JsonKey(name: 'family_name')
  String? familyName;

  @JsonKey(name: 'email_verified')
  bool? emailVerified;

  @override
  List<Object?> get props => [
        sub,
        name,
        email,
        token,
        locale,
        picture,
        givenName,
        familyName,
        emailVerified
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$GoogleDataTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$AppleDataType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$AppleDataType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$AppleDataType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$AppleDataTypeFromJson(
          json);

  String? email;

  String? status;

  String? givenName;

  String? familyName;

  late String identityToken;

  String? userIdentifier;

  String? authorizationCode;

  @override
  List<Object?> get props => [
        email,
        status,
        givenName,
        familyName,
        identityToken,
        userIdentifier,
        authorizationCode
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$AppleDataTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataTypeFromJson(
          json);

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$OoredooDataType?
      ooredoo;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$FacebookDataType?
      facebook;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$GoogleDataType?
      google;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType$AppleDataType?
      apple;

  @override
  List<Object?> get props => [ooredoo, facebook, google, apple];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserEducationType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserEducationType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserEducationType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserEducationTypeFromJson(
          json);

  @JsonKey(unknownEnumValue: AcademicLevel.artemisUnknown)
  AcademicLevel? level;

  String? name;

  String? description;

  List<String>? tags;

  DateTime? from;

  DateTime? to;

  bool? graduated;

  @override
  List<Object?> get props =>
      [level, name, description, tags, from, to, graduated];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserEducationTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateTypeFromJson(
          json);

  late String id;

  late String name;

  String? adminName;

  @JsonKey(unknownEnumValue: StateCapitalEnum.artemisUnknown)
  StateCapitalEnum? capital;

  double? population;

  String? ascii;

  double? lat;

  double? lng;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$CountryType?
      country;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        adminName,
        capital,
        population,
        ascii,
        lat,
        lng,
        country,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkTypeFromJson(
          json);

  String? company;

  String? position;

  String? description;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType$StateType?
      city;

  List<String>? tags;

  DateTime? from;

  DateTime? to;

  bool? current;

  @override
  List<Object?> get props =>
      [company, position, description, city, tags, from, to, current];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateTypeFromJson(
          json);

  late String id;

  late String name;

  String? adminName;

  @JsonKey(unknownEnumValue: StateCapitalEnum.artemisUnknown)
  StateCapitalEnum? capital;

  double? population;

  String? ascii;

  double? lat;

  double? lng;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$CountryType?
      country;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        adminName,
        capital,
        population,
        ascii,
        lat,
        lng,
        country,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserTypeFromJson(json);

  late String id;

  @JsonKey(unknownEnumValue: App.artemisUnknown)
  List<App>? apps;

  String? email;

  @JsonKey(unknownEnumValue: UserRole.artemisUnknown)
  List<UserRole>? roles;

  String? title;

  String? about;

  @JsonKey(unknownEnumValue: Gender.artemisUnknown)
  Gender? gender;

  String? locale;

  @JsonKey(unknownEnumValue: SourcesEnum.artemisUnknown)
  SourcesEnum? source;

  @JsonKey(unknownEnumValue: UserStatus.artemisUnknown)
  UserStatus? status;

  String? lastName;

  String? username;

  String? firstName;

  bool? plugged;

  late DateTime createdAt;

  late DateTime updatedAt;

  bool? isMailValid;

  DateTime? dateOfBirth;

  String? phoneNumber;

  @JsonKey(unknownEnumValue: MobileThemesEnum.artemisUnknown)
  MobileThemesEnum? mobileTheme;

  String? placeOfBirth;

  @JsonKey(unknownEnumValue: MaritalStatus.artemisUnknown)
  MaritalStatus? maritalStatus;

  bool? newsletterSubs;

  bool? hasAutoGeneratedEmail;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PhoneType? phone;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PictureType? picture;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$PictureType>?
      pictures;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$LanguageType>?
      languages;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$CountryType?
      nationality;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType>?
      billingAddress;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType>?
      shippingAddress;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$FullAddressType>?
      residentialAddress;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType>?
      chatContact;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialValueType>?
      socialMedia;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$SocialLoginDataType?
      socialLoginData;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserEducationType>?
      education;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$UserWorkType>?
      work;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType$StateType>?
      lived;

  List<String>? hobbies;

  List<String>? interests;

  @override
  List<Object?> get props => [
        id,
        apps,
        email,
        roles,
        title,
        about,
        gender,
        locale,
        source,
        status,
        lastName,
        username,
        firstName,
        plugged,
        createdAt,
        updatedAt,
        isMailValid,
        dateOfBirth,
        phoneNumber,
        mobileTheme,
        placeOfBirth,
        maritalStatus,
        newsletterSubs,
        hasAutoGeneratedEmail,
        phone,
        picture,
        pictures,
        languages,
        nationality,
        billingAddress,
        shippingAddress,
        residentialAddress,
        chatContact,
        socialMedia,
        socialLoginData,
        education,
        work,
        lived,
        hobbies,
        interests
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserTypeToJson(this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? symbol;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        symbol,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyTypeFromJson(
          json);

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType?
      currency;

  @JsonKey(name: 'default')
  bool? kw$default;

  @override
  List<Object?> get props => [currency, kw$default];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageType$PictureType?
      flagWide;

  @override
  List<Object?> get props =>
      [id, name, code, iconFlag, createdAt, updatedAt, flagSquare, flagWide];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayTypeFromJson(
          json);

  @JsonKey(unknownEnumValue: Days.artemisUnknown)
  Days? day;

  String? from;

  String? to;

  @override
  List<Object?> get props => [day, from, to];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$OpeningHoursType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$OpeningHoursType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$OpeningHoursType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$OpeningHoursTypeFromJson(
          json);

  @JsonKey(unknownEnumValue: OpeningStatus.artemisUnknown)
  OpeningStatus? status;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType>?
      hours;

  @override
  List<Object?> get props => [status, hours];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$OpeningHoursTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayTypeFromJson(
          json);

  @JsonKey(unknownEnumValue: Days.artemisUnknown)
  Days? day;

  String? from;

  String? to;

  @override
  List<Object?> get props => [day, from, to];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SpecialOfferType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SpecialOfferType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SpecialOfferType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SpecialOfferTypeFromJson(
          json);

  @JsonKey(unknownEnumValue: SpecialOffersType.artemisUnknown)
  SpecialOffersType? offerType;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType>?
      hours;

  @override
  List<Object?> get props => [offerType, hours];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SpecialOfferTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$LonLatType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$LonLatType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$LonLatType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$LonLatTypeFromJson(
          json);

  String? type;

  List<double>? coordinates;

  @override
  List<Object?> get props => [type, coordinates];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$LonLatTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateTypeFromJson(
          json);

  late String id;

  late String name;

  String? adminName;

  @JsonKey(unknownEnumValue: StateCapitalEnum.artemisUnknown)
  StateCapitalEnum? capital;

  double? population;

  String? ascii;

  double? lat;

  double? lng;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType?
      country;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        adminName,
        capital,
        population,
        ascii,
        lat,
        lng,
        country,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
          json);

  String? number;

  String? countryCode;

  @override
  List<Object?> get props => [number, countryCode];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerTypeFromJson(
          json);

  String? name;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType?
      phone;

  @override
  List<Object?> get props => [name, phone];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressTypeFromJson(
          json);

  String? city;

  String? address;

  String? postCode;

  String? addressLine;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$LonLatType?
      location;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$CountryType?
      country;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$StateType?
      state;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType?
      owner;

  @override
  List<Object?> get props =>
      [city, address, postCode, addressLine, location, country, state, owner];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeFromJson(
          json);

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size48;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size96;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size144;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size240;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size480;

  @override
  List<Object?> get props => [size48, size96, size144, size240, size480];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesTypeFromJson(
          json);

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType?
      svg;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType?
      png;

  @override
  List<Object?> get props => [svg, png];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesTypeFromJson(
          json);

  @JsonKey(unknownEnumValue: SocialImageStyleEnum.artemisUnknown)
  late SocialImageStyleEnum style;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType>?
      images;

  @override
  List<Object?> get props => [style, images];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? fontIcon;

  late DateTime createdAt;

  late DateTime updatedAt;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType>?
      images;

  @override
  List<Object?> get props =>
      [id, name, code, fontIcon, createdAt, updatedAt, images];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueTypeFromJson(
          json);

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType$SocialType?
      name;

  String? value;

  @override
  List<Object?> get props => [name, value];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType>?
      deg360;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatTypeFromJson(
          json);

  String? type;

  List<double>? coordinates;

  @override
  List<Object?> get props => [type, coordinates];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateTypeFromJson(
          json);

  late String id;

  late String name;

  String? adminName;

  @JsonKey(unknownEnumValue: StateCapitalEnum.artemisUnknown)
  StateCapitalEnum? capital;

  double? population;

  String? ascii;

  double? lat;

  double? lng;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType?
      country;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        adminName,
        capital,
        population,
        ascii,
        lat,
        lng,
        country,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
          json);

  String? number;

  String? countryCode;

  @override
  List<Object?> get props => [number, countryCode];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
          json);

  String? name;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType?
      phone;

  @override
  List<Object?> get props => [name, phone];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressTypeFromJson(
          json);

  String? city;

  String? address;

  String? postCode;

  String? addressLine;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType?
      location;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType?
      country;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType?
      state;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType?
      owner;

  @override
  List<Object?> get props =>
      [city, address, postCode, addressLine, location, country, state, owner];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalTypeFromJson(
          json);

  String? vat;

  String? register;

  String? licence;

  @override
  List<Object?> get props => [vat, register, licence];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
          json);

  String? type;

  List<double>? coordinates;

  @override
  List<Object?> get props => [type, coordinates];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
          json);

  late String id;

  String? adminName;

  @JsonKey(unknownEnumValue: StateCapitalEnum.artemisUnknown)
  StateCapitalEnum? capital;

  double? population;

  String? ascii;

  double? lat;

  double? lng;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType?
      country;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        adminName,
        capital,
        population,
        ascii,
        lat,
        lng,
        country,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
          json);

  String? number;

  String? countryCode;

  @override
  List<Object?> get props => [number, countryCode];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
          json);

  String? name;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType?
      phone;

  @override
  List<Object?> get props => [name, phone];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
          json);

  String? city;

  String? address;

  String? postCode;

  String? addressLine;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType?
      location;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType?
      country;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType?
      state;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType?
      owner;

  @override
  List<Object?> get props =>
      [city, address, postCode, addressLine, location, country, state, owner];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
          json);

  late String name;

  @JsonKey(unknownEnumValue: BankDetailsHolderTypeEnum.artemisUnknown)
  BankDetailsHolderTypeEnum? type;

  late WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
      address;

  @override
  List<Object?> get props => [name, type, address];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
          json);

  @JsonKey(name: 'default')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      kw$default;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size16;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size24;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size32;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size48;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size64;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size128;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size256;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size512;

  @override
  List<Object?> get props => [
        kw$default,
        size16,
        size24,
        size32,
        size48,
        size64,
        size128,
        size256,
        size512
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
          json);

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType?
      svg;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType?
      png;

  String? icon;

  @override
  List<Object?> get props => [svg, png, icon];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? bic;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType?
      logo;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [id, name, code, bic, logo, createdAt, updatedAt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsTypeFromJson(
          json);

  late String id;

  late WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType
      holder;

  late String account;

  String? iban;

  late WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType
      bank;

  String? externalId;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props =>
      [id, holder, account, iban, bank, externalId, createdAt, updatedAt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
          json);

  String? number;

  bool? isValid;

  String? countryCode;

  int? validationNumber;

  @override
  List<Object?> get props => [number, isValid, countryCode, validationNumber];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsTypeFromJson(
          json);

  String? website;

  String? email;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType?
      phone;

  @override
  List<Object?> get props => [website, email, phone];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyTypeFromJson(
          json);

  late String id;

  String? name;

  String? description;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$MediaType?
      media;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$FullAddressType?
      address;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType?
      legal;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType>?
      banks;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType?
      contact;

  bool? logistic;

  List<String>? tags;

  String? externalId;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [
        id,
        name,
        description,
        media,
        address,
        legal,
        banks,
        contact,
        logistic,
        tags,
        externalId,
        createdAt,
        updatedAt
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSCategoryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSCategoryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSCategoryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSCategoryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSCategoryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSCategoryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSCategoryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSCategoryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSCategoryTypeFromJson(
          json);

  late String id;

  String? name;

  String? mapPicture;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSCategoryType$PictureType?
      picture;

  @override
  List<Object?> get props =>
      [id, name, mapPicture, createdAt, updatedAt, picture];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSCategoryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSServicesType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSServicesType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSServicesType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSServicesTypeFromJson(
          json);

  String? id;

  int? index;

  String? name;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [id, index, name, createdAt, updatedAt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSServicesTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngTypeFromJson(
          json);

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      alt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      alt2x;

  @JsonKey(name: 'alt_128')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      alt128;

  @JsonKey(name: 'alt_256')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      alt256;

  @JsonKey(name: 'alt_512')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      alt512;

  @JsonKey(name: 'card_flat')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      cardFlat;

  @JsonKey(name: 'card_flat2x')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      cardFlat2x;

  @JsonKey(name: 'card_flat_128')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      cardFlat128;

  @JsonKey(name: 'card_flat_256')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      cardFlat256;

  @JsonKey(name: 'card_flat_512')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      cardFlat512;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      dark;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      dark2x;

  @JsonKey(name: 'dark_128')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      dark128;

  @JsonKey(name: 'dark_256')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      dark256;

  @JsonKey(name: 'dark_512')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      dark512;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      flat;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      flat2x;

  @JsonKey(name: 'flat_128')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      flat128;

  @JsonKey(name: 'flat_256')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      flat256;

  @JsonKey(name: 'flat_512')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      flat512;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      light;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      light2x;

  @JsonKey(name: 'light_128')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      light128;

  @JsonKey(name: 'light_256')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      light256;

  @JsonKey(name: 'light_512')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      light512;

  @JsonKey(name: 'default')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      kw$default;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      default2x;

  @JsonKey(name: 'default_128')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      default128;

  @JsonKey(name: 'default_256')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      default256;

  @JsonKey(name: 'default_512')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      default512;

  @override
  List<Object?> get props => [
        alt,
        alt2x,
        alt128,
        alt256,
        alt512,
        cardFlat,
        cardFlat2x,
        cardFlat128,
        cardFlat256,
        cardFlat512,
        dark,
        dark2x,
        dark128,
        dark256,
        dark512,
        flat,
        flat2x,
        flat128,
        flat256,
        flat512,
        light,
        light2x,
        light128,
        light256,
        light512,
        kw$default,
        default2x,
        default128,
        default256,
        default512
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgTypeFromJson(
          json);

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType?
      alt;

  @JsonKey(name: 'card_flat')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType?
      cardFlat;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType?
      dark;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType?
      flat;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType?
      light;

  @JsonKey(name: 'default')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType?
      kw$default;

  @override
  List<Object?> get props => [alt, cardFlat, dark, flat, light, kw$default];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesTypeFromJson(
          json);

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType?
      png;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType?
      svg;

  @override
  List<Object?> get props => [png, svg];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  @JsonKey(unknownEnumValue: PaymentTypeEnum.artemisUnknown)
  PaymentTypeEnum? paymentType;

  String? materialIcon;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType?
      images;

  @override
  List<Object?> get props =>
      [id, name, code, paymentType, materialIcon, createdAt, updatedAt, images];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType>?
      deg360;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatTypeFromJson(
          json);

  String? type;

  List<double>? coordinates;

  @override
  List<Object?> get props => [type, coordinates];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateTypeFromJson(
          json);

  late String id;

  String? adminName;

  @JsonKey(unknownEnumValue: StateCapitalEnum.artemisUnknown)
  StateCapitalEnum? capital;

  double? population;

  String? ascii;

  double? lat;

  double? lng;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType?
      country;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        adminName,
        capital,
        population,
        ascii,
        lat,
        lng,
        country,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
          json);

  String? number;

  String? countryCode;

  @override
  List<Object?> get props => [number, countryCode];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
          json);

  String? name;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType?
      phone;

  @override
  List<Object?> get props => [name, phone];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressTypeFromJson(
          json);

  String? city;

  String? address;

  String? postCode;

  String? addressLine;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType?
      location;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType?
      country;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType?
      state;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType?
      owner;

  @override
  List<Object?> get props =>
      [city, address, postCode, addressLine, location, country, state, owner];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalTypeFromJson(
          json);

  String? vat;

  String? register;

  String? licence;

  @override
  List<Object?> get props => [vat, register, licence];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
          json);

  String? type;

  List<double>? coordinates;

  @override
  List<Object?> get props => [type, coordinates];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
          json);

  late String id;

  late String name;

  String? adminName;

  @JsonKey(unknownEnumValue: StateCapitalEnum.artemisUnknown)
  StateCapitalEnum? capital;

  double? population;

  String? ascii;

  double? lat;

  double? lng;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType?
      country;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        adminName,
        capital,
        population,
        ascii,
        lat,
        lng,
        country,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
          json);

  String? number;

  String? countryCode;

  @override
  List<Object?> get props => [number, countryCode];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
          json);

  String? name;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType?
      phone;

  @override
  List<Object?> get props => [name, phone];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
          json);

  String? city;

  String? address;

  String? postCode;

  String? addressLine;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType?
      location;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType?
      country;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType?
      state;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType?
      owner;

  @override
  List<Object?> get props =>
      [city, address, postCode, addressLine, location, country, state, owner];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
          json);

  late String name;

  @JsonKey(unknownEnumValue: BankDetailsHolderTypeEnum.artemisUnknown)
  BankDetailsHolderTypeEnum? type;

  late WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
      address;

  @override
  List<Object?> get props => [name, type, address];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
          json);

  @JsonKey(name: 'default')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      kw$default;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size16;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size24;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size32;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size48;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size64;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size128;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size256;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size512;

  @override
  List<Object?> get props => [
        kw$default,
        size16,
        size24,
        size32,
        size48,
        size64,
        size128,
        size256,
        size512
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
          json);

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType?
      svg;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType?
      png;

  String? icon;

  @override
  List<Object?> get props => [svg, png, icon];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? bic;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType?
      logo;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [id, name, code, bic, logo, createdAt, updatedAt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsTypeFromJson(
          json);

  late String id;

  late WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
      holder;

  late String account;

  String? iban;

  late WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
      bank;

  String? externalId;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props =>
      [id, holder, account, iban, bank, externalId, createdAt, updatedAt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
          json);

  String? number;

  bool? isValid;

  String? countryCode;

  int? validationNumber;

  @override
  List<Object?> get props => [number, isValid, countryCode, validationNumber];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsTypeFromJson(
          json);

  String? website;

  String? email;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType?
      phone;

  @override
  List<Object?> get props => [website, email, phone];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyTypeFromJson(
          json);

  late String id;

  String? name;

  String? description;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType?
      media;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType?
      address;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType?
      legal;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType>?
      banks;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType?
      contact;

  bool? logistic;

  List<String>? tags;

  String? externalId;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [
        id,
        name,
        description,
        media,
        address,
        legal,
        banks,
        contact,
        logistic,
        tags,
        externalId,
        createdAt,
        updatedAt
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramTypeFromJson(
          json);

  late String id;

  late DateTime createdAt;

  late DateTime updatedAt;

  String? programName;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType?
      picture;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType?
      company;

  @override
  List<Object?> get props =>
      [id, createdAt, updatedAt, programName, picture, company];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyTypeFromJson(
          json);

  late DateTime to;

  late DateTime from;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType?
      loyaltyProgram;

  @override
  List<Object?> get props => [to, from, loyaltyProgram];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleTypeFromJson(
          json);

  late String id;

  List<String>? tags;

  String? name;

  String? title;

  List<String>? email;

  List<String>? phone;

  String? website;

  String? subtitle;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$TargetCurrencyType>?
      currencies;

  String? turnover;

  String? reference;

  bool? published;

  late DateTime createdAt;

  late DateTime updatedAt;

  String? brandColor;

  bool? isFollowed;

  String? description;

  List<String>? contactEmails;

  double? averageCustomers;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$LanguageType>?
      languages;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PictureType?
      picture;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PictureType>?
      outsidePictures;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PictureType>?
      insidePictures;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$OpeningHoursType?
      openingHours;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SpecialOfferType>?
      specialOffers;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$FullAddressType>?
      locations;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType>?
      chatContact;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$SocialValueType>?
      socialMedia;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$CompanyType?
      company;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSCategoryType>?
      posCategory;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSServicesType>?
      services;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$PaymentType>?
      paymentMethods;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType$POSLoyaltyType>?
      loyaltyPrograms;

  @override
  List<Object?> get props => [
        id,
        tags,
        name,
        title,
        email,
        phone,
        website,
        subtitle,
        currencies,
        turnover,
        reference,
        published,
        createdAt,
        updatedAt,
        brandColor,
        isFollowed,
        description,
        contactEmails,
        averageCustomers,
        languages,
        picture,
        outsidePictures,
        insidePictures,
        openingHours,
        specialOffers,
        locations,
        chatContact,
        socialMedia,
        company,
        posCategory,
        services,
        paymentMethods,
        loyaltyPrograms
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? symbol;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        symbol,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyTypeFromJson(
          json);

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType?
      currency;

  @JsonKey(name: 'default')
  bool? kw$default;

  @override
  List<Object?> get props => [currency, kw$default];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$IPhoneType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$IPhoneType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$IPhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$IPhoneTypeFromJson(
          json);

  String? number;

  String? countryCode;

  @override
  List<Object?> get props => [number, countryCode];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$IPhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$LonLatType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$LonLatType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$LonLatType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$LonLatTypeFromJson(
          json);

  String? type;

  List<double>? coordinates;

  @override
  List<Object?> get props => [type, coordinates];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$LonLatTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateTypeFromJson(
          json);

  late String id;

  late String name;

  String? adminName;

  @JsonKey(unknownEnumValue: StateCapitalEnum.artemisUnknown)
  StateCapitalEnum? capital;

  double? population;

  String? ascii;

  double? lat;

  double? lng;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType?
      country;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        adminName,
        capital,
        population,
        ascii,
        lat,
        lng,
        country,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
          json);

  String? number;

  String? countryCode;

  @override
  List<Object?> get props => [number, countryCode];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerTypeFromJson(
          json);

  String? name;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType?
      phone;

  @override
  List<Object?> get props => [name, phone];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressTypeFromJson(
          json);

  String? city;

  String? address;

  String? postCode;

  String? addressLine;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$LonLatType?
      location;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$CountryType?
      country;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$StateType?
      state;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType?
      owner;

  @override
  List<Object?> get props =>
      [city, address, postCode, addressLine, location, country, state, owner];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType>?
      deg360;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatTypeFromJson(
          json);

  String? type;

  List<double>? coordinates;

  @override
  List<Object?> get props => [type, coordinates];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateTypeFromJson(
          json);

  late String id;

  late String name;

  String? adminName;

  @JsonKey(unknownEnumValue: StateCapitalEnum.artemisUnknown)
  StateCapitalEnum? capital;

  double? population;

  String? ascii;

  double? lat;

  double? lng;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType?
      country;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        adminName,
        capital,
        population,
        ascii,
        lat,
        lng,
        country,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
          json);

  String? number;

  String? countryCode;

  @override
  List<Object?> get props => [number, countryCode];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
          json);

  String? name;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType?
      phone;

  @override
  List<Object?> get props => [name, phone];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressTypeFromJson(
          json);

  String? city;

  String? address;

  String? postCode;

  String? addressLine;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType?
      location;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType?
      country;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType?
      state;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType?
      owner;

  @override
  List<Object?> get props =>
      [city, address, postCode, addressLine, location, country, state, owner];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyLegalType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyLegalType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyLegalType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyLegalTypeFromJson(
          json);

  String? vat;

  String? register;

  String? licence;

  @override
  List<Object?> get props => [vat, register, licence];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyLegalTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
          json);

  String? type;

  List<double>? coordinates;

  @override
  List<Object?> get props => [type, coordinates];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
          json);

  late String id;

  String? adminName;

  @JsonKey(unknownEnumValue: StateCapitalEnum.artemisUnknown)
  StateCapitalEnum? capital;

  double? population;

  String? ascii;

  double? lat;

  double? lng;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType?
      country;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        adminName,
        capital,
        population,
        ascii,
        lat,
        lng,
        country,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
          json);

  String? number;

  String? countryCode;

  @override
  List<Object?> get props => [number, countryCode];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
          json);

  String? name;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType?
      phone;

  @override
  List<Object?> get props => [name, phone];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
          json);

  String? city;

  String? address;

  String? postCode;

  String? addressLine;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType?
      location;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType?
      country;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType?
      state;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType?
      owner;

  @override
  List<Object?> get props =>
      [city, address, postCode, addressLine, location, country, state, owner];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
          json);

  late String name;

  @JsonKey(unknownEnumValue: BankDetailsHolderTypeEnum.artemisUnknown)
  BankDetailsHolderTypeEnum? type;

  late WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
      address;

  @override
  List<Object?> get props => [name, type, address];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
          json);

  @JsonKey(name: 'default')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      kw$default;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size16;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size24;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size32;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size48;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size64;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size128;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size256;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size512;

  @override
  List<Object?> get props => [
        kw$default,
        size16,
        size24,
        size32,
        size48,
        size64,
        size128,
        size256,
        size512
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
          json);

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType?
      svg;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType?
      png;

  String? icon;

  @override
  List<Object?> get props => [svg, png, icon];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? bic;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType?
      logo;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [id, name, code, bic, logo, createdAt, updatedAt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsTypeFromJson(
          json);

  late String id;

  late WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType
      holder;

  late String account;

  String? iban;

  late WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType
      bank;

  String? externalId;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props =>
      [id, holder, account, iban, bank, externalId, createdAt, updatedAt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
          json);

  String? number;

  bool? isValid;

  String? countryCode;

  int? validationNumber;

  @override
  List<Object?> get props => [number, isValid, countryCode, validationNumber];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsTypeFromJson(
          json);

  String? website;

  String? email;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType?
      phone;

  @override
  List<Object?> get props => [website, email, phone];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyTypeFromJson(
          json);

  late String id;

  String? name;

  String? description;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$MediaType?
      media;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$FullAddressType?
      address;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyLegalType?
      legal;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$BankDetailsType>?
      banks;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType?
      contact;

  bool? logistic;

  List<String>? tags;

  String? externalId;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [
        id,
        name,
        description,
        media,
        address,
        legal,
        banks,
        contact,
        logistic,
        tags,
        externalId,
        createdAt,
        updatedAt
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerTypeFromJson(
          json);

  late String id;

  String? name;

  String? email;

  String? website;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$TargetCurrencyType>?
      currencies;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$IPhoneType?
      phone;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$IPhoneType? fax;

  late DateTime createdAt;

  late DateTime updatedAt;

  String? description;

  List<String>? contactEmails;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$FullAddressType?
      address;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$CompanyType?
      company;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType$PictureType?
      picture;

  @override
  List<Object?> get props => [
        id,
        name,
        email,
        website,
        currencies,
        phone,
        fax,
        createdAt,
        updatedAt,
        description,
        contactEmails,
        address,
        company,
        picture
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? symbol;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        symbol,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyTypeFromJson(
          json);

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType?
      currency;

  @JsonKey(name: 'default')
  bool? kw$default;

  @override
  List<Object?> get props => [currency, kw$default];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$LonLatType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$LonLatType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$LonLatType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$LonLatTypeFromJson(
          json);

  String? type;

  List<double>? coordinates;

  @override
  List<Object?> get props => [type, coordinates];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$LonLatTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateTypeFromJson(
          json);

  late String id;

  late String name;

  String? adminName;

  @JsonKey(unknownEnumValue: StateCapitalEnum.artemisUnknown)
  StateCapitalEnum? capital;

  double? population;

  String? ascii;

  double? lat;

  double? lng;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType?
      country;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        adminName,
        capital,
        population,
        ascii,
        lat,
        lng,
        country,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
          json);

  String? number;

  String? countryCode;

  @override
  List<Object?> get props => [number, countryCode];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerTypeFromJson(
          json);

  String? name;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType?
      phone;

  @override
  List<Object?> get props => [name, phone];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressTypeFromJson(
          json);

  String? city;

  String? address;

  String? postCode;

  String? addressLine;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$LonLatType?
      location;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$CountryType?
      country;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$StateType?
      state;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType?
      owner;

  @override
  List<Object?> get props =>
      [city, address, postCode, addressLine, location, country, state, owner];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType>?
      deg360;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatTypeFromJson(
          json);

  String? type;

  List<double>? coordinates;

  @override
  List<Object?> get props => [type, coordinates];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateTypeFromJson(
          json);

  late String id;

  late String name;

  String? adminName;

  @JsonKey(unknownEnumValue: StateCapitalEnum.artemisUnknown)
  StateCapitalEnum? capital;

  double? population;

  String? ascii;

  double? lat;

  double? lng;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType?
      country;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        adminName,
        capital,
        population,
        ascii,
        lat,
        lng,
        country,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
          json);

  String? number;

  String? countryCode;

  @override
  List<Object?> get props => [number, countryCode];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
          json);

  String? name;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType?
      phone;

  @override
  List<Object?> get props => [name, phone];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressTypeFromJson(
          json);

  String? city;

  String? address;

  String? postCode;

  String? addressLine;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType?
      location;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType?
      country;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType?
      state;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType?
      owner;

  @override
  List<Object?> get props =>
      [city, address, postCode, addressLine, location, country, state, owner];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyLegalTypeFromJson(
          json);

  String? vat;

  String? register;

  String? licence;

  @override
  List<Object?> get props => [vat, register, licence];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyLegalTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
          json);

  String? type;

  List<double>? coordinates;

  @override
  List<Object?> get props => [type, coordinates];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
          json);

  late String id;

  String? adminName;

  @JsonKey(unknownEnumValue: StateCapitalEnum.artemisUnknown)
  StateCapitalEnum? capital;

  double? population;

  String? ascii;

  double? lat;

  double? lng;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType?
      country;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        adminName,
        capital,
        population,
        ascii,
        lat,
        lng,
        country,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
          json);

  String? number;

  String? countryCode;

  @override
  List<Object?> get props => [number, countryCode];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
          json);

  String? name;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType?
      phone;

  @override
  List<Object?> get props => [name, phone];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
          json);

  String? city;

  String? address;

  String? postCode;

  String? addressLine;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType?
      location;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType?
      country;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType?
      state;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType?
      owner;

  @override
  List<Object?> get props =>
      [city, address, postCode, addressLine, location, country, state, owner];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
          json);

  late String name;

  @JsonKey(unknownEnumValue: BankDetailsHolderTypeEnum.artemisUnknown)
  BankDetailsHolderTypeEnum? type;

  late WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
      address;

  @override
  List<Object?> get props => [name, type, address];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
          json);

  @JsonKey(name: 'default')
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      kw$default;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size16;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size24;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size32;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size48;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size64;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size128;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size256;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size512;

  @override
  List<Object?> get props => [
        kw$default,
        size16,
        size24,
        size32,
        size48,
        size64,
        size128,
        size256,
        size512
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
          json);

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType?
      svg;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType?
      png;

  String? icon;

  @override
  List<Object?> get props => [svg, png, icon];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? bic;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType?
      logo;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [id, name, code, bic, logo, createdAt, updatedAt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsTypeFromJson(
          json);

  late String id;

  late WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType
      holder;

  late String account;

  String? iban;

  late WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType
      bank;

  String? externalId;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props =>
      [id, holder, account, iban, bank, externalId, createdAt, updatedAt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
          json);

  String? number;

  bool? isValid;

  String? countryCode;

  int? validationNumber;

  @override
  List<Object?> get props => [number, isValid, countryCode, validationNumber];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsTypeFromJson(
          json);

  String? website;

  String? email;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType?
      phone;

  @override
  List<Object?> get props => [website, email, phone];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyTypeFromJson(
          json);

  late String id;

  String? name;

  String? description;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$MediaType?
      media;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$FullAddressType?
      address;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType?
      legal;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$BankDetailsType>?
      banks;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType?
      contact;

  bool? logistic;

  List<String>? tags;

  String? externalId;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [
        id,
        name,
        description,
        media,
        address,
        legal,
        banks,
        contact,
        logistic,
        tags,
        externalId,
        createdAt,
        updatedAt
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerTypeFromJson(
          json);

  late String id;

  String? email;

  String? name;

  String? description;

  String? website;

  List<String>? contactEmails;

  List<WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$TargetCurrencyType>?
      currencies;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$PictureType?
      picture;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$FullAddressType?
      address;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType$CompanyType?
      company;

  @override
  List<Object?> get props => [
        id,
        email,
        name,
        description,
        website,
        contactEmails,
        currencies,
        createdAt,
        updatedAt,
        picture,
        address,
        company
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$OwnerDtoType extends JsonSerializable
    with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$OwnerDtoType();

  factory WalletByOwner$Query$WalletDtoType$OwnerDtoType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoTypeFromJson(json);

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$UserType? user;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$PointOfSaleType? pos;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$WholesalerType? wholesaler;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType$ManufacturerType? manufacturer;

  @override
  List<Object?> get props => [user, pos, wholesaler, manufacturer];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$OwnerDtoTypeToJson(this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaType$PictureType>?
      deg360;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType>?
      deg360;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType>?
      deg360;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionTypeFromJson(
          json);

  bool? enable;

  @JsonKey(unknownEnumValue: PredefinedActionsEnum.artemisUnknown)
  PredefinedActionsEnum? action;

  @override
  List<Object?> get props => [enable, action];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeTypeFromJson(
          json);

  late String id;

  String? title;

  String? description;

  String? icon;

  String? theme;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType?
      media;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionType?
      predefined;

  @override
  List<Object?> get props => [
        id,
        title,
        description,
        icon,
        theme,
        media,
        createdAt,
        updatedAt,
        predefined
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType>?
      deg360;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerTypeFromJson(
          json);

  late String id;

  String? title;

  String? description;

  String? icon;

  int? cost;

  @JsonKey(unknownEnumValue: JockerKindEnum.artemisUnknown)
  JockerKindEnum? kind;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType?
      media;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props =>
      [id, title, description, icon, cost, kind, media, createdAt, updatedAt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJockerFromJson(
          json);

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType?
      jocker;

  String? cost;

  @override
  List<Object?> get props => [jocker, cost];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJockerToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeTypeFromJson(
          json);

  late String id;

  String? title;

  String? description;

  String? rules;

  String? icon;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType?
      media;

  int? minStep;

  int? minCheckPoints;

  String? minGiftValue;

  int? claimReward;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType>?
      activityTypes;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker>?
      jockers;

  String? fees;

  bool? enable;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [
        id,
        title,
        description,
        rules,
        icon,
        media,
        minStep,
        minCheckPoints,
        minGiftValue,
        claimReward,
        activityTypes,
        jockers,
        fees,
        enable,
        createdAt,
        updatedAt
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType$PhoneType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType$PhoneType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType$PhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType$PhoneTypeFromJson(
          json);

  String? number;

  bool? isValid;

  String? countryCode;

  int? validationNumber;

  @override
  List<Object?> get props => [number, isValid, countryCode, validationNumber];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType$PhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserTypeFromJson(
          json);

  late String id;

  String? email;

  @JsonKey(unknownEnumValue: Gender.artemisUnknown)
  Gender? gender;

  String? lastName;

  String? username;

  String? firstName;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType$PhoneType?
      phone;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType$PictureType?
      picture;

  @override
  List<Object?> get props =>
      [id, email, gender, lastName, username, firstName, phone, picture];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeWinner
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeWinner();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeWinner.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeWinnerFromJson(
          json);

  late int rank;

  double? reward;

  @override
  List<Object?> get props => [rank, reward];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeWinnerToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeCheckpoint
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeCheckpoint();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeCheckpoint.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeCheckpointFromJson(
          json);

  int? checkpoint;

  double? amount;

  @override
  List<Object?> get props => [checkpoint, amount];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeCheckpointToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType>?
      deg360;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType>?
      deg360;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldTypeFromJson(
          json);

  @JsonKey(unknownEnumValue: AudienceCriteriaFieldEnum.artemisUnknown)
  AudienceCriteriaFieldEnum? field;

  @JsonKey(unknownEnumValue: OperatorEnum.artemisUnknown)
  List<OperatorEnum>? operators;

  @override
  List<Object?> get props => [field, operators];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaTypeFromJson(
          json);

  late String id;

  String? icon;

  String? title;

  String? style;

  bool? enable;

  String? description;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType?
      media;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldType>?
      fields;

  @override
  List<Object?> get props => [
        id,
        icon,
        title,
        style,
        enable,
        description,
        createdAt,
        updatedAt,
        media,
        fields
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType>?
      deg360;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionTypeFromJson(
          json);

  bool? enable;

  @JsonKey(unknownEnumValue: PredefinedActionsEnum.artemisUnknown)
  PredefinedActionsEnum? action;

  @override
  List<Object?> get props => [enable, action];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeTypeFromJson(
          json);

  late String id;

  String? title;

  String? description;

  String? icon;

  String? theme;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType?
      media;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionType?
      predefined;

  @override
  List<Object?> get props => [
        id,
        title,
        description,
        icon,
        theme,
        media,
        createdAt,
        updatedAt,
        predefined
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxTypeFromJson(
          json);

  int? min;

  int? max;

  @override
  List<Object?> get props => [min, max];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingTypeFromJson(
          json);

  int? max;

  bool? text;

  @override
  List<Object?> get props => [max, text];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesTypeFromJson(
          json);

  int? minValue;

  int? maxValue;

  bool? score;

  @override
  List<Object?> get props => [minValue, maxValue, score];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedTypeFromJson(
          json);

  @JsonKey(unknownEnumValue: CalculatedOutputEnum.artemisUnknown)
  CalculatedOutputEnum? output;

  @JsonKey(name: 'show')
  bool? kw$show;

  String? formula;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesType>?
      values;

  @override
  List<Object?> get props => [output, kw$show, formula, values];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateTypeFromJson(
          json);

  bool? outdated;

  bool? interval;

  @override
  List<Object?> get props => [outdated, interval];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactTypeFromJson(
          json);

  bool? firstname;

  bool? lastname;

  bool? email;

  bool? phone;

  bool? description;

  bool? address;

  bool? birthday;

  bool? gender;

  bool? civility;

  bool? profession;

  bool? academicLevel;

  bool? language;

  @override
  List<Object?> get props => [
        firstname,
        lastname,
        email,
        phone,
        description,
        address,
        birthday,
        gender,
        civility,
        profession,
        academicLevel,
        language
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberTypeFromJson(
          json);

  int? minValue;

  int? maxValue;

  bool? interval;

  @override
  List<Object?> get props => [minValue, maxValue, interval];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsTypeFromJson(
          json);

  String? name;

  String? type;

  @override
  List<Object?> get props => [name, type];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiTypeFromJson(
          json);

  int? link;

  @JsonKey(unknownEnumValue: ApiMethods.artemisUnknown)
  ApiMethods? method;

  String? auth;

  String? secret;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsType>?
      params;

  @override
  List<Object?> get props => [link, method, auth, secret, params];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixTypeFromJson(
          json);

  String? lines;

  String? columns;

  @override
  List<Object?> get props => [lines, columns];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleTypeFromJson(
          json);

  String? leftLabel;

  String? rightLabel;

  @override
  List<Object?> get props => [leftLabel, rightLabel];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoTypeFromJson(
          json);

  late String item;

  bool? enable;

  @override
  List<Object?> get props => [item, enable];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepTypeFromJson(
          json);

  late String id;

  @override
  List<Object?> get props => [id];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoTypeFromJson(
          json);

  late String id;

  int? order;

  String? title;

  late List<
          WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoType>
      choices;

  bool? mandatory;

  @JsonKey(unknownEnumValue: QuestionTypeEnum.artemisUnknown)
  QuestionTypeEnum? type;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepType?
      challengeStep;

  int? points;

  bool? score;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [
        id,
        order,
        title,
        choices,
        mandatory,
        type,
        challengeStep,
        points,
        score,
        createdAt,
        updatedAt
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesTypeFromJson(
          json);

  double? maxResponses;

  bool? personalised;

  bool? unique;

  bool? random;

  bool? leaderboard;

  bool? api;

  bool? image;

  bool? interaction;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType?
      suggestions;

  @override
  List<Object?> get props => [
        maxResponses,
        personalised,
        unique,
        random,
        leaderboard,
        api,
        image,
        interaction,
        suggestions
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyTypeFromJson(
          json);

  int? levels;

  @override
  List<Object?> get props => [levels];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreTypeFromJson(
          json);

  int? min;

  @override
  List<Object?> get props => [min];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadTypeFromJson(
          json);

  String? url;

  String? image;

  @override
  List<Object?> get props => [url, image];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentTypeFromJson(
          json);

  int? rank;

  @override
  List<Object?> get props => [rank];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemTypeFromJson(
          json);

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType?
      verification;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType?
      verified;

  @override
  List<Object?> get props => [verification, verified];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationTypeFromJson(
          json);

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType?
      number;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType?
      email;

  @override
  List<Object?> get props => [number, email];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoTypeFromJson(
          json);

  int? minSeconds;

  @override
  List<Object?> get props => [minSeconds];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeFromJson(
          json);

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size48;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size96;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size144;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size240;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size480;

  @override
  List<Object?> get props => [size48, size96, size144, size240, size480];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesTypeFromJson(
          json);

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType?
      svg;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType?
      png;

  @override
  List<Object?> get props => [svg, png];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesTypeFromJson(
          json);

  @JsonKey(unknownEnumValue: SocialImageStyleEnum.artemisUnknown)
  late SocialImageStyleEnum style;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType>?
      images;

  @override
  List<Object?> get props => [style, images];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? fontIcon;

  late DateTime createdAt;

  late DateTime updatedAt;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType>?
      images;

  @override
  List<Object?> get props =>
      [id, name, code, fontIcon, createdAt, updatedAt, images];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaTypeFromJson(
          json);

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType?
      socialMedia;

  @JsonKey(unknownEnumValue: SocialActionEnum.artemisUnknown)
  SocialActionEnum? action;

  @JsonKey(unknownEnumValue: SocialContentTypeEnum.artemisUnknown)
  SocialContentTypeEnum? socialContent;

  String? url;

  @override
  List<Object?> get props => [socialMedia, action, socialContent, url];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadTypeFromJson(
          json);

  String? playstore;

  String? appstore;

  String? appgallery;

  @override
  List<Object?> get props => [playstore, appstore, appgallery];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionTypeFromJson(
          json);

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxType?
      textBox;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingType?
      rating;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType?
      calculated;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateType?
      date;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactType?
      contact;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberType?
      number;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType?
      api;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixType?
      matrix;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleType?
      toggle;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType?
      choices;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyType?
      smiley;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreType?
      score;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadType?
      lead;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType?
      verification;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoType?
      video;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType?
      socialMedia;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadType?
      appDownload;

  @override
  List<Object?> get props => [
        textBox,
        rating,
        calculated,
        date,
        contact,
        number,
        api,
        matrix,
        toggle,
        choices,
        smiley,
        score,
        lead,
        verification,
        video,
        socialMedia,
        appDownload
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionTypeFromJson(
          json);

  late String id;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType?
      activityType;

  bool? required;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType?
      definition;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props =>
      [id, activityType, required, definition, createdAt, updatedAt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldTypeFromJson(
          json);

  @JsonKey(unknownEnumValue: AudienceCriteriaFieldEnum.artemisUnknown)
  AudienceCriteriaFieldEnum? value;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType?
      action;

  @override
  List<Object?> get props => [value, action];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathTypeFromJson(
          json);

  late double lat;

  late double lng;

  late double order;

  @override
  List<Object?> get props => [lat, lng, order];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneTypeFromJson(
          json);

  double? radius;

  @JsonKey(unknownEnumValue: ZoneTypesEnum.artemisUnknown)
  ZoneTypesEnum? type;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathType>?
      paths;

  @override
  List<Object?> get props => [radius, type, paths];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateTypeFromJson(
          json);

  late String id;

  String? adminName;

  @JsonKey(unknownEnumValue: StateCapitalEnum.artemisUnknown)
  StateCapitalEnum? capital;

  double? population;

  String? ascii;

  double? lat;

  double? lng;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType?
      country;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        adminName,
        capital,
        population,
        ascii,
        lat,
        lng,
        country,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType?
      flagSquare;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType?
      flagWide;

  @override
  List<Object?> get props =>
      [id, name, code, iconFlag, createdAt, updatedAt, flagSquare, flagWide];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksTypeFromJson(
          json);

  late String discount;

  String? description;

  @override
  List<Object?> get props => [discount, description];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalTypeFromJson(
          json);

  int? min;

  int? max;

  @override
  List<Object?> get props => [min, max];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationTypeFromJson(
          json);

  late String id;

  late int rank;

  String? color;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureType?
      picture;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksType?
      perks;

  late int lossAmount;

  int? nextLevelMax;

  late int inactivityCycle;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalType?
      levelInterval;

  String? reputationLevel;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [
        id,
        rank,
        color,
        picture,
        perks,
        lossAmount,
        nextLevelMax,
        inactivityCycle,
        levelInterval,
        reputationLevel,
        createdAt,
        updatedAt
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesTypeFromJson(
          json);

  DateTime? startDate;

  DateTime? endDate;

  String? minValue;

  String? maxValue;

  String? value;

  List<String>? values;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType?
      zone;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType>?
      countries;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType>?
      states;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType>?
      languages;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType>?
      reputations;

  @override
  List<Object?> get props => [
        startDate,
        endDate,
        minValue,
        maxValue,
        value,
        values,
        zone,
        countries,
        states,
        languages,
        reputations
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterTypeFromJson(
          json);

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType?
      field;

  @JsonKey(name: 'operator', unknownEnumValue: OperatorEnum.artemisUnknown)
  OperatorEnum? kw$operator;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType>?
      values;

  @override
  List<Object?> get props => [field, kw$operator, values];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentTypeFromJson(
          json);

  int? rank;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType?
      criteria;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType>?
      filters;

  @override
  List<Object?> get props => [rank, criteria, filters];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceTypeFromJson(
          json);

  late String id;

  String? icon;

  String? title;

  late DateTime createdAt;

  late DateTime updatedAt;

  String? description;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$MediaType?
      media;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType>?
      segments;

  @override
  List<Object?> get props =>
      [id, icon, title, createdAt, updatedAt, description, media, segments];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType
    extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType();

  factory WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeTypeFromJson(
          json);

  late String id;

  String? title;

  String? description;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$MediaType? media;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeType?
      challengeType;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$UserType? creator;

  DateTime? startDate;

  DateTime? endDate;

  @JsonKey(unknownEnumValue: ChallengeStatusEnum.artemisUnknown)
  ChallengeStatusEnum? status;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeWinner>?
      winners;

  List<WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$ChallengeTypeCheckpoint>?
      checkpoints;

  int? maxAnswers;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType$AudienceType?
      audience;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [
        id,
        title,
        description,
        media,
        challengeType,
        creator,
        startDate,
        endDate,
        status,
        winners,
        checkpoints,
        maxAnswers,
        audience,
        createdAt,
        updatedAt
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketType$ChallengeTypeToJson(this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType$PocketType extends JsonSerializable
    with EquatableMixin {
  WalletByOwner$Query$WalletDtoType$PocketType();

  factory WalletByOwner$Query$WalletDtoType$PocketType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoType$PocketTypeFromJson(json);

  String? amount;

  @JsonKey(unknownEnumValue: PocketUsageType.artemisUnknown)
  late PocketUsageType usage;

  @JsonKey(unknownEnumValue: PocketTypeEnum.artemisUnknown)
  late PocketTypeEnum pocketType;

  WalletByOwner$Query$WalletDtoType$PocketType$ChallengeType? challenge;

  @override
  List<Object?> get props => [amount, usage, pocketType, challenge];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoType$PocketTypeToJson(this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query$WalletDtoType extends JsonSerializable
    with EquatableMixin {
  WalletByOwner$Query$WalletDtoType();

  factory WalletByOwner$Query$WalletDtoType.fromJson(
          Map<String, dynamic> json) =>
      _$WalletByOwner$Query$WalletDtoTypeFromJson(json);

  late String id;

  WalletByOwner$Query$WalletDtoType$OwnerDtoType? owner;

  late DateTime createdAt;

  late DateTime updatedAt;

  List<WalletByOwner$Query$WalletDtoType$PocketType>? pockets;

  @override
  List<Object?> get props => [id, owner, createdAt, updatedAt, pockets];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletByOwner$Query$WalletDtoTypeToJson(this);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwner$Query extends JsonSerializable with EquatableMixin {
  WalletByOwner$Query();

  factory WalletByOwner$Query.fromJson(Map<String, dynamic> json) =>
      _$WalletByOwner$QueryFromJson(json);

  late WalletByOwner$Query$WalletDtoType walletByOwner;

  @override
  List<Object?> get props => [walletByOwner];

  @override
  Map<String, dynamic> toJson() => _$WalletByOwner$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? symbol;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyType$PictureType?
      flagSquare;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        symbol,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyTypeFromJson(
          json);

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType$CurrencyType?
      currency;

  @JsonKey(name: 'default')
  bool? kw$default;

  @override
  List<Object?> get props => [currency, kw$default];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageType$PictureType?
      flagSquare;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageType$PictureType?
      flagWide;

  @override
  List<Object?> get props =>
      [id, name, code, iconFlag, createdAt, updatedAt, flagSquare, flagWide];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OpeningHoursType$OpeningHoursDayType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OpeningHoursType$OpeningHoursDayType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OpeningHoursType$OpeningHoursDayType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OpeningHoursType$OpeningHoursDayTypeFromJson(
          json);

  @JsonKey(unknownEnumValue: Days.artemisUnknown)
  Days? day;

  String? from;

  String? to;

  @override
  List<Object?> get props => [day, from, to];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OpeningHoursType$OpeningHoursDayTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OpeningHoursType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OpeningHoursType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OpeningHoursType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OpeningHoursTypeFromJson(
          json);

  @JsonKey(unknownEnumValue: OpeningStatus.artemisUnknown)
  OpeningStatus? status;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OpeningHoursType$OpeningHoursDayType>?
      hours;

  @override
  List<Object?> get props => [status, hours];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OpeningHoursTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SpecialOfferType$OpeningHoursDayType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SpecialOfferType$OpeningHoursDayType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SpecialOfferType$OpeningHoursDayType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SpecialOfferType$OpeningHoursDayTypeFromJson(
          json);

  @JsonKey(unknownEnumValue: Days.artemisUnknown)
  Days? day;

  String? from;

  String? to;

  @override
  List<Object?> get props => [day, from, to];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SpecialOfferType$OpeningHoursDayTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SpecialOfferType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SpecialOfferType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SpecialOfferType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SpecialOfferTypeFromJson(
          json);

  @JsonKey(unknownEnumValue: SpecialOffersType.artemisUnknown)
  SpecialOffersType? offerType;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SpecialOfferType$OpeningHoursDayType>?
      hours;

  @override
  List<Object?> get props => [offerType, hours];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SpecialOfferTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$LonLatType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$LonLatType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$LonLatType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$LonLatTypeFromJson(
          json);

  String? type;

  List<double>? coordinates;

  @override
  List<Object?> get props => [type, coordinates];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$LonLatTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryType$PictureType?
      flagSquare;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryType$PictureType?
      flagSquare;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateTypeFromJson(
          json);

  late String id;

  late String name;

  String? adminName;

  @JsonKey(unknownEnumValue: StateCapitalEnum.artemisUnknown)
  StateCapitalEnum? capital;

  double? population;

  String? ascii;

  double? lat;

  double? lng;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$CountryType?
      country;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$PictureType?
      flagSquare;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        adminName,
        capital,
        population,
        ascii,
        lat,
        lng,
        country,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
          json);

  String? number;

  String? countryCode;

  @override
  List<Object?> get props => [number, countryCode];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$FullAddressOwnerType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$FullAddressOwnerType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$FullAddressOwnerType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$FullAddressOwnerTypeFromJson(
          json);

  String? name;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType?
      phone;

  @override
  List<Object?> get props => [name, phone];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$FullAddressOwnerTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressTypeFromJson(
          json);

  String? city;

  String? address;

  String? postCode;

  String? addressLine;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$LonLatType?
      location;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$CountryType?
      country;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$StateType?
      state;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType$FullAddressOwnerType?
      owner;

  @override
  List<Object?> get props =>
      [city, address, postCode, addressLine, location, country, state, owner];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeFromJson(
          json);

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size48;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size96;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size144;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size240;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size480;

  @override
  List<Object?> get props => [size48, size96, size144, size240, size480];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesTypeFromJson(
          json);

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType?
      svg;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType?
      png;

  @override
  List<Object?> get props => [svg, png];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesTypeFromJson(
          json);

  @JsonKey(unknownEnumValue: SocialImageStyleEnum.artemisUnknown)
  late SocialImageStyleEnum style;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType>?
      images;

  @override
  List<Object?> get props => [style, images];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? fontIcon;

  late DateTime createdAt;

  late DateTime updatedAt;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType$SocialImagesType>?
      images;

  @override
  List<Object?> get props =>
      [id, name, code, fontIcon, createdAt, updatedAt, images];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueTypeFromJson(
          json);

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType$SocialType?
      name;

  String? value;

  @override
  List<Object?> get props => [name, value];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaType$PictureType>?
      deg360;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$LonLatType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$LonLatType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$LonLatType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$LonLatTypeFromJson(
          json);

  String? type;

  List<double>? coordinates;

  @override
  List<Object?> get props => [type, coordinates];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$LonLatTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryType$PictureType?
      flagSquare;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryType$PictureType?
      flagSquare;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateTypeFromJson(
          json);

  late String id;

  late String name;

  String? adminName;

  @JsonKey(unknownEnumValue: StateCapitalEnum.artemisUnknown)
  StateCapitalEnum? capital;

  double? population;

  String? ascii;

  double? lat;

  double? lng;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$CountryType?
      country;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$PictureType?
      flagSquare;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        adminName,
        capital,
        population,
        ascii,
        lat,
        lng,
        country,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
          json);

  String? number;

  String? countryCode;

  @override
  List<Object?> get props => [number, countryCode];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$FullAddressOwnerType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$FullAddressOwnerType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$FullAddressOwnerType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
          json);

  String? name;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType?
      phone;

  @override
  List<Object?> get props => [name, phone];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressTypeFromJson(
          json);

  String? city;

  String? address;

  String? postCode;

  String? addressLine;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$LonLatType?
      location;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$CountryType?
      country;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$StateType?
      state;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType$FullAddressOwnerType?
      owner;

  @override
  List<Object?> get props =>
      [city, address, postCode, addressLine, location, country, state, owner];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyLegalType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyLegalType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyLegalType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyLegalTypeFromJson(
          json);

  String? vat;

  String? register;

  String? licence;

  @override
  List<Object?> get props => [vat, register, licence];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyLegalTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
          json);

  String? type;

  List<double>? coordinates;

  @override
  List<Object?> get props => [type, coordinates];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType?
      flagSquare;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType?
      flagSquare;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
          json);

  late String id;

  late String name;

  String? adminName;

  @JsonKey(unknownEnumValue: StateCapitalEnum.artemisUnknown)
  StateCapitalEnum? capital;

  double? population;

  String? ascii;

  double? lat;

  double? lng;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType?
      country;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType?
      flagSquare;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        adminName,
        capital,
        population,
        ascii,
        lat,
        lng,
        country,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
          json);

  String? number;

  String? countryCode;

  @override
  List<Object?> get props => [number, countryCode];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
          json);

  String? name;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType?
      phone;

  @override
  List<Object?> get props => [name, phone];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
          json);

  String? city;

  String? address;

  String? postCode;

  String? addressLine;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType?
      location;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType?
      country;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType?
      state;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType?
      owner;

  @override
  List<Object?> get props =>
      [city, address, postCode, addressLine, location, country, state, owner];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
          json);

  late String name;

  @JsonKey(unknownEnumValue: BankDetailsHolderTypeEnum.artemisUnknown)
  BankDetailsHolderTypeEnum? type;

  late GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
      address;

  @override
  List<Object?> get props => [name, type, address];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
          json);

  @JsonKey(name: 'default')
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      kw$default;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size16;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size24;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size32;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size48;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size64;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size128;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size256;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size512;

  @override
  List<Object?> get props => [
        kw$default,
        size16,
        size24,
        size32,
        size48,
        size64,
        size128,
        size256,
        size512
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
          json);

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType?
      svg;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType?
      png;

  String? icon;

  @override
  List<Object?> get props => [svg, png, icon];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? bic;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType$BrowserLogoType?
      logo;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [id, name, code, bic, logo, createdAt, updatedAt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsTypeFromJson(
          json);

  late String id;

  late GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankDetailsHolderType
      holder;

  late String account;

  String? iban;

  late GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType$BankType
      bank;

  String? externalId;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props =>
      [id, holder, account, iban, bank, externalId, createdAt, updatedAt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyContactDetailsType$PhoneType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyContactDetailsType$PhoneType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyContactDetailsType$PhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
          json);

  String? number;

  bool? isValid;

  String? countryCode;

  int? validationNumber;

  @override
  List<Object?> get props => [number, isValid, countryCode, validationNumber];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyContactDetailsType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyContactDetailsType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyContactDetailsType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyContactDetailsTypeFromJson(
          json);

  String? website;

  String? email;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyContactDetailsType$PhoneType?
      phone;

  @override
  List<Object?> get props => [website, email, phone];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyContactDetailsTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyTypeFromJson(
          json);

  late String id;

  String? name;

  String? description;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$MediaType?
      media;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$FullAddressType?
      address;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyLegalType?
      legal;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$BankDetailsType>?
      banks;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType$CompanyContactDetailsType?
      contact;

  bool? logistic;

  List<String>? tags;

  String? externalId;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [
        id,
        name,
        description,
        media,
        address,
        legal,
        banks,
        contact,
        logistic,
        tags,
        externalId,
        createdAt,
        updatedAt
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSCategoryType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSCategoryType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSCategoryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSCategoryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSCategoryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSCategoryType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSCategoryType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSCategoryType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSCategoryTypeFromJson(
          json);

  late String id;

  String? name;

  String? mapPicture;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSCategoryType$PictureType?
      picture;

  @override
  List<Object?> get props =>
      [id, name, mapPicture, createdAt, updatedAt, picture];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSCategoryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSServicesType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSServicesType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSServicesType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSServicesTypeFromJson(
          json);

  String? id;

  int? index;

  String? name;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [id, index, name, createdAt, updatedAt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSServicesTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngTypeFromJson(
          json);

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      alt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      alt2x;

  @JsonKey(name: 'alt_128')
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      alt128;

  @JsonKey(name: 'alt_256')
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      alt256;

  @JsonKey(name: 'alt_512')
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      alt512;

  @JsonKey(name: 'card_flat')
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      cardFlat;

  @JsonKey(name: 'card_flat2x')
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      cardFlat2x;

  @JsonKey(name: 'card_flat_128')
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      cardFlat128;

  @JsonKey(name: 'card_flat_256')
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      cardFlat256;

  @JsonKey(name: 'card_flat_512')
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      cardFlat512;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      dark;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      dark2x;

  @JsonKey(name: 'dark_128')
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      dark128;

  @JsonKey(name: 'dark_256')
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      dark256;

  @JsonKey(name: 'dark_512')
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      dark512;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      flat;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      flat2x;

  @JsonKey(name: 'flat_128')
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      flat128;

  @JsonKey(name: 'flat_256')
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      flat256;

  @JsonKey(name: 'flat_512')
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      flat512;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      light;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      light2x;

  @JsonKey(name: 'light_128')
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      light128;

  @JsonKey(name: 'light_256')
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      light256;

  @JsonKey(name: 'light_512')
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      light512;

  @JsonKey(name: 'default')
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      kw$default;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      default2x;

  @JsonKey(name: 'default_128')
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      default128;

  @JsonKey(name: 'default_256')
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      default256;

  @JsonKey(name: 'default_512')
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType?
      default512;

  @override
  List<Object?> get props => [
        alt,
        alt2x,
        alt128,
        alt256,
        alt512,
        cardFlat,
        cardFlat2x,
        cardFlat128,
        cardFlat256,
        cardFlat512,
        dark,
        dark2x,
        dark128,
        dark256,
        dark512,
        flat,
        flat2x,
        flat128,
        flat256,
        flat512,
        light,
        light2x,
        light128,
        light256,
        light512,
        kw$default,
        default2x,
        default128,
        default256,
        default512
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgTypeFromJson(
          json);

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType?
      alt;

  @JsonKey(name: 'card_flat')
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType?
      cardFlat;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType?
      dark;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType?
      flat;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType?
      light;

  @JsonKey(name: 'default')
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType?
      kw$default;

  @override
  List<Object?> get props => [alt, cardFlat, dark, flat, light, kw$default];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesTypeFromJson(
          json);

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesPngType?
      png;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType$PaymentImagesSvgType?
      svg;

  @override
  List<Object?> get props => [png, svg];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  @JsonKey(unknownEnumValue: PaymentTypeEnum.artemisUnknown)
  PaymentTypeEnum? paymentType;

  String? materialIcon;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType$PaymentImagesType?
      images;

  @override
  List<Object?> get props =>
      [id, name, code, paymentType, materialIcon, createdAt, updatedAt, images];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType>?
      deg360;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatTypeFromJson(
          json);

  String? type;

  List<double>? coordinates;

  @override
  List<Object?> get props => [type, coordinates];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType?
      flagSquare;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType?
      flagSquare;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateTypeFromJson(
          json);

  late String id;

  late String name;

  String? adminName;

  @JsonKey(unknownEnumValue: StateCapitalEnum.artemisUnknown)
  StateCapitalEnum? capital;

  double? population;

  String? ascii;

  double? lat;

  double? lng;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType?
      country;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType?
      flagSquare;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        adminName,
        capital,
        population,
        ascii,
        lat,
        lng,
        country,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
          json);

  String? number;

  String? countryCode;

  @override
  List<Object?> get props => [number, countryCode];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
          json);

  String? name;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType?
      phone;

  @override
  List<Object?> get props => [name, phone];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressTypeFromJson(
          json);

  String? city;

  String? address;

  String? postCode;

  String? addressLine;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType?
      location;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType?
      country;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType?
      state;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType?
      owner;

  @override
  List<Object?> get props =>
      [city, address, postCode, addressLine, location, country, state, owner];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalTypeFromJson(
          json);

  String? vat;

  String? register;

  String? licence;

  @override
  List<Object?> get props => [vat, register, licence];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
          json);

  String? type;

  List<double>? coordinates;

  @override
  List<Object?> get props => [type, coordinates];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType?
      flagSquare;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType?
      flagSquare;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
          json);

  late String id;

  late String name;

  String? adminName;

  @JsonKey(unknownEnumValue: StateCapitalEnum.artemisUnknown)
  StateCapitalEnum? capital;

  double? population;

  String? ascii;

  double? lat;

  double? lng;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType?
      country;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType?
      flagSquare;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        adminName,
        capital,
        population,
        ascii,
        lat,
        lng,
        country,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
          json);

  String? number;

  String? countryCode;

  @override
  List<Object?> get props => [number, countryCode];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
          json);

  String? name;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType?
      phone;

  @override
  List<Object?> get props => [name, phone];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
          json);

  String? city;

  String? address;

  String? postCode;

  String? addressLine;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType?
      location;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType?
      country;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType?
      state;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType?
      owner;

  @override
  List<Object?> get props =>
      [city, address, postCode, addressLine, location, country, state, owner];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
          json);

  late String name;

  @JsonKey(unknownEnumValue: BankDetailsHolderTypeEnum.artemisUnknown)
  BankDetailsHolderTypeEnum? type;

  late GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
      address;

  @override
  List<Object?> get props => [name, type, address];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
          json);

  @JsonKey(name: 'default')
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      kw$default;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size16;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size24;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size32;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size48;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size64;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size128;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size256;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType?
      size512;

  @override
  List<Object?> get props => [
        kw$default,
        size16,
        size24,
        size32,
        size48,
        size64,
        size128,
        size256,
        size512
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
          json);

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType?
      svg;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType?
      png;

  String? icon;

  @override
  List<Object?> get props => [svg, png, icon];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? bic;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType?
      logo;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [id, name, code, bic, logo, createdAt, updatedAt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsTypeFromJson(
          json);

  late String id;

  late GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
      holder;

  late String account;

  String? iban;

  late GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
      bank;

  String? externalId;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props =>
      [id, holder, account, iban, bank, externalId, createdAt, updatedAt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
          json);

  String? number;

  bool? isValid;

  String? countryCode;

  int? validationNumber;

  @override
  List<Object?> get props => [number, isValid, countryCode, validationNumber];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsTypeFromJson(
          json);

  String? website;

  String? email;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType?
      phone;

  @override
  List<Object?> get props => [website, email, phone];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyTypeFromJson(
          json);

  late String id;

  String? name;

  String? description;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType?
      media;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType?
      address;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType?
      legal;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType>?
      banks;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType?
      contact;

  bool? logistic;

  List<String>? tags;

  String? externalId;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [
        id,
        name,
        description,
        media,
        address,
        legal,
        banks,
        contact,
        logistic,
        tags,
        externalId,
        createdAt,
        updatedAt
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramTypeFromJson(
          json);

  late String id;

  late DateTime createdAt;

  late DateTime updatedAt;

  String? programName;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$PictureType?
      picture;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType$CompanyType?
      company;

  @override
  List<Object?> get props =>
      [id, createdAt, updatedAt, programName, picture, company];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyTypeFromJson(
          json);

  late DateTime to;

  late DateTime from;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType$LoyaltyProgramType?
      loyaltyProgram;

  @override
  List<Object?> get props => [to, from, loyaltyProgram];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureType>?
      deg360;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType>?
      deg360;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType>?
      deg360;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionTypeFromJson(
          json);

  bool? enable;

  @JsonKey(unknownEnumValue: PredefinedActionsEnum.artemisUnknown)
  PredefinedActionsEnum? action;

  @override
  List<Object?> get props => [enable, action];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeTypeFromJson(
          json);

  late String id;

  String? title;

  String? description;

  String? icon;

  String? theme;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$MediaType?
      media;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType$PredefinedActionType?
      predefined;

  @override
  List<Object?> get props => [
        id,
        title,
        description,
        icon,
        theme,
        media,
        createdAt,
        updatedAt,
        predefined
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType>?
      deg360;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerTypeFromJson(
          json);

  late String id;

  String? title;

  String? description;

  String? icon;

  int? cost;

  @JsonKey(unknownEnumValue: JockerKindEnum.artemisUnknown)
  JockerKindEnum? kind;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType$MediaType?
      media;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props =>
      [id, title, description, icon, cost, kind, media, createdAt, updatedAt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJockerFromJson(
          json);

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker$JockerType?
      jocker;

  String? cost;

  @override
  List<Object?> get props => [jocker, cost];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJockerToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeTypeFromJson(
          json);

  late String id;

  String? title;

  String? description;

  String? rules;

  String? icon;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$MediaType?
      media;

  int? minStep;

  int? minCheckPoints;

  String? minGiftValue;

  int? claimReward;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ActivityTypeType>?
      activityTypes;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType$ChallengeTypeTypeJocker>?
      jockers;

  String? fees;

  bool? enable;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [
        id,
        title,
        description,
        rules,
        icon,
        media,
        minStep,
        minCheckPoints,
        minGiftValue,
        claimReward,
        activityTypes,
        jockers,
        fees,
        enable,
        createdAt,
        updatedAt
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType$PhoneType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType$PhoneType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType$PhoneType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType$PhoneTypeFromJson(
          json);

  String? number;

  bool? isValid;

  String? countryCode;

  int? validationNumber;

  @override
  List<Object?> get props => [number, isValid, countryCode, validationNumber];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType$PhoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserTypeFromJson(
          json);

  late String id;

  String? email;

  @JsonKey(unknownEnumValue: Gender.artemisUnknown)
  Gender? gender;

  String? lastName;

  String? username;

  String? firstName;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType$PhoneType?
      phone;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType$PictureType?
      picture;

  @override
  List<Object?> get props =>
      [id, email, gender, lastName, username, firstName, phone, picture];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeWinner
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeWinner();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeWinner.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeWinnerFromJson(
          json);

  late int rank;

  double? reward;

  @override
  List<Object?> get props => [rank, reward];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeWinnerToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeCheckpoint
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeCheckpoint();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeCheckpoint.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeCheckpointFromJson(
          json);

  int? checkpoint;

  double? amount;

  @override
  List<Object?> get props => [checkpoint, amount];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeCheckpointToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType>?
      deg360;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType>?
      deg360;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldTypeFromJson(
          json);

  @JsonKey(unknownEnumValue: AudienceCriteriaFieldEnum.artemisUnknown)
  AudienceCriteriaFieldEnum? field;

  @JsonKey(unknownEnumValue: OperatorEnum.artemisUnknown)
  List<OperatorEnum>? operators;

  @override
  List<Object?> get props => [field, operators];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaTypeFromJson(
          json);

  late String id;

  String? icon;

  String? title;

  String? style;

  bool? enable;

  String? description;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$MediaType?
      media;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType$AudienceCriteriaFieldType>?
      fields;

  @override
  List<Object?> get props => [
        id,
        icon,
        title,
        style,
        enable,
        description,
        createdAt,
        updatedAt,
        media,
        fields
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaTypeFromJson(
          json);

  List<String>? videos;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType>?
      deg360;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType$PictureType>?
      pictures;

  @override
  List<Object?> get props => [videos, deg360, pictures];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionTypeFromJson(
          json);

  bool? enable;

  @JsonKey(unknownEnumValue: PredefinedActionsEnum.artemisUnknown)
  PredefinedActionsEnum? action;

  @override
  List<Object?> get props => [enable, action];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeTypeFromJson(
          json);

  late String id;

  String? title;

  String? description;

  String? icon;

  String? theme;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$MediaType?
      media;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType$PredefinedActionType?
      predefined;

  @override
  List<Object?> get props => [
        id,
        title,
        description,
        icon,
        theme,
        media,
        createdAt,
        updatedAt,
        predefined
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxTypeFromJson(
          json);

  int? min;

  int? max;

  @override
  List<Object?> get props => [min, max];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingTypeFromJson(
          json);

  int? max;

  bool? text;

  @override
  List<Object?> get props => [max, text];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesTypeFromJson(
          json);

  int? minValue;

  int? maxValue;

  bool? score;

  @override
  List<Object?> get props => [minValue, maxValue, score];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedTypeFromJson(
          json);

  @JsonKey(unknownEnumValue: CalculatedOutputEnum.artemisUnknown)
  CalculatedOutputEnum? output;

  @JsonKey(name: 'show')
  bool? kw$show;

  String? formula;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType$QuestActionDefinitionDefinitionCalculatedValuesType>?
      values;

  @override
  List<Object?> get props => [output, kw$show, formula, values];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateTypeFromJson(
          json);

  bool? outdated;

  bool? interval;

  @override
  List<Object?> get props => [outdated, interval];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactTypeFromJson(
          json);

  bool? firstname;

  bool? lastname;

  bool? email;

  bool? phone;

  bool? description;

  bool? address;

  bool? birthday;

  bool? gender;

  bool? civility;

  bool? profession;

  bool? academicLevel;

  bool? language;

  @override
  List<Object?> get props => [
        firstname,
        lastname,
        email,
        phone,
        description,
        address,
        birthday,
        gender,
        civility,
        profession,
        academicLevel,
        language
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberTypeFromJson(
          json);

  int? minValue;

  int? maxValue;

  bool? interval;

  @override
  List<Object?> get props => [minValue, maxValue, interval];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsTypeFromJson(
          json);

  String? name;

  String? type;

  @override
  List<Object?> get props => [name, type];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiTypeFromJson(
          json);

  int? link;

  @JsonKey(unknownEnumValue: ApiMethods.artemisUnknown)
  ApiMethods? method;

  String? auth;

  String? secret;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType$QuestActionDefinitionDefinitionApiParamsType>?
      params;

  @override
  List<Object?> get props => [link, method, auth, secret, params];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixTypeFromJson(
          json);

  String? lines;

  String? columns;

  @override
  List<Object?> get props => [lines, columns];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleTypeFromJson(
          json);

  String? leftLabel;

  String? rightLabel;

  @override
  List<Object?> get props => [leftLabel, rightLabel];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoTypeFromJson(
          json);

  late String item;

  bool? enable;

  @override
  List<Object?> get props => [item, enable];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepTypeFromJson(
          json);

  late String id;

  @override
  List<Object?> get props => [id];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoTypeFromJson(
          json);

  late String id;

  int? order;

  String? title;

  late List<
          GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$QuestionChoiceDtoType>
      choices;

  bool? mandatory;

  @JsonKey(unknownEnumValue: QuestionTypeEnum.artemisUnknown)
  QuestionTypeEnum? type;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType$ChallengeStepType?
      challengeStep;

  int? points;

  bool? score;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [
        id,
        order,
        title,
        choices,
        mandatory,
        type,
        challengeStep,
        points,
        score,
        createdAt,
        updatedAt
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesTypeFromJson(
          json);

  double? maxResponses;

  bool? personalised;

  bool? unique;

  bool? random;

  bool? leaderboard;

  bool? api;

  bool? image;

  bool? interaction;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType$QuestionDtoType?
      suggestions;

  @override
  List<Object?> get props => [
        maxResponses,
        personalised,
        unique,
        random,
        leaderboard,
        api,
        image,
        interaction,
        suggestions
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyTypeFromJson(
          json);

  int? levels;

  @override
  List<Object?> get props => [levels];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreTypeFromJson(
          json);

  int? min;

  @override
  List<Object?> get props => [min];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadTypeFromJson(
          json);

  String? url;

  String? image;

  @override
  List<Object?> get props => [url, image];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentTypeFromJson(
          json);

  int? rank;

  @override
  List<Object?> get props => [rank];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemTypeFromJson(
          json);

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType?
      verification;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType$QuestActionDefinitionDefinitionVerificationItemContentType?
      verified;

  @override
  List<Object?> get props => [verification, verified];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationTypeFromJson(
          json);

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType?
      number;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType$QuestActionDefinitionDefinitionVerificationItemType?
      email;

  @override
  List<Object?> get props => [number, email];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoTypeFromJson(
          json);

  int? minSeconds;

  @override
  List<Object?> get props => [minSeconds];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeFromJson(
          json);

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size48;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size96;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size144;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size240;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType?
      size480;

  @override
  List<Object?> get props => [size48, size96, size144, size240, size480];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesTypeFromJson(
          json);

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType?
      svg;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType?
      png;

  @override
  List<Object?> get props => [svg, png];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesTypeFromJson(
          json);

  @JsonKey(unknownEnumValue: SocialImageStyleEnum.artemisUnknown)
  late SocialImageStyleEnum style;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType$SocialImagesImagesType>?
      images;

  @override
  List<Object?> get props => [style, images];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? fontIcon;

  late DateTime createdAt;

  late DateTime updatedAt;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType$SocialImagesType>?
      images;

  @override
  List<Object?> get props =>
      [id, name, code, fontIcon, createdAt, updatedAt, images];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaTypeFromJson(
          json);

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType$SocialType?
      socialMedia;

  @JsonKey(unknownEnumValue: SocialActionEnum.artemisUnknown)
  SocialActionEnum? action;

  @JsonKey(unknownEnumValue: SocialContentTypeEnum.artemisUnknown)
  SocialContentTypeEnum? socialContent;

  String? url;

  @override
  List<Object?> get props => [socialMedia, action, socialContent, url];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadTypeFromJson(
          json);

  String? playstore;

  String? appstore;

  String? appgallery;

  @override
  List<Object?> get props => [playstore, appstore, appgallery];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionTypeFromJson(
          json);

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionTextBoxType?
      textBox;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionRatingType?
      rating;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionCalculatedType?
      calculated;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionDateType?
      date;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionContactType?
      contact;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionNumberType?
      number;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionApiType?
      api;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionMatrixType?
      matrix;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionToggleType?
      toggle;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionChoicesType?
      choices;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSmileyType?
      smiley;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionScoreType?
      score;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionLeadType?
      lead;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVerificationType?
      verification;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionVideoType?
      video;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionSocialMediaType?
      socialMedia;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType$QuestActionDefinitionDefinitionAppDownloadType?
      appDownload;

  @override
  List<Object?> get props => [
        textBox,
        rating,
        calculated,
        date,
        contact,
        number,
        api,
        matrix,
        toggle,
        choices,
        smiley,
        score,
        lead,
        verification,
        video,
        socialMedia,
        appDownload
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionTypeFromJson(
          json);

  late String id;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$ActivityTypeType?
      activityType;

  bool? required;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType$QuestActionDefinitionDefinitionType?
      definition;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props =>
      [id, activityType, required, definition, createdAt, updatedAt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldTypeFromJson(
          json);

  @JsonKey(unknownEnumValue: AudienceCriteriaFieldEnum.artemisUnknown)
  AudienceCriteriaFieldEnum? value;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType$QuestActionDefinitionType?
      action;

  @override
  List<Object?> get props => [value, action];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathTypeFromJson(
          json);

  late double lat;

  late double lng;

  late double order;

  @override
  List<Object?> get props => [lat, lng, order];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneTypeFromJson(
          json);

  double? radius;

  @JsonKey(unknownEnumValue: ZoneTypesEnum.artemisUnknown)
  ZoneTypesEnum? type;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType$DeliveryZonePathType>?
      paths;

  @override
  List<Object?> get props => [radius, type, paths];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType?
      flagSquare;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? dialCode;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType?
      flagSquare;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        code,
        dialCode,
        iconFlag,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateTypeFromJson(
          json);

  late String id;

  late String name;

  String? adminName;

  @JsonKey(unknownEnumValue: StateCapitalEnum.artemisUnknown)
  StateCapitalEnum? capital;

  double? population;

  String? ascii;

  double? lat;

  double? lng;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$CountryType?
      country;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType?
      flagSquare;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType$PictureType?
      flagWide;

  @override
  List<Object?> get props => [
        id,
        name,
        adminName,
        capital,
        population,
        ascii,
        lat,
        lng,
        country,
        createdAt,
        updatedAt,
        flagSquare,
        flagWide
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageTypeFromJson(
          json);

  late String id;

  late String name;

  String? code;

  String? iconFlag;

  late DateTime createdAt;

  late DateTime updatedAt;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType?
      flagSquare;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType$PictureType?
      flagWide;

  @override
  List<Object?> get props =>
      [id, name, code, iconFlag, createdAt, updatedAt, flagSquare, flagWide];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureTypeFromJson(
          json);

  String? baseUrl;

  String? path;

  int? width;

  int? height;

  int? x;

  int? y;

  String? alt;

  @override
  List<Object?> get props => [baseUrl, path, width, height, x, y, alt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksTypeFromJson(
          json);

  late String discount;

  String? description;

  @override
  List<Object?> get props => [discount, description];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalTypeFromJson(
          json);

  int? min;

  int? max;

  @override
  List<Object?> get props => [min, max];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationTypeFromJson(
          json);

  late String id;

  late int rank;

  String? color;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PictureType?
      picture;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$PerksType?
      perks;

  late int lossAmount;

  int? nextLevelMax;

  late int inactivityCycle;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType$LevelIntervalType?
      levelInterval;

  String? reputationLevel;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [
        id,
        rank,
        color,
        picture,
        perks,
        lossAmount,
        nextLevelMax,
        inactivityCycle,
        levelInterval,
        reputationLevel,
        createdAt,
        updatedAt
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesTypeFromJson(
          json);

  DateTime? startDate;

  DateTime? endDate;

  String? minValue;

  String? maxValue;

  String? value;

  List<String>? values;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$AudienceSegmentFilterZoneType?
      zone;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$CountryType>?
      countries;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$StateType>?
      states;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$LanguageType>?
      languages;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType$ReputationType>?
      reputations;

  @override
  List<Object?> get props => [
        startDate,
        endDate,
        minValue,
        maxValue,
        value,
        values,
        zone,
        countries,
        states,
        languages,
        reputations
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterTypeFromJson(
          json);

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterFieldType?
      field;

  @JsonKey(name: 'operator', unknownEnumValue: OperatorEnum.artemisUnknown)
  OperatorEnum? kw$operator;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType$AudienceSegmentFilterValuesType>?
      values;

  @override
  List<Object?> get props => [field, kw$operator, values];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentTypeFromJson(
          json);

  int? rank;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceCriteriaType?
      criteria;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType$AudienceSegmentFilterType>?
      filters;

  @override
  List<Object?> get props => [rank, criteria, filters];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceTypeFromJson(
          json);

  late String id;

  String? icon;

  String? title;

  late DateTime createdAt;

  late DateTime updatedAt;

  String? description;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$MediaType?
      media;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType$AudienceSegmentType>?
      segments;

  @override
  List<Object?> get props =>
      [id, icon, title, createdAt, updatedAt, description, media, segments];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeTypeFromJson(
          json);

  late String id;

  String? title;

  String? description;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$MediaType?
      media;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeType?
      challengeType;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$UserType?
      creator;

  DateTime? startDate;

  DateTime? endDate;

  @JsonKey(unknownEnumValue: ChallengeStatusEnum.artemisUnknown)
  ChallengeStatusEnum? status;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeWinner>?
      winners;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$ChallengeTypeCheckpoint>?
      checkpoints;

  int? maxAnswers;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType$AudienceType?
      audience;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [
        id,
        title,
        description,
        media,
        challengeType,
        creator,
        startDate,
        endDate,
        status,
        winners,
        checkpoints,
        maxAnswers,
        audience,
        createdAt,
        updatedAt
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketTypeFromJson(
          json);

  String? amount;

  @JsonKey(unknownEnumValue: PocketUsageType.artemisUnknown)
  late PocketUsageType usage;

  @JsonKey(unknownEnumValue: PocketTypeEnum.artemisUnknown)
  late PocketTypeEnum pocketType;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType$ChallengeType?
      challenge;

  @override
  List<Object?> get props => [amount, usage, pocketType, challenge];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoTypeFromJson(
          json);

  late String id;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType$PocketType?
      pocket;

  late DateTime createdAt;

  late DateTime updatedAt;

  @override
  List<Object?> get props => [id, pocket, createdAt, updatedAt];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletTypeFromJson(
          json);

  late String id;

  List<String>? tags;

  String? name;

  String? title;

  List<String>? email;

  List<String>? phone;

  String? website;

  String? subtitle;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$TargetCurrencyType>?
      currencies;

  String? turnover;

  String? reference;

  bool? published;

  late DateTime createdAt;

  late DateTime updatedAt;

  String? brandColor;

  bool? isFollowed;

  String? description;

  List<String>? contactEmails;

  double? averageCustomers;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$LanguageType>?
      languages;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PictureType?
      picture;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PictureType>?
      outsidePictures;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PictureType>?
      insidePictures;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OpeningHoursType?
      openingHours;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SpecialOfferType>?
      specialOffers;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$FullAddressType>?
      locations;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType>?
      chatContact;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$SocialValueType>?
      socialMedia;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$CompanyType?
      company;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSCategoryType>?
      posCategory;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSServicesType>?
      services;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$PaymentType>?
      paymentMethods;

  List<GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$POSLoyaltyType>?
      loyaltyPrograms;

  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType$OwnerLessWalletOnePocketDtoType?
      wallet;

  @override
  List<Object?> get props => [
        id,
        tags,
        name,
        title,
        email,
        phone,
        website,
        subtitle,
        currencies,
        turnover,
        reference,
        published,
        createdAt,
        updatedAt,
        brandColor,
        isFollowed,
        description,
        contactEmails,
        averageCustomers,
        languages,
        picture,
        outsidePictures,
        insidePictures,
        openingHours,
        specialOffers,
        locations,
        chatContact,
        socialMedia,
        company,
        posCategory,
        services,
        paymentMethods,
        loyaltyPrograms,
        wallet
      ];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType
    extends JsonSerializable with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType();

  factory GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateTypeFromJson(
          json);

  int? count;

  bool? isLast;

  late List<
          GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType$POSWithWalletType>
      objects;

  @override
  List<Object?> get props => [count, isLast, objects];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateTypeToJson(
          this);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModule$Query extends JsonSerializable
    with EquatableMixin {
  GetPointOfSalesWithWalletsForModule$Query();

  factory GetPointOfSalesWithWalletsForModule$Query.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModule$QueryFromJson(json);

  late GetPointOfSalesWithWalletsForModule$Query$POSWithWalletPaginateType
      getPointOfSalesWithWalletsForModule;

  @override
  List<Object?> get props => [getPointOfSalesWithWalletsForModule];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModule$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class PaginationInput extends JsonSerializable with EquatableMixin {
  PaginationInput({
    this.page,
    this.limit,
  });

  factory PaginationInput.fromJson(Map<String, dynamic> json) =>
      _$PaginationInputFromJson(json);

  int? page;

  int? limit;

  @override
  List<Object?> get props => [page, limit];

  @override
  Map<String, dynamic> toJson() => _$PaginationInputToJson(this);
}

enum PocketUsageType {
  @JsonValue('MAIN')
  main,
  @JsonValue('BONUS')
  bonus,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum PocketTypeEnum {
  @JsonValue('QUANTITATIVE')
  quantitative,
  @JsonValue('QUALITATIVE')
  qualitative,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum PredefinedActionsEnum {
  @JsonValue('LOGIN')
  login,
  @JsonValue('REGISTER')
  register,
  @JsonValue('NEWSLETTER')
  newsletter,
  @JsonValue('ADD_WISHLIST')
  addWishlist,
  @JsonValue('PRODUCT_RATING')
  productRating,
  @JsonValue('PRODUCT_REVIEW')
  productReview,
  @JsonValue('COMPLETE_PROFILE')
  completeProfile,
  @JsonValue('SHARE_BLOG_FACEBOOK')
  shareBlogFacebook,
  @JsonValue('SHARE_FACEBOOK_PAGE')
  shareFacebookPage,
  @JsonValue('SHARE_PRODUCT_FACEBOOK')
  shareProductFacebook,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum JockerKindEnum {
  @JsonValue('ADD_10_SEC')
  add10Sec,
  @JsonValue('ELIMINATE_2_SUGGESTIONS')
  eliminate2Suggestions,
  @JsonValue('SHOW_USERS_PERCENTAGE')
  showUsersPercentage,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum Gender {
  @JsonValue('MALE')
  male,
  @JsonValue('FEMALE')
  female,
  @JsonValue('PREFER_NOT_TO_SAY')
  preferNotToSay,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum ChallengeStatusEnum {
  @JsonValue('DRAFT')
  draft,
  @JsonValue('ONGOING')
  ongoing,
  @JsonValue('FINISHED')
  finished,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum AudienceCriteriaFieldEnum {
  @JsonValue('AGE')
  age,
  @JsonValue('STATE')
  state,
  @JsonValue('GENDER')
  gender,
  @JsonValue('COUNTRY')
  country,
  @JsonValue('HOBBIES')
  hobbies,
  @JsonValue('LANGUAGE')
  language,
  @JsonValue('LOCATION')
  location,
  @JsonValue('EDUCATION')
  education,
  @JsonValue('INTERESTS')
  interests,
  @JsonValue('JOIN_DATE')
  joinDate,
  @JsonValue('OCCUPATION')
  occupation,
  @JsonValue('QUEST_ACTION')
  questAction,
  @JsonValue('MARITAL_STATUS')
  maritalStatus,
  @JsonValue('REPUTATION_LEVEL')
  reputationLevel,
  @JsonValue('QUANTITATIVE_CURRENT')
  quantitativeCurrent,
  @JsonValue('QUANTITATIVE_OVERALL')
  quantitativeOverall,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum OperatorEnum {
  @JsonValue('EQUAL')
  equal,
  @JsonValue('GREATER')
  greater,
  @JsonValue('BETWEEN')
  between,
  @JsonValue('DIFFERENT')
  different,
  @JsonValue('NOT_BETWEEN')
  notBetween,
  @JsonValue('INCLUDED_IN')
  includedIn,
  @JsonValue('AT_LEAST_ONE')
  atLeastOne,
  @JsonValue('NOT_SPECIFIED')
  notSpecified,
  @JsonValue('NOT_INCLUDED_IN')
  notIncludedIn,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum CalculatedOutputEnum {
  @JsonValue('NUMBER')
  number,
  @JsonValue('TEXT')
  text,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum ApiMethods {
  @JsonValue('GET')
  kw$GET,
  @JsonValue('POST')
  post,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum QuestionTypeEnum {
  @JsonValue('SHORT_ANSWER')
  shortAnswer,
  @JsonValue('PARAGRAPH')
  paragraph,
  @JsonValue('MULTIPLE_CHOICE')
  multipleChoice,
  @JsonValue('CHECKBOXES')
  checkboxes,
  @JsonValue('DROPDOWN')
  dropdown,
  @JsonValue('PICTURE')
  picture,
  @JsonValue('DATE')
  date,
  @JsonValue('TIME')
  time,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum SocialImageStyleEnum {
  @JsonValue('BUBBLE')
  bubble,
  @JsonValue('COLOR')
  color,
  @JsonValue('STICKER')
  sticker,
  @JsonValue('COLOR_HAND_DROWN')
  colorHandDrown,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum SocialActionEnum {
  @JsonValue('SHARE')
  share,
  @JsonValue('LIKE')
  like,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum SocialContentTypeEnum {
  @JsonValue('PAGE')
  page,
  @JsonValue('PROFILE')
  profile,
  @JsonValue('POST')
  post,
  @JsonValue('VIDEO')
  video,
  @JsonValue('STORY')
  story,
  @JsonValue('REEL')
  reel,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum ZoneTypesEnum {
  @JsonValue('Point')
  point,
  @JsonValue('Polygon')
  polygon,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum StateCapitalEnum {
  @JsonValue('PRIMARY')
  primary,
  @JsonValue('ADMIN')
  admin,
  @JsonValue('MINOR')
  minor,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum App {
  @JsonValue('BOSK')
  bosk,
  @JsonValue('SKUAD')
  skuad,
  @JsonValue('FIGAMY')
  figamy,
  @JsonValue('COCKPIT')
  cockpit,
  @JsonValue('DIKTUP')
  diktup,
  @JsonValue('MAGARI')
  magari,
  @JsonValue('RECOLDA')
  recolda,
  @JsonValue('SIFCA')
  sifca,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum UserRole {
  @JsonValue('API')
  api,
  @JsonValue('ADMIN')
  admin,
  @JsonValue('EDITOR')
  editor,
  @JsonValue('MANAGER')
  manager,
  @JsonValue('CONSUMER')
  consumer,
  @JsonValue('COMMUNITY')
  community,
  @JsonValue('FINANCIAL')
  financial,
  @JsonValue('WAREHOUSE')
  warehouse,
  @JsonValue('COMMERCIAL')
  commercial,
  @JsonValue('MERCHANDISER')
  merchandiser,
  @JsonValue('NOT_SPECIFIED')
  notSpecified,
  @JsonValue('GROUP_MODERATOR')
  groupModerator,
  @JsonValue('WHOLESALER_OWNER')
  wholesalerOwner,
  @JsonValue('WHOLESALER_MANAGER')
  wholesalerManager,
  @JsonValue('MANUFACTURER_OWNER')
  manufacturerOwner,
  @JsonValue('WHOLESALER_ASSISTANT')
  wholesalerAssistant,
  @JsonValue('MANUFACTURER_MANAGER')
  manufacturerManager,
  @JsonValue('MANUFACTURER_ASSISTANT')
  manufacturerAssistant,
  @JsonValue('SALES')
  sales,
  @JsonValue('SYSTEM')
  system,
  @JsonValue('CATALOG')
  catalog,
  @JsonValue('CONTENT')
  content,
  @JsonValue('LOYALTY')
  loyalty,
  @JsonValue('NETWORK')
  network,
  @JsonValue('CUSTOMERS')
  customers,
  @JsonValue('INVENTORY')
  inventory,
  @JsonValue('ORGANIZATION')
  organization,
  @JsonValue('MERCHANDISING')
  merchandising,
  @JsonValue('DASHBOARDS_SALES')
  dashboardsSales,
  @JsonValue('DASHBOARDS_FINANCE')
  dashboardsFinance,
  @JsonValue('DASHBOARDS_ANALYTICS')
  dashboardsAnalytics,
  @JsonValue('DASHBOARDS_WAREHOUSE')
  dashboardsWarehouse,
  @JsonValue('DASHBOARDS_MERCHANDISING')
  dashboardsMerchandising,
  @JsonValue('POS_OWNER')
  posOwner,
  @JsonValue('POS_WAITER')
  posWaiter,
  @JsonValue('POS_MANAGER')
  posManager,
  @JsonValue('DELIVERY_MAN')
  deliveryMan,
  @JsonValue('POS_ASSISTANT')
  posAssistant,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum SourcesEnum {
  @JsonValue('FIGAMY')
  figamy,
  @JsonValue('OOREDOO')
  ooredoo,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum UserStatus {
  @JsonValue('ONLINE')
  online,
  @JsonValue('AWAY')
  away,
  @JsonValue('BUSY')
  busy,
  @JsonValue('OFFLINE')
  offline,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum MobileThemesEnum {
  @JsonValue('DARK')
  dark,
  @JsonValue('LIGHT')
  light,
  @JsonValue('SYSTEM')
  system,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum MaritalStatus {
  @JsonValue('SINGLE')
  single,
  @JsonValue('MARRIED')
  married,
  @JsonValue('ENGAGED')
  engaged,
  @JsonValue('WIDOWED')
  widowed,
  @JsonValue('DIVORCED')
  divorced,
  @JsonValue('SEPERATED')
  seperated,
  @JsonValue('IN_RELATIONSHIP')
  inRelationship,
  @JsonValue('PREFER_NOT_TO_SAY')
  preferNotToSay,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum AcademicLevel {
  @JsonValue('PRIMARY')
  primary,
  @JsonValue('HIGH_SCHOOL')
  highSchool,
  @JsonValue('UNIVERSITY')
  university,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum OpeningStatus {
  @JsonValue('ALWAYS_OPEN')
  alwaysOpen,
  @JsonValue('NOT_AVAILABLE')
  notAvailable,
  @JsonValue('SELECTED_HOURS')
  selectedHours,
  @JsonValue('PERMANENTLY_CLOSED')
  permanentlyClosed,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum Days {
  @JsonValue('MONDAY')
  monday,
  @JsonValue('TUESDAY')
  tuesday,
  @JsonValue('WEDNESDAY')
  wednesday,
  @JsonValue('THURSDAY')
  thursday,
  @JsonValue('FRIDAY')
  friday,
  @JsonValue('SATURDAY')
  saturday,
  @JsonValue('SUNDAY')
  sunday,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum SpecialOffersType {
  @JsonValue('BAR')
  bar,
  @JsonValue('LUNCH')
  lunch,
  @JsonValue('BRUNCH')
  brunch,
  @JsonValue('DINNER')
  dinner,
  @JsonValue('BREAKFAST')
  breakfast,
  @JsonValue('HAPPY_HOUR')
  happyHour,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum BankDetailsHolderTypeEnum {
  @JsonValue('PRIVATE')
  private,
  @JsonValue('COMPANY')
  company,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

enum PaymentTypeEnum {
  @JsonValue('CREDIT_CARD')
  creditCard,
  @JsonValue('PAYMENT')
  payment,
  @JsonValue('METHODS')
  methods,
  @JsonValue('ARTEMIS_UNKNOWN')
  artemisUnknown,
}

@JsonSerializable(explicitToJson: true)
class GetCurrentUserQuantitativeWalletArguments extends JsonSerializable
    with EquatableMixin {
  GetCurrentUserQuantitativeWalletArguments({this.target});

  @override
  factory GetCurrentUserQuantitativeWalletArguments.fromJson(
          Map<String, dynamic> json) =>
      _$GetCurrentUserQuantitativeWalletArgumentsFromJson(json);

  final TargetACIInput? target;

  @override
  List<Object?> get props => [target];

  @override
  Map<String, dynamic> toJson() =>
      _$GetCurrentUserQuantitativeWalletArgumentsToJson(this);
}

final GET_CURRENT_USER_QUANTITATIVE_WALLET_QUERY_DOCUMENT_OPERATION_NAME =
    'getCurrentUserQuantitativeWallet';
final GET_CURRENT_USER_QUANTITATIVE_WALLET_QUERY_DOCUMENT =
    DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'getCurrentUserQuantitativeWallet'),
    variableDefinitions: [
      VariableDefinitionNode(
        variable: VariableNode(name: NameNode(value: 'target')),
        type: NamedTypeNode(
          name: NameNode(value: 'TargetACIInput'),
          isNonNull: false,
        ),
        defaultValue: DefaultValueNode(value: null),
        directives: [],
      )
    ],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'getCurrentUserQuantitativeWallet'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'target'),
            value: VariableNode(name: NameNode(value: 'target')),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'id'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'pocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'amount'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'usage'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'pocketType'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'challenge'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: SelectionSetNode(selections: [
                  FieldNode(
                    name: NameNode(value: 'id'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'title'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'description'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'media'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'videos'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'deg360'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'baseUrl'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'path'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'width'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'height'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'y'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'pictures'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'baseUrl'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'path'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'width'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'height'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'y'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'challengeType'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'id'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'title'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'description'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'rules'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'icon'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'media'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'videos'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'deg360'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'pictures'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'minStep'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'minCheckPoints'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'minGiftValue'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'claimReward'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'activityTypes'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'title'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'description'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'icon'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'theme'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'media'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'videos'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'deg360'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'pictures'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'predefined'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'enable'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'action'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'jockers'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'jocker'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'title'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'description'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'icon'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'cost'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'kind'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'media'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'videos'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'deg360'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'pictures'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'createdAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'updatedAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'cost'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'fees'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'enable'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'createdAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'updatedAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'creator'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'id'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'email'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'gender'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'lastName'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'username'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'firstName'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'phone'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'number'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'isValid'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'countryCode'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'validationNumber'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'picture'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'baseUrl'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'path'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'width'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'height'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'y'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'startDate'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'endDate'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'status'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'winners'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'rank'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'reward'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'checkpoints'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'checkpoint'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'amount'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'maxAnswers'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'audience'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'id'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'icon'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'title'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'createdAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'updatedAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'description'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'media'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'videos'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'deg360'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'pictures'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'segments'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'rank'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'criteria'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'icon'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'title'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'style'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'enable'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'description'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'createdAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'updatedAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'media'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'videos'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'deg360'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'pictures'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'fields'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'field'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'operators'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'filters'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'field'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'value'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'action'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'id'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'activityType'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'id'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'title'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name:
                                                NameNode(value: 'description'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'icon'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'theme'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'media'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'videos'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'deg360'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'pictures'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'createdAt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'updatedAt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'predefined'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'enable'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'action'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'required'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'definition'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'textBox'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'min'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'max'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'rating'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'max'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'text'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'calculated'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'output'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'show'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'formula'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'values'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'minValue'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'maxValue'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'score'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'date'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'outdated'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'interval'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'contact'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'firstname'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'lastname'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'email'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'phone'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'description'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'address'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'birthday'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'gender'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'civility'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'profession'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'academicLevel'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'language'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'number'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'minValue'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'maxValue'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'interval'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'api'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'link'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'method'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'auth'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'secret'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'params'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'name'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'type'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'matrix'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'lines'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'columns'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'toggle'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'leftLabel'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'rightLabel'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'choices'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'maxResponses'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'personalised'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'unique'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'random'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'leaderboard'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'api'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'image'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'interaction'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'suggestions'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'id'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'order'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'title'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'choices'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet:
                                                            SelectionSetNode(
                                                                selections: [
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'item'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'enable'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                            ]),
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'mandatory'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'type'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value:
                                                                'challengeStep'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet:
                                                            SelectionSetNode(
                                                                selections: [
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'id'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              )
                                                            ]),
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'points'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'score'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'createdAt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'updatedAt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'smiley'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'levels'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              )
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'score'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'min'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              )
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'lead'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'url'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'image'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name:
                                                NameNode(value: 'verification'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'number'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value:
                                                                'verification'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet:
                                                            SelectionSetNode(
                                                                selections: [
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'rank'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              )
                                                            ]),
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'verified'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet:
                                                            SelectionSetNode(
                                                                selections: [
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'rank'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              )
                                                            ]),
                                                      ),
                                                    ]),
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'email'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value:
                                                                'verification'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet:
                                                            SelectionSetNode(
                                                                selections: [
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'rank'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              )
                                                            ]),
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'verified'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet:
                                                            SelectionSetNode(
                                                                selections: [
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'rank'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              )
                                                            ]),
                                                      ),
                                                    ]),
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'video'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'minSeconds'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              )
                                            ]),
                                          ),
                                          FieldNode(
                                            name:
                                                NameNode(value: 'socialMedia'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'socialMedia'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'id'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'name'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'code'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'fontIcon'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'createdAt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'updatedAt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'images'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet:
                                                            SelectionSetNode(
                                                                selections: [
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'style'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'images'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    SelectionSetNode(
                                                                        selections: [
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'svg'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            SelectionSetNode(
                                                                                selections: [
                                                                              FieldNode(
                                                                                name: NameNode(value: 'size48'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'baseUrl'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'path'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'width'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'height'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'x'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'y'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'alt'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                ]),
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'size96'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'baseUrl'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'path'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'width'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'height'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'x'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'y'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'alt'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                ]),
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'size144'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'baseUrl'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'path'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'width'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'height'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'x'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'y'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'alt'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                ]),
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'size240'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'baseUrl'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'path'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'width'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'height'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'x'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'y'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'alt'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                ]),
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'size480'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'baseUrl'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'path'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'width'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'height'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'x'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'y'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'alt'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                ]),
                                                                              ),
                                                                            ]),
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'png'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            SelectionSetNode(
                                                                                selections: [
                                                                              FieldNode(
                                                                                name: NameNode(value: 'size48'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'baseUrl'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'path'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'width'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'height'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'x'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'y'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'alt'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                ]),
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'size96'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'baseUrl'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'path'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'width'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'height'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'x'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'y'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'alt'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                ]),
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'size144'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'baseUrl'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'path'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'width'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'height'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'x'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'y'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'alt'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                ]),
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'size240'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'baseUrl'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'path'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'width'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'height'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'x'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'y'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'alt'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                ]),
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'size480'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'baseUrl'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'path'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'width'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'height'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'x'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'y'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'alt'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                ]),
                                                                              ),
                                                                            ]),
                                                                      ),
                                                                    ]),
                                                              ),
                                                            ]),
                                                      ),
                                                    ]),
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'action'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'socialContent'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'url'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name:
                                                NameNode(value: 'appDownload'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'playstore'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'appstore'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'appgallery'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'createdAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'updatedAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'operator'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'values'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'startDate'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'endDate'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'minValue'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'maxValue'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'value'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'values'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'zone'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'radius'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'type'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'paths'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'lat'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'lng'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'order'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'countries'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'id'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'name'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'code'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'dialCode'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'iconFlag'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'createdAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'updatedAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagSquare'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagWide'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'states'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'id'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'adminName'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'capital'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'population'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'ascii'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'lat'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'lng'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'country'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'id'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'name'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'code'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'dialCode'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'iconFlag'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'createdAt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'updatedAt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'flagSquare'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'flagWide'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'createdAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'updatedAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagSquare'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagWide'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'languages'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'id'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'name'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'code'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'iconFlag'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'createdAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'updatedAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagSquare'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagWide'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'reputations'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'id'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'rank'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'color'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'picture'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'perks'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'discount'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name:
                                                NameNode(value: 'description'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'lossAmount'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'nextLevelMax'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name:
                                            NameNode(value: 'inactivityCycle'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'levelInterval'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'min'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'max'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name:
                                            NameNode(value: 'reputationLevel'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'createdAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'updatedAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'createdAt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'updatedAt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                ]),
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'createdAt'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'updatedAt'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
        ]),
      )
    ]),
  )
]);

class GetCurrentUserQuantitativeWalletQuery extends GraphQLQuery<
    GetCurrentUserQuantitativeWallet$Query,
    GetCurrentUserQuantitativeWalletArguments> {
  GetCurrentUserQuantitativeWalletQuery({required this.variables});

  @override
  final DocumentNode document =
      GET_CURRENT_USER_QUANTITATIVE_WALLET_QUERY_DOCUMENT;

  @override
  final String operationName =
      GET_CURRENT_USER_QUANTITATIVE_WALLET_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  final GetCurrentUserQuantitativeWalletArguments variables;

  @override
  List<Object?> get props => [document, operationName, variables];

  @override
  GetCurrentUserQuantitativeWallet$Query parse(Map<String, dynamic> json) =>
      GetCurrentUserQuantitativeWallet$Query.fromJson(json);
}

@JsonSerializable(explicitToJson: true)
class IsWalletAndCardInitializedArguments extends JsonSerializable
    with EquatableMixin {
  IsWalletAndCardInitializedArguments({this.userId});

  @override
  factory IsWalletAndCardInitializedArguments.fromJson(
          Map<String, dynamic> json) =>
      _$IsWalletAndCardInitializedArgumentsFromJson(json);

  final String? userId;

  @override
  List<Object?> get props => [userId];

  @override
  Map<String, dynamic> toJson() =>
      _$IsWalletAndCardInitializedArgumentsToJson(this);
}

final IS_WALLET_AND_CARD_INITIALIZED_QUERY_DOCUMENT_OPERATION_NAME =
    'isWalletAndCardInitialized';
final IS_WALLET_AND_CARD_INITIALIZED_QUERY_DOCUMENT =
    DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'isWalletAndCardInitialized'),
    variableDefinitions: [
      VariableDefinitionNode(
        variable: VariableNode(name: NameNode(value: 'userId')),
        type: NamedTypeNode(
          name: NameNode(value: 'String'),
          isNonNull: false,
        ),
        defaultValue: DefaultValueNode(value: null),
        directives: [],
      )
    ],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'isWalletAndCardInitialized'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'userId'),
            value: VariableNode(name: NameNode(value: 'userId')),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'isUserCardCreated'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'isQuantitativeWalletCreated'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
        ]),
      )
    ]),
  )
]);

class IsWalletAndCardInitializedQuery extends GraphQLQuery<
    IsWalletAndCardInitialized$Query, IsWalletAndCardInitializedArguments> {
  IsWalletAndCardInitializedQuery({required this.variables});

  @override
  final DocumentNode document = IS_WALLET_AND_CARD_INITIALIZED_QUERY_DOCUMENT;

  @override
  final String operationName =
      IS_WALLET_AND_CARD_INITIALIZED_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  final IsWalletAndCardInitializedArguments variables;

  @override
  List<Object?> get props => [document, operationName, variables];

  @override
  IsWalletAndCardInitialized$Query parse(Map<String, dynamic> json) =>
      IsWalletAndCardInitialized$Query.fromJson(json);
}

@JsonSerializable(explicitToJson: true)
class WalletOwnerHasEnoughBalanceArguments extends JsonSerializable
    with EquatableMixin {
  WalletOwnerHasEnoughBalanceArguments({
    this.pos,
    this.user,
    required this.amount,
    this.wholesaler,
    this.manufacturer,
    required this.usage,
  });

  @override
  factory WalletOwnerHasEnoughBalanceArguments.fromJson(
          Map<String, dynamic> json) =>
      _$WalletOwnerHasEnoughBalanceArgumentsFromJson(json);

  final String? pos;

  final String? user;

  late double amount;

  final String? wholesaler;

  final String? manufacturer;

  @JsonKey(unknownEnumValue: PocketUsageType.artemisUnknown)
  late PocketUsageType usage;

  @override
  List<Object?> get props =>
      [pos, user, amount, wholesaler, manufacturer, usage];

  @override
  Map<String, dynamic> toJson() =>
      _$WalletOwnerHasEnoughBalanceArgumentsToJson(this);
}

final WALLET_OWNER_HAS_ENOUGH_BALANCE_QUERY_DOCUMENT_OPERATION_NAME =
    'walletOwnerHasEnoughBalance';
final WALLET_OWNER_HAS_ENOUGH_BALANCE_QUERY_DOCUMENT =
    DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'walletOwnerHasEnoughBalance'),
    variableDefinitions: [
      VariableDefinitionNode(
        variable: VariableNode(name: NameNode(value: 'pos')),
        type: NamedTypeNode(
          name: NameNode(value: 'ID'),
          isNonNull: false,
        ),
        defaultValue: DefaultValueNode(value: null),
        directives: [],
      ),
      VariableDefinitionNode(
        variable: VariableNode(name: NameNode(value: 'user')),
        type: NamedTypeNode(
          name: NameNode(value: 'ID'),
          isNonNull: false,
        ),
        defaultValue: DefaultValueNode(value: null),
        directives: [],
      ),
      VariableDefinitionNode(
        variable: VariableNode(name: NameNode(value: 'amount')),
        type: NamedTypeNode(
          name: NameNode(value: 'Float'),
          isNonNull: true,
        ),
        defaultValue: DefaultValueNode(value: null),
        directives: [],
      ),
      VariableDefinitionNode(
        variable: VariableNode(name: NameNode(value: 'wholesaler')),
        type: NamedTypeNode(
          name: NameNode(value: 'ID'),
          isNonNull: false,
        ),
        defaultValue: DefaultValueNode(value: null),
        directives: [],
      ),
      VariableDefinitionNode(
        variable: VariableNode(name: NameNode(value: 'manufacturer')),
        type: NamedTypeNode(
          name: NameNode(value: 'ID'),
          isNonNull: false,
        ),
        defaultValue: DefaultValueNode(value: null),
        directives: [],
      ),
      VariableDefinitionNode(
        variable: VariableNode(name: NameNode(value: 'usage')),
        type: NamedTypeNode(
          name: NameNode(value: 'PocketUsageType'),
          isNonNull: true,
        ),
        defaultValue: DefaultValueNode(value: null),
        directives: [],
      ),
    ],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'walletOwnerHasEnoughBalance'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'pos'),
            value: VariableNode(name: NameNode(value: 'pos')),
          ),
          ArgumentNode(
            name: NameNode(value: 'user'),
            value: VariableNode(name: NameNode(value: 'user')),
          ),
          ArgumentNode(
            name: NameNode(value: 'usage'),
            value: VariableNode(name: NameNode(value: 'usage')),
          ),
          ArgumentNode(
            name: NameNode(value: 'amount'),
            value: VariableNode(name: NameNode(value: 'amount')),
          ),
          ArgumentNode(
            name: NameNode(value: 'wholesaler'),
            value: VariableNode(name: NameNode(value: 'wholesaler')),
          ),
          ArgumentNode(
            name: NameNode(value: 'manufacturer'),
            value: VariableNode(name: NameNode(value: 'manufacturer')),
          ),
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'hasEnoughBalance'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          )
        ]),
      )
    ]),
  )
]);

class WalletOwnerHasEnoughBalanceQuery extends GraphQLQuery<
    WalletOwnerHasEnoughBalance$Query, WalletOwnerHasEnoughBalanceArguments> {
  WalletOwnerHasEnoughBalanceQuery({required this.variables});

  @override
  final DocumentNode document = WALLET_OWNER_HAS_ENOUGH_BALANCE_QUERY_DOCUMENT;

  @override
  final String operationName =
      WALLET_OWNER_HAS_ENOUGH_BALANCE_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  final WalletOwnerHasEnoughBalanceArguments variables;

  @override
  List<Object?> get props => [document, operationName, variables];

  @override
  WalletOwnerHasEnoughBalance$Query parse(Map<String, dynamic> json) =>
      WalletOwnerHasEnoughBalance$Query.fromJson(json);
}

@JsonSerializable(explicitToJson: true)
class WalletByOwnerArguments extends JsonSerializable with EquatableMixin {
  WalletByOwnerArguments({
    this.pos,
    this.user,
    this.wholesaler,
    this.manufacturer,
  });

  @override
  factory WalletByOwnerArguments.fromJson(Map<String, dynamic> json) =>
      _$WalletByOwnerArgumentsFromJson(json);

  final String? pos;

  final String? user;

  final String? wholesaler;

  final String? manufacturer;

  @override
  List<Object?> get props => [pos, user, wholesaler, manufacturer];

  @override
  Map<String, dynamic> toJson() => _$WalletByOwnerArgumentsToJson(this);
}

final WALLET_BY_OWNER_QUERY_DOCUMENT_OPERATION_NAME = 'walletByOwner';
final WALLET_BY_OWNER_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'walletByOwner'),
    variableDefinitions: [
      VariableDefinitionNode(
        variable: VariableNode(name: NameNode(value: 'pos')),
        type: NamedTypeNode(
          name: NameNode(value: 'ID'),
          isNonNull: false,
        ),
        defaultValue: DefaultValueNode(value: null),
        directives: [],
      ),
      VariableDefinitionNode(
        variable: VariableNode(name: NameNode(value: 'user')),
        type: NamedTypeNode(
          name: NameNode(value: 'ID'),
          isNonNull: false,
        ),
        defaultValue: DefaultValueNode(value: null),
        directives: [],
      ),
      VariableDefinitionNode(
        variable: VariableNode(name: NameNode(value: 'wholesaler')),
        type: NamedTypeNode(
          name: NameNode(value: 'ID'),
          isNonNull: false,
        ),
        defaultValue: DefaultValueNode(value: null),
        directives: [],
      ),
      VariableDefinitionNode(
        variable: VariableNode(name: NameNode(value: 'manufacturer')),
        type: NamedTypeNode(
          name: NameNode(value: 'ID'),
          isNonNull: false,
        ),
        defaultValue: DefaultValueNode(value: null),
        directives: [],
      ),
    ],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'walletByOwner'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'pos'),
            value: VariableNode(name: NameNode(value: 'pos')),
          ),
          ArgumentNode(
            name: NameNode(value: 'user'),
            value: VariableNode(name: NameNode(value: 'user')),
          ),
          ArgumentNode(
            name: NameNode(value: 'wholesaler'),
            value: VariableNode(name: NameNode(value: 'wholesaler')),
          ),
          ArgumentNode(
            name: NameNode(value: 'manufacturer'),
            value: VariableNode(name: NameNode(value: 'manufacturer')),
          ),
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'id'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'owner'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'user'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: SelectionSetNode(selections: [
                  FieldNode(
                    name: NameNode(value: 'id'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'apps'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'email'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'roles'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'title'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'about'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'gender'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'locale'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'source'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'status'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'lastName'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'username'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'firstName'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'plugged'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'createdAt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'updatedAt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'isMailValid'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'dateOfBirth'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'phoneNumber'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'mobileTheme'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'placeOfBirth'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'maritalStatus'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'newsletterSubs'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'hasAutoGeneratedEmail'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'phone'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'number'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'isValid'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'countryCode'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'validationNumber'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'picture'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'baseUrl'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'path'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'width'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'height'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'x'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'y'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'alt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'pictures'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'baseUrl'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'path'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'width'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'height'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'x'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'y'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'alt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'languages'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'id'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'name'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'code'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'iconFlag'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'createdAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'updatedAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'flagSquare'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'baseUrl'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'path'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'width'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'height'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'y'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'flagWide'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'baseUrl'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'path'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'width'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'height'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'y'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'nationality'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'id'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'name'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'code'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'dialCode'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'iconFlag'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'createdAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'updatedAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'flagSquare'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'baseUrl'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'path'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'width'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'height'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'y'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'flagWide'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'baseUrl'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'path'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'width'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'height'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'y'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'billingAddress'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'city'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'address'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'postCode'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'addressLine'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'location'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'type'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'coordinates'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'country'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'code'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'dialCode'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'iconFlag'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagSquare'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagWide'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'state'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'adminName'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'capital'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'population'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'ascii'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'lat'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'lng'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'country'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'name'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'code'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'dialCode'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'iconFlag'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'createdAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'updatedAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagSquare'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagWide'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagSquare'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagWide'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'owner'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'phone'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'number'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'countryCode'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'shippingAddress'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'city'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'address'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'postCode'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'addressLine'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'location'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'type'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'coordinates'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'country'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'code'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'dialCode'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'iconFlag'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagSquare'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagWide'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'state'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'adminName'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'capital'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'population'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'ascii'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'lat'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'lng'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'country'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'name'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'code'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'dialCode'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'iconFlag'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'createdAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'updatedAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagSquare'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagWide'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagSquare'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagWide'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'owner'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'phone'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'number'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'countryCode'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'residentialAddress'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'city'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'address'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'postCode'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'addressLine'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'location'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'type'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'coordinates'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'country'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'code'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'dialCode'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'iconFlag'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagSquare'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagWide'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'state'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'adminName'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'capital'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'population'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'ascii'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'lat'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'lng'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'country'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'name'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'code'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'dialCode'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'iconFlag'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'createdAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'updatedAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagSquare'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagWide'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagSquare'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagWide'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'owner'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'phone'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'number'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'countryCode'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'chatContact'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'name'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'code'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'fontIcon'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'images'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'style'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'images'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'svg'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'size48'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size96'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size144'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size240'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size480'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'png'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'size48'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size96'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size144'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size240'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size480'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'value'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'socialMedia'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'name'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'code'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'fontIcon'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'images'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'style'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'images'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'svg'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'size48'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size96'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size144'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size240'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size480'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'png'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'size48'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size96'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size144'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size240'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size480'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'value'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'socialLoginData'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'ooredoo'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          )
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'facebook'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'token'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'email'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'last_name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'first_name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'google'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'sub'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'email'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'token'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'locale'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'picture'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'given_name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'family_name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'email_verified'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'apple'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'email'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'status'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'givenName'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'familyName'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'identityToken'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'userIdentifier'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'authorizationCode'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'education'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'level'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'name'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'description'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'tags'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'from'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'to'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'graduated'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'work'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'company'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'position'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'description'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'city'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'adminName'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'capital'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'population'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'ascii'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'lat'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'lng'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'country'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'name'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'code'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'dialCode'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'iconFlag'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'createdAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'updatedAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagSquare'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagWide'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagSquare'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagWide'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'tags'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'from'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'to'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'current'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'lived'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'id'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'name'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'adminName'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'capital'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'population'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'ascii'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'lat'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'lng'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'country'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'code'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'dialCode'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'iconFlag'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagSquare'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagWide'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'createdAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'updatedAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'flagSquare'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'baseUrl'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'path'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'width'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'height'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'y'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'flagWide'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'baseUrl'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'path'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'width'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'height'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'y'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'hobbies'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'interests'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                ]),
              ),
              FieldNode(
                name: NameNode(value: 'pos'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: SelectionSetNode(selections: [
                  FieldNode(
                    name: NameNode(value: 'id'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'tags'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'name'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'title'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'email'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'phone'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'website'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'subtitle'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'currencies'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'currency'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'code'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'symbol'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'iconFlag'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagSquare'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagWide'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'default'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'turnover'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'reference'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'published'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'createdAt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'updatedAt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'brandColor'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'isFollowed'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'description'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'contactEmails'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'averageCustomers'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'languages'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'id'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'name'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'code'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'iconFlag'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'createdAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'updatedAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'flagSquare'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'baseUrl'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'path'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'width'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'height'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'y'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'flagWide'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'baseUrl'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'path'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'width'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'height'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'y'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'picture'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'baseUrl'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'path'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'width'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'height'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'x'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'y'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'alt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'outsidePictures'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'baseUrl'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'path'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'width'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'height'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'x'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'y'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'alt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'insidePictures'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'baseUrl'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'path'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'width'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'height'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'x'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'y'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'alt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'openingHours'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'status'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'hours'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'day'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'from'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'to'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'specialOffers'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'offerType'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'hours'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'day'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'from'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'to'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'locations'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'city'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'address'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'postCode'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'addressLine'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'location'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'type'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'coordinates'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'country'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'code'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'dialCode'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'iconFlag'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagSquare'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagWide'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'state'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'adminName'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'capital'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'population'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'ascii'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'lat'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'lng'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'country'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'name'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'code'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'dialCode'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'iconFlag'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'createdAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'updatedAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagSquare'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagWide'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagSquare'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagWide'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'owner'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'phone'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'number'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'countryCode'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'chatContact'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'name'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'code'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'fontIcon'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'images'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'style'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'images'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'svg'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'size48'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size96'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size144'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size240'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size480'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'png'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'size48'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size96'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size144'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size240'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size480'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'value'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'socialMedia'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'name'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'code'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'fontIcon'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'images'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'style'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'images'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'svg'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'size48'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size96'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size144'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size240'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size480'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'png'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'size48'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size96'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size144'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size240'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size480'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'value'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'company'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'id'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'name'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'description'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'media'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'videos'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'deg360'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'pictures'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'address'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'city'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'address'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'postCode'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'addressLine'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'location'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'type'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'coordinates'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'country'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'name'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'code'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'dialCode'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'iconFlag'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'createdAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'updatedAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagSquare'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagWide'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'state'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'name'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'adminName'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'capital'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'population'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'ascii'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'lat'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'lng'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'country'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'id'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'name'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'code'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'dialCode'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'iconFlag'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'createdAt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'updatedAt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'flagSquare'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'flagWide'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'createdAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'updatedAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagSquare'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagWide'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'owner'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'name'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'phone'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'number'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'countryCode'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'legal'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'vat'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'register'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'licence'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'banks'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'holder'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'name'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'type'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'address'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'city'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'address'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'postCode'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'addressLine'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'location'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'type'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'coordinates'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'country'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'id'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'name'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'code'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'dialCode'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'iconFlag'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'createdAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'updatedAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagSquare'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagWide'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'state'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'id'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'adminName'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'capital'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'population'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'ascii'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'lat'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'lng'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'country'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'id'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'name'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'code'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'dialCode'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'iconFlag'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'createdAt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'updatedAt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'flagSquare'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'flagWide'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'createdAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'updatedAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagSquare'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagWide'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'owner'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'name'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'phone'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'number'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name:
                                                NameNode(value: 'countryCode'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'account'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'iban'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'bank'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'name'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'code'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'bic'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'logo'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'svg'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'png'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'default'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size16'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size24'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size32'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size48'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size64'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size128'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size256'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size512'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'icon'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'createdAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'updatedAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'externalId'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'contact'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'website'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'email'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'phone'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'number'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'isValid'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'countryCode'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'validationNumber'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'logistic'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'tags'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'externalId'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'createdAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'updatedAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'posCategory'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'id'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'name'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'mapPicture'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'createdAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'updatedAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'picture'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'baseUrl'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'path'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'width'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'height'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'y'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'services'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'id'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'index'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'name'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'createdAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'updatedAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'paymentMethods'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'id'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'name'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'code'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'paymentType'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'materialIcon'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'createdAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'updatedAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'images'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'png'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt2x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt_128'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt_256'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt_512'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'card_flat'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'card_flat2x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'card_flat_128'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'card_flat_256'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'card_flat_512'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'dark'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'dark2x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'dark_128'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'dark_256'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'dark_512'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'flat'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'flat2x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'flat_128'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'flat_256'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'flat_512'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'light'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'light2x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'light_128'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'light_256'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'light_512'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'default'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'default2x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'default_128'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'default_256'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'default_512'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'svg'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'card_flat'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'dark'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'flat'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'light'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'default'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'loyaltyPrograms'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'to'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'from'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'loyaltyProgram'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'programName'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'picture'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'company'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'name'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'description'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'media'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'videos'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'deg360'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'pictures'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'address'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'city'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'address'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'postCode'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'addressLine'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'location'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'type'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'coordinates'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'country'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'id'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'name'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'code'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'dialCode'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'iconFlag'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'createdAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'updatedAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagSquare'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagWide'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'state'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'id'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'adminName'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'capital'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'population'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'ascii'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'lat'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'lng'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'country'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'id'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'name'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'code'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'dialCode'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'iconFlag'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'createdAt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'updatedAt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'flagSquare'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'flagWide'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'createdAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'updatedAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagSquare'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagWide'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'owner'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'name'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'phone'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'number'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name:
                                                NameNode(value: 'countryCode'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'legal'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'vat'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'register'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'licence'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'banks'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'id'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'holder'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'name'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'type'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'address'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'city'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'address'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'postCode'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name:
                                                NameNode(value: 'addressLine'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'location'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'type'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'coordinates'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'country'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'id'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'name'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'code'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'dialCode'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'iconFlag'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'createdAt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'updatedAt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'flagSquare'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'flagWide'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'state'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'id'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'name'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'adminName'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'capital'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'population'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'ascii'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'lat'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'lng'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'country'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'id'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'name'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'code'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'dialCode'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'iconFlag'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'createdAt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'updatedAt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value:
                                                                'flagSquare'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet:
                                                            SelectionSetNode(
                                                                selections: [
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'baseUrl'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'path'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'width'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'height'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value: 'x'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value: 'y'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'alt'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                            ]),
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'flagWide'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet:
                                                            SelectionSetNode(
                                                                selections: [
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'baseUrl'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'path'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'width'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'height'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value: 'x'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value: 'y'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'alt'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                            ]),
                                                      ),
                                                    ]),
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'createdAt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'updatedAt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'flagSquare'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'flagWide'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'owner'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'name'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'phone'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'number'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value:
                                                                'countryCode'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                            ]),
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'account'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'iban'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'bank'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'id'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'name'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'code'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'bic'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'logo'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'svg'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'png'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'default'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'size16'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'size24'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'size32'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'size48'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'size64'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'size128'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'size256'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'size512'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'icon'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'createdAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'updatedAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'externalId'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'createdAt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'updatedAt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'contact'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'website'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'email'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'phone'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'number'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'isValid'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'countryCode'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name:
                                            NameNode(value: 'validationNumber'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'logistic'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'tags'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'externalId'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'createdAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'updatedAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                    ]),
                  ),
                ]),
              ),
              FieldNode(
                name: NameNode(value: 'wholesaler'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: SelectionSetNode(selections: [
                  FieldNode(
                    name: NameNode(value: 'id'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'name'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'email'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'website'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'currencies'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'currency'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'code'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'symbol'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'iconFlag'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagSquare'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagWide'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'default'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'phone'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'number'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'countryCode'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'fax'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'number'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'countryCode'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'createdAt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'updatedAt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'description'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'contactEmails'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'address'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'city'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'address'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'postCode'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'addressLine'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'location'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'type'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'coordinates'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'country'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'code'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'dialCode'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'iconFlag'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagSquare'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagWide'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'state'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'adminName'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'capital'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'population'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'ascii'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'lat'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'lng'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'country'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'name'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'code'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'dialCode'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'iconFlag'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'createdAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'updatedAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagSquare'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagWide'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagSquare'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagWide'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'owner'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'phone'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'number'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'countryCode'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'company'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'id'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'name'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'description'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'media'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'videos'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'deg360'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'pictures'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'address'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'city'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'address'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'postCode'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'addressLine'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'location'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'type'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'coordinates'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'country'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'name'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'code'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'dialCode'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'iconFlag'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'createdAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'updatedAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagSquare'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagWide'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'state'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'name'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'adminName'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'capital'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'population'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'ascii'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'lat'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'lng'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'country'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'id'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'name'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'code'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'dialCode'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'iconFlag'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'createdAt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'updatedAt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'flagSquare'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'flagWide'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'createdAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'updatedAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagSquare'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagWide'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'owner'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'name'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'phone'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'number'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'countryCode'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'legal'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'vat'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'register'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'licence'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'banks'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'holder'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'name'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'type'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'address'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'city'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'address'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'postCode'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'addressLine'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'location'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'type'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'coordinates'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'country'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'id'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'name'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'code'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'dialCode'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'iconFlag'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'createdAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'updatedAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagSquare'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagWide'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'state'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'id'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'adminName'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'capital'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'population'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'ascii'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'lat'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'lng'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'country'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'id'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'name'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'code'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'dialCode'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'iconFlag'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'createdAt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'updatedAt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'flagSquare'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'flagWide'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'createdAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'updatedAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagSquare'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagWide'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'owner'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'name'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'phone'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'number'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name:
                                                NameNode(value: 'countryCode'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'account'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'iban'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'bank'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'name'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'code'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'bic'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'logo'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'svg'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'png'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'default'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size16'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size24'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size32'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size48'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size64'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size128'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size256'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size512'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'icon'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'createdAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'updatedAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'externalId'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'contact'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'website'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'email'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'phone'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'number'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'isValid'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'countryCode'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'validationNumber'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'logistic'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'tags'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'externalId'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'createdAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'updatedAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'picture'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'baseUrl'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'path'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'width'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'height'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'x'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'y'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'alt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                ]),
              ),
              FieldNode(
                name: NameNode(value: 'manufacturer'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: SelectionSetNode(selections: [
                  FieldNode(
                    name: NameNode(value: 'id'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'email'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'name'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'description'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'website'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'contactEmails'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'currencies'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'currency'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'code'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'symbol'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'iconFlag'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagSquare'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagWide'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'default'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'createdAt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'updatedAt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'picture'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'baseUrl'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'path'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'width'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'height'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'x'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'y'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'alt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'address'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'city'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'address'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'postCode'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'addressLine'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'location'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'type'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'coordinates'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'country'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'code'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'dialCode'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'iconFlag'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagSquare'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagWide'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'state'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'adminName'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'capital'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'population'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'ascii'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'lat'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'lng'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'country'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'name'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'code'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'dialCode'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'iconFlag'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'createdAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'updatedAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagSquare'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagWide'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagSquare'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagWide'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'owner'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'phone'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'number'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'countryCode'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'company'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'id'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'name'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'description'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'media'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'videos'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'deg360'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'pictures'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'address'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'city'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'address'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'postCode'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'addressLine'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'location'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'type'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'coordinates'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'country'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'name'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'code'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'dialCode'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'iconFlag'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'createdAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'updatedAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagSquare'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagWide'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'state'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'name'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'adminName'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'capital'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'population'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'ascii'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'lat'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'lng'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'country'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'id'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'name'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'code'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'dialCode'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'iconFlag'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'createdAt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'updatedAt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'flagSquare'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'flagWide'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'createdAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'updatedAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagSquare'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagWide'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'owner'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'name'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'phone'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'number'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'countryCode'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'legal'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'vat'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'register'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'licence'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'banks'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'holder'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'name'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'type'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'address'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'city'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'address'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'postCode'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'addressLine'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'location'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'type'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'coordinates'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'country'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'id'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'name'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'code'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'dialCode'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'iconFlag'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'createdAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'updatedAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagSquare'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagWide'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'state'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'id'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'adminName'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'capital'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'population'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'ascii'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'lat'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'lng'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'country'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'id'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'name'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'code'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'dialCode'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'iconFlag'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'createdAt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'updatedAt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'flagSquare'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'flagWide'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'createdAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'updatedAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagSquare'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagWide'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'owner'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'name'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'phone'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'number'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name:
                                                NameNode(value: 'countryCode'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'account'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'iban'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'bank'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'name'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'code'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'bic'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'logo'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'svg'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'png'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'default'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size16'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size24'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size32'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size48'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size64'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size128'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size256'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'size512'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'icon'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'createdAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'updatedAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'externalId'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'contact'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'website'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'email'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'phone'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'number'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'isValid'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'countryCode'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'validationNumber'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'logistic'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'tags'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'externalId'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'createdAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'updatedAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                ]),
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'createdAt'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'updatedAt'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'pockets'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'amount'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'usage'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'pocketType'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'challenge'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: SelectionSetNode(selections: [
                  FieldNode(
                    name: NameNode(value: 'id'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'title'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'description'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'media'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'videos'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'deg360'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'baseUrl'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'path'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'width'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'height'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'y'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'pictures'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'baseUrl'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'path'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'width'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'height'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'y'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'challengeType'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'id'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'title'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'description'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'rules'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'icon'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'media'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'videos'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'deg360'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'pictures'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'minStep'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'minCheckPoints'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'minGiftValue'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'claimReward'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'activityTypes'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'title'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'description'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'icon'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'theme'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'media'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'videos'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'deg360'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'pictures'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'predefined'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'enable'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'action'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'jockers'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'jocker'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'title'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'description'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'icon'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'cost'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'kind'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'media'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'videos'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'deg360'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'pictures'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'createdAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'updatedAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'cost'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'fees'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'enable'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'createdAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'updatedAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'creator'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'id'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'email'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'gender'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'lastName'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'username'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'firstName'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'phone'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'number'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'isValid'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'countryCode'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'validationNumber'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'picture'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'baseUrl'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'path'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'width'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'height'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'y'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'startDate'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'endDate'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'status'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'winners'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'rank'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'reward'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'checkpoints'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'checkpoint'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'amount'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'maxAnswers'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'audience'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'id'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'icon'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'title'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'createdAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'updatedAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'description'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'media'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'videos'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'deg360'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'pictures'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'segments'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'rank'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'criteria'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'icon'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'title'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'style'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'enable'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'description'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'createdAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'updatedAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'media'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'videos'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'deg360'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'pictures'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'fields'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'field'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'operators'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'filters'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'field'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'value'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'action'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'id'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'activityType'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'id'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'title'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name:
                                                NameNode(value: 'description'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'icon'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'theme'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'media'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'videos'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'deg360'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'pictures'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'createdAt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'updatedAt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'predefined'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'enable'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'action'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'required'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'definition'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'textBox'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'min'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'max'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'rating'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'max'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'text'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'calculated'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'output'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'show'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'formula'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'values'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'minValue'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'maxValue'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'score'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'date'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'outdated'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'interval'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'contact'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'firstname'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'lastname'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'email'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'phone'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'description'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'address'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'birthday'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'gender'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'civility'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'profession'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'academicLevel'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'language'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'number'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'minValue'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'maxValue'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'interval'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'api'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'link'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'method'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'auth'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'secret'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'params'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'name'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'type'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'matrix'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'lines'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'columns'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'toggle'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'leftLabel'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'rightLabel'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'choices'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'maxResponses'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'personalised'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'unique'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'random'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'leaderboard'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'api'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'image'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'interaction'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'suggestions'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'id'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'order'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'title'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'choices'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet:
                                                            SelectionSetNode(
                                                                selections: [
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'item'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'enable'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                            ]),
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'mandatory'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'type'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value:
                                                                'challengeStep'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet:
                                                            SelectionSetNode(
                                                                selections: [
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'id'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              )
                                                            ]),
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'points'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'score'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'createdAt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'updatedAt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'smiley'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'levels'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              )
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'score'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'min'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              )
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'lead'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'url'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'image'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name:
                                                NameNode(value: 'verification'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'number'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value:
                                                                'verification'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet:
                                                            SelectionSetNode(
                                                                selections: [
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'rank'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              )
                                                            ]),
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'verified'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet:
                                                            SelectionSetNode(
                                                                selections: [
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'rank'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              )
                                                            ]),
                                                      ),
                                                    ]),
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'email'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value:
                                                                'verification'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet:
                                                            SelectionSetNode(
                                                                selections: [
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'rank'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              )
                                                            ]),
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'verified'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet:
                                                            SelectionSetNode(
                                                                selections: [
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'rank'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              )
                                                            ]),
                                                      ),
                                                    ]),
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'video'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'minSeconds'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              )
                                            ]),
                                          ),
                                          FieldNode(
                                            name:
                                                NameNode(value: 'socialMedia'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'socialMedia'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'id'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'name'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'code'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'fontIcon'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'createdAt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'updatedAt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'images'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet:
                                                            SelectionSetNode(
                                                                selections: [
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'style'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'images'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    SelectionSetNode(
                                                                        selections: [
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'svg'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            SelectionSetNode(
                                                                                selections: [
                                                                              FieldNode(
                                                                                name: NameNode(value: 'size48'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'baseUrl'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'path'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'width'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'height'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'x'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'y'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'alt'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                ]),
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'size96'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'baseUrl'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'path'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'width'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'height'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'x'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'y'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'alt'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                ]),
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'size144'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'baseUrl'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'path'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'width'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'height'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'x'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'y'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'alt'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                ]),
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'size240'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'baseUrl'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'path'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'width'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'height'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'x'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'y'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'alt'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                ]),
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'size480'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'baseUrl'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'path'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'width'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'height'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'x'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'y'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'alt'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                ]),
                                                                              ),
                                                                            ]),
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'png'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            SelectionSetNode(
                                                                                selections: [
                                                                              FieldNode(
                                                                                name: NameNode(value: 'size48'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'baseUrl'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'path'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'width'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'height'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'x'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'y'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'alt'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                ]),
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'size96'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'baseUrl'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'path'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'width'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'height'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'x'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'y'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'alt'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                ]),
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'size144'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'baseUrl'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'path'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'width'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'height'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'x'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'y'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'alt'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                ]),
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'size240'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'baseUrl'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'path'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'width'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'height'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'x'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'y'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'alt'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                ]),
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'size480'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'baseUrl'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'path'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'width'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'height'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'x'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'y'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'alt'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                ]),
                                                                              ),
                                                                            ]),
                                                                      ),
                                                                    ]),
                                                              ),
                                                            ]),
                                                      ),
                                                    ]),
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'action'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'socialContent'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'url'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name:
                                                NameNode(value: 'appDownload'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'playstore'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'appstore'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'appgallery'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'createdAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'updatedAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'operator'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'values'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'startDate'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'endDate'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'minValue'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'maxValue'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'value'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'values'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'zone'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'radius'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'type'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'paths'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'lat'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'lng'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'order'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'countries'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'id'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'name'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'code'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'dialCode'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'iconFlag'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'createdAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'updatedAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagSquare'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagWide'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'states'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'id'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'adminName'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'capital'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'population'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'ascii'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'lat'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'lng'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'country'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'id'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'name'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'code'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'dialCode'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'iconFlag'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'createdAt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'updatedAt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'flagSquare'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'flagWide'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'createdAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'updatedAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagSquare'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagWide'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'languages'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'id'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'name'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'code'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'iconFlag'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'createdAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'updatedAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagSquare'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagWide'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'reputations'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'id'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'rank'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'color'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'picture'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'perks'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'discount'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name:
                                                NameNode(value: 'description'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'lossAmount'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'nextLevelMax'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name:
                                            NameNode(value: 'inactivityCycle'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'levelInterval'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'min'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'max'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name:
                                            NameNode(value: 'reputationLevel'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'createdAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'updatedAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'createdAt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'updatedAt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                ]),
              ),
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class WalletByOwnerQuery
    extends GraphQLQuery<WalletByOwner$Query, WalletByOwnerArguments> {
  WalletByOwnerQuery({required this.variables});

  @override
  final DocumentNode document = WALLET_BY_OWNER_QUERY_DOCUMENT;

  @override
  final String operationName = WALLET_BY_OWNER_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  final WalletByOwnerArguments variables;

  @override
  List<Object?> get props => [document, operationName, variables];

  @override
  WalletByOwner$Query parse(Map<String, dynamic> json) =>
      WalletByOwner$Query.fromJson(json);
}

@JsonSerializable(explicitToJson: true)
class GetPointOfSalesWithWalletsForModuleArguments extends JsonSerializable
    with EquatableMixin {
  GetPointOfSalesWithWalletsForModuleArguments({
    required this.moduleName,
    this.pagination,
    this.searchString,
  });

  @override
  factory GetPointOfSalesWithWalletsForModuleArguments.fromJson(
          Map<String, dynamic> json) =>
      _$GetPointOfSalesWithWalletsForModuleArgumentsFromJson(json);

  late String moduleName;

  final PaginationInput? pagination;

  final String? searchString;

  @override
  List<Object?> get props => [moduleName, pagination, searchString];

  @override
  Map<String, dynamic> toJson() =>
      _$GetPointOfSalesWithWalletsForModuleArgumentsToJson(this);
}

final GET_POINT_OF_SALES_WITH_WALLETS_FOR_MODULE_QUERY_DOCUMENT_OPERATION_NAME =
    'getPointOfSalesWithWalletsForModule';
final GET_POINT_OF_SALES_WITH_WALLETS_FOR_MODULE_QUERY_DOCUMENT =
    DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'getPointOfSalesWithWalletsForModule'),
    variableDefinitions: [
      VariableDefinitionNode(
        variable: VariableNode(name: NameNode(value: 'moduleName')),
        type: NamedTypeNode(
          name: NameNode(value: 'String'),
          isNonNull: true,
        ),
        defaultValue: DefaultValueNode(value: null),
        directives: [],
      ),
      VariableDefinitionNode(
        variable: VariableNode(name: NameNode(value: 'pagination')),
        type: NamedTypeNode(
          name: NameNode(value: 'PaginationInput'),
          isNonNull: false,
        ),
        defaultValue: DefaultValueNode(value: null),
        directives: [],
      ),
      VariableDefinitionNode(
        variable: VariableNode(name: NameNode(value: 'searchString')),
        type: NamedTypeNode(
          name: NameNode(value: 'String'),
          isNonNull: false,
        ),
        defaultValue: DefaultValueNode(value: null),
        directives: [],
      ),
    ],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'getPointOfSalesWithWalletsForModule'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'moduleName'),
            value: VariableNode(name: NameNode(value: 'moduleName')),
          ),
          ArgumentNode(
            name: NameNode(value: 'pagination'),
            value: VariableNode(name: NameNode(value: 'pagination')),
          ),
          ArgumentNode(
            name: NameNode(value: 'searchString'),
            value: VariableNode(name: NameNode(value: 'searchString')),
          ),
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'count'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'isLast'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'objects'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'id'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'tags'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'title'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'email'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'phone'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'website'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'subtitle'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'currencies'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: SelectionSetNode(selections: [
                  FieldNode(
                    name: NameNode(value: 'currency'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'id'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'name'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'code'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'symbol'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'iconFlag'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'createdAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'updatedAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'flagSquare'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'baseUrl'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'path'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'width'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'height'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'y'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'flagWide'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'baseUrl'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'path'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'width'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'height'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'y'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'default'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                ]),
              ),
              FieldNode(
                name: NameNode(value: 'turnover'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'reference'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'published'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'createdAt'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'updatedAt'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'brandColor'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'isFollowed'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'description'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'contactEmails'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'averageCustomers'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'languages'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: SelectionSetNode(selections: [
                  FieldNode(
                    name: NameNode(value: 'id'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'name'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'code'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'iconFlag'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'createdAt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'updatedAt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'flagSquare'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'baseUrl'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'path'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'width'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'height'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'x'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'y'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'alt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'flagWide'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'baseUrl'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'path'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'width'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'height'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'x'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'y'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'alt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                ]),
              ),
              FieldNode(
                name: NameNode(value: 'picture'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: SelectionSetNode(selections: [
                  FieldNode(
                    name: NameNode(value: 'baseUrl'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'path'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'width'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'height'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'x'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'y'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'alt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                ]),
              ),
              FieldNode(
                name: NameNode(value: 'outsidePictures'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: SelectionSetNode(selections: [
                  FieldNode(
                    name: NameNode(value: 'baseUrl'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'path'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'width'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'height'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'x'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'y'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'alt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                ]),
              ),
              FieldNode(
                name: NameNode(value: 'insidePictures'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: SelectionSetNode(selections: [
                  FieldNode(
                    name: NameNode(value: 'baseUrl'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'path'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'width'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'height'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'x'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'y'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'alt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                ]),
              ),
              FieldNode(
                name: NameNode(value: 'openingHours'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: SelectionSetNode(selections: [
                  FieldNode(
                    name: NameNode(value: 'status'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'hours'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'day'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'from'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'to'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                ]),
              ),
              FieldNode(
                name: NameNode(value: 'specialOffers'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: SelectionSetNode(selections: [
                  FieldNode(
                    name: NameNode(value: 'offerType'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'hours'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'day'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'from'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'to'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                ]),
              ),
              FieldNode(
                name: NameNode(value: 'locations'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: SelectionSetNode(selections: [
                  FieldNode(
                    name: NameNode(value: 'city'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'address'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'postCode'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'addressLine'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'location'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'type'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'coordinates'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'country'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'id'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'name'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'code'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'dialCode'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'iconFlag'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'createdAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'updatedAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'flagSquare'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'baseUrl'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'path'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'width'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'height'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'y'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'flagWide'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'baseUrl'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'path'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'width'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'height'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'y'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'state'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'id'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'name'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'adminName'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'capital'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'population'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'ascii'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'lat'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'lng'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'country'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'code'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'dialCode'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'iconFlag'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagSquare'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagWide'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'createdAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'updatedAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'flagSquare'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'baseUrl'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'path'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'width'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'height'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'y'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'flagWide'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'baseUrl'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'path'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'width'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'height'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'y'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'owner'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'name'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'phone'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'number'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'countryCode'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                    ]),
                  ),
                ]),
              ),
              FieldNode(
                name: NameNode(value: 'chatContact'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: SelectionSetNode(selections: [
                  FieldNode(
                    name: NameNode(value: 'name'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'id'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'name'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'code'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'fontIcon'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'createdAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'updatedAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'images'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'style'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'images'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'svg'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'size48'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'size96'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'size144'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'size240'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'size480'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'png'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'size48'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'size96'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'size144'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'size240'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'size480'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'value'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                ]),
              ),
              FieldNode(
                name: NameNode(value: 'socialMedia'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: SelectionSetNode(selections: [
                  FieldNode(
                    name: NameNode(value: 'name'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'id'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'name'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'code'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'fontIcon'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'createdAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'updatedAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'images'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'style'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'images'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'svg'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'size48'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'size96'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'size144'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'size240'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'size480'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'png'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'size48'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'size96'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'size144'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'size240'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'size480'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'value'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                ]),
              ),
              FieldNode(
                name: NameNode(value: 'company'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: SelectionSetNode(selections: [
                  FieldNode(
                    name: NameNode(value: 'id'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'name'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'description'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'media'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'videos'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'deg360'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'baseUrl'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'path'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'width'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'height'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'y'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'pictures'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'baseUrl'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'path'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'width'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'height'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'y'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'address'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'city'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'address'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'postCode'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'addressLine'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'location'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'type'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'coordinates'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'country'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'code'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'dialCode'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'iconFlag'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagSquare'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagWide'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'state'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'adminName'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'capital'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'population'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'ascii'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'lat'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'lng'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'country'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'name'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'code'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'dialCode'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'iconFlag'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'createdAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'updatedAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagSquare'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'flagWide'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagSquare'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flagWide'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'owner'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'phone'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'number'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'countryCode'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'legal'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'vat'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'register'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'licence'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'banks'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'id'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'holder'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'type'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'address'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'city'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'address'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'postCode'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'addressLine'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'location'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'type'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'coordinates'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'country'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'id'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'name'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'code'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'dialCode'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'iconFlag'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'createdAt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'updatedAt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'flagSquare'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'flagWide'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'state'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'id'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'name'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'adminName'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'capital'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'population'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'ascii'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'lat'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'lng'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'country'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'id'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'name'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'code'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'dialCode'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'iconFlag'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'createdAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'updatedAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagSquare'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagWide'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'createdAt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'updatedAt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'flagSquare'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'flagWide'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'owner'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'name'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'phone'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'number'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'countryCode'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'account'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'iban'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'bank'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'code'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'bic'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'logo'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'svg'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'png'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'default'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'size16'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'size24'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'size32'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'size48'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'size64'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'size128'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'size256'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'size512'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'icon'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'externalId'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'createdAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'updatedAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'contact'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'website'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'email'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'phone'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'number'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'isValid'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'countryCode'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'validationNumber'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'logistic'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'tags'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'externalId'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'createdAt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'updatedAt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                ]),
              ),
              FieldNode(
                name: NameNode(value: 'posCategory'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: SelectionSetNode(selections: [
                  FieldNode(
                    name: NameNode(value: 'id'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'name'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'mapPicture'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'createdAt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'updatedAt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'picture'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'baseUrl'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'path'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'width'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'height'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'x'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'y'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'alt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                    ]),
                  ),
                ]),
              ),
              FieldNode(
                name: NameNode(value: 'services'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: SelectionSetNode(selections: [
                  FieldNode(
                    name: NameNode(value: 'id'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'index'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'name'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'createdAt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'updatedAt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                ]),
              ),
              FieldNode(
                name: NameNode(value: 'paymentMethods'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: SelectionSetNode(selections: [
                  FieldNode(
                    name: NameNode(value: 'id'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'name'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'code'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'paymentType'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'materialIcon'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'createdAt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'updatedAt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'images'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'png'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt2x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt_128'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt_256'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt_512'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'card_flat'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'card_flat2x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'card_flat_128'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'card_flat_256'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'card_flat_512'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'dark'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'dark2x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'dark_128'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'dark_256'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'dark_512'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flat'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flat2x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flat_128'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flat_256'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flat_512'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'light'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'light2x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'light_128'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'light_256'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'light_512'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'default'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'default2x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'default_128'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'default_256'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'default_512'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'svg'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'card_flat'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'dark'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'flat'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'light'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'default'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'baseUrl'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'path'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'width'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'height'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'x'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'y'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'alt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                        ]),
                      ),
                    ]),
                  ),
                ]),
              ),
              FieldNode(
                name: NameNode(value: 'loyaltyPrograms'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: SelectionSetNode(selections: [
                  FieldNode(
                    name: NameNode(value: 'to'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'from'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'loyaltyProgram'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'id'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'createdAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'updatedAt'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'programName'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'picture'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'baseUrl'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'path'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'width'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'height'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'x'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'y'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'alt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                      FieldNode(
                        name: NameNode(value: 'company'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'name'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'description'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'media'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'videos'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'deg360'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'pictures'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'address'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'city'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'address'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'postCode'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'addressLine'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'location'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'type'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'coordinates'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'country'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'id'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'name'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'code'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'dialCode'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'iconFlag'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'createdAt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'updatedAt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'flagSquare'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'flagWide'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'state'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'id'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'name'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'adminName'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'capital'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'population'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'ascii'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'lat'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'lng'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'country'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'id'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'name'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'code'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'dialCode'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'iconFlag'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'createdAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'updatedAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagSquare'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'flagWide'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'createdAt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'updatedAt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'flagSquare'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'flagWide'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'owner'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'name'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'phone'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'number'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'countryCode'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'legal'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'vat'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'register'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'licence'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'banks'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'holder'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'name'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'type'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'address'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'city'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'address'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'postCode'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'addressLine'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'location'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'type'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name:
                                                NameNode(value: 'coordinates'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'country'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'id'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'name'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'code'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'dialCode'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'iconFlag'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'createdAt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'updatedAt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'flagSquare'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'flagWide'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'state'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'id'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'name'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'adminName'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'capital'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'population'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'ascii'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'lat'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'lng'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'country'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'id'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'name'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'code'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'dialCode'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'iconFlag'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'createdAt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'updatedAt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'flagSquare'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'flagWide'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'createdAt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'updatedAt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'flagSquare'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'flagWide'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'owner'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'name'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'phone'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'number'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'countryCode'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'account'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'iban'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'bank'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'id'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'name'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'code'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'bic'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'logo'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'svg'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'png'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'default'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'size16'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'size24'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'size32'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'size48'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'size64'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'size128'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'size256'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'size512'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'icon'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'createdAt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'updatedAt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'externalId'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'createdAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'updatedAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'contact'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'website'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'email'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'phone'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'number'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'isValid'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'countryCode'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'validationNumber'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'logistic'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'tags'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'externalId'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                    ]),
                  ),
                ]),
              ),
              FieldNode(
                name: NameNode(value: 'wallet'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: SelectionSetNode(selections: [
                  FieldNode(
                    name: NameNode(value: 'id'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'pocket'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: SelectionSetNode(selections: [
                      FieldNode(
                        name: NameNode(value: 'amount'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'usage'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'pocketType'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: null,
                      ),
                      FieldNode(
                        name: NameNode(value: 'challenge'),
                        alias: null,
                        arguments: [],
                        directives: [],
                        selectionSet: SelectionSetNode(selections: [
                          FieldNode(
                            name: NameNode(value: 'id'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'title'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'description'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'media'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'videos'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'deg360'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'pictures'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'challengeType'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'title'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'description'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'rules'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'icon'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'media'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'videos'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'deg360'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'pictures'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'minStep'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'minCheckPoints'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'minGiftValue'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'claimReward'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'activityTypes'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'id'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'title'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'description'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'icon'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'theme'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'media'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'videos'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'deg360'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'pictures'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'baseUrl'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'path'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'width'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'height'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'x'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'y'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'alt'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'createdAt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'updatedAt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'predefined'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'enable'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'action'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'jockers'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'jocker'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'id'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'title'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'description'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'icon'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'cost'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'kind'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'media'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'videos'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'deg360'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'pictures'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'createdAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'updatedAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'cost'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'fees'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'enable'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'createdAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'updatedAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'creator'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'email'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'gender'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'lastName'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'username'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'firstName'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'phone'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'number'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'isValid'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'countryCode'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'validationNumber'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'picture'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'baseUrl'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'path'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'width'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'height'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'x'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'y'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'alt'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'startDate'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'endDate'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'status'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'winners'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'rank'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'reward'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'checkpoints'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'checkpoint'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'amount'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'maxAnswers'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'audience'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: SelectionSetNode(selections: [
                              FieldNode(
                                name: NameNode(value: 'id'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'icon'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'title'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'createdAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'updatedAt'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'description'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: null,
                              ),
                              FieldNode(
                                name: NameNode(value: 'media'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'videos'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'deg360'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'pictures'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'baseUrl'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'path'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'width'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'height'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'x'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'y'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'alt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                              FieldNode(
                                name: NameNode(value: 'segments'),
                                alias: null,
                                arguments: [],
                                directives: [],
                                selectionSet: SelectionSetNode(selections: [
                                  FieldNode(
                                    name: NameNode(value: 'rank'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: null,
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'criteria'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'id'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'icon'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'title'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'style'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'enable'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'description'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'createdAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'updatedAt'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'media'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'videos'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'deg360'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'pictures'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'baseUrl'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'path'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'width'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'height'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'x'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'y'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'alt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                        ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'fields'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'field'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'operators'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                  FieldNode(
                                    name: NameNode(value: 'filters'),
                                    alias: null,
                                    arguments: [],
                                    directives: [],
                                    selectionSet: SelectionSetNode(selections: [
                                      FieldNode(
                                        name: NameNode(value: 'field'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: SelectionSetNode(
                                            selections: [
                                              FieldNode(
                                                name: NameNode(value: 'value'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'action'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'id'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value:
                                                                'activityType'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet:
                                                            SelectionSetNode(
                                                                selections: [
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'id'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'title'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'description'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'icon'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'theme'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'media'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    SelectionSetNode(
                                                                        selections: [
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'videos'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'deg360'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            SelectionSetNode(
                                                                                selections: [
                                                                              FieldNode(
                                                                                name: NameNode(value: 'baseUrl'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'path'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'width'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'height'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'x'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'y'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'alt'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                            ]),
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'pictures'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            SelectionSetNode(
                                                                                selections: [
                                                                              FieldNode(
                                                                                name: NameNode(value: 'baseUrl'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'path'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'width'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'height'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'x'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'y'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'alt'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                            ]),
                                                                      ),
                                                                    ]),
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'createdAt'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'updatedAt'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'predefined'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    SelectionSetNode(
                                                                        selections: [
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'enable'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'action'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                    ]),
                                                              ),
                                                            ]),
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'required'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value:
                                                                'definition'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet:
                                                            SelectionSetNode(
                                                                selections: [
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'textBox'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    SelectionSetNode(
                                                                        selections: [
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'min'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'max'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                    ]),
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'rating'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    SelectionSetNode(
                                                                        selections: [
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'max'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'text'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                    ]),
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'calculated'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    SelectionSetNode(
                                                                        selections: [
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'output'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'show'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'formula'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'values'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            SelectionSetNode(
                                                                                selections: [
                                                                              FieldNode(
                                                                                name: NameNode(value: 'minValue'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'maxValue'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'score'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                            ]),
                                                                      ),
                                                                    ]),
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'date'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    SelectionSetNode(
                                                                        selections: [
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'outdated'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'interval'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                    ]),
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'contact'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    SelectionSetNode(
                                                                        selections: [
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'firstname'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'lastname'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'email'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'phone'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'description'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'address'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'birthday'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'gender'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'civility'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'profession'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'academicLevel'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'language'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                    ]),
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'number'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    SelectionSetNode(
                                                                        selections: [
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'minValue'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'maxValue'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'interval'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                    ]),
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'api'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    SelectionSetNode(
                                                                        selections: [
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'link'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'method'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'auth'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'secret'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'params'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            SelectionSetNode(
                                                                                selections: [
                                                                              FieldNode(
                                                                                name: NameNode(value: 'name'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'type'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                            ]),
                                                                      ),
                                                                    ]),
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'matrix'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    SelectionSetNode(
                                                                        selections: [
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'lines'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'columns'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                    ]),
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'toggle'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    SelectionSetNode(
                                                                        selections: [
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'leftLabel'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'rightLabel'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                    ]),
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'choices'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    SelectionSetNode(
                                                                        selections: [
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'maxResponses'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'personalised'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'unique'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'random'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'leaderboard'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'api'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'image'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'interaction'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'suggestions'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            SelectionSetNode(
                                                                                selections: [
                                                                              FieldNode(
                                                                                name: NameNode(value: 'id'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'order'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'title'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'choices'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'item'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'enable'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                ]),
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'mandatory'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'type'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'challengeStep'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'id'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  )
                                                                                ]),
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'points'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'score'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'createdAt'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'updatedAt'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                            ]),
                                                                      ),
                                                                    ]),
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'smiley'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    SelectionSetNode(
                                                                        selections: [
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'levels'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      )
                                                                    ]),
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'score'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    SelectionSetNode(
                                                                        selections: [
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'min'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      )
                                                                    ]),
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'lead'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    SelectionSetNode(
                                                                        selections: [
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'url'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'image'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                    ]),
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'verification'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    SelectionSetNode(
                                                                        selections: [
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'number'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            SelectionSetNode(
                                                                                selections: [
                                                                              FieldNode(
                                                                                name: NameNode(value: 'verification'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'rank'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  )
                                                                                ]),
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'verified'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'rank'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  )
                                                                                ]),
                                                                              ),
                                                                            ]),
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'email'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            SelectionSetNode(
                                                                                selections: [
                                                                              FieldNode(
                                                                                name: NameNode(value: 'verification'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'rank'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  )
                                                                                ]),
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'verified'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'rank'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  )
                                                                                ]),
                                                                              ),
                                                                            ]),
                                                                      ),
                                                                    ]),
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'video'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    SelectionSetNode(
                                                                        selections: [
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'minSeconds'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      )
                                                                    ]),
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'socialMedia'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    SelectionSetNode(
                                                                        selections: [
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'socialMedia'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            SelectionSetNode(
                                                                                selections: [
                                                                              FieldNode(
                                                                                name: NameNode(value: 'id'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'name'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'code'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'fontIcon'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'createdAt'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'updatedAt'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: null,
                                                                              ),
                                                                              FieldNode(
                                                                                name: NameNode(value: 'images'),
                                                                                alias: null,
                                                                                arguments: [],
                                                                                directives: [],
                                                                                selectionSet: SelectionSetNode(selections: [
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'style'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: null,
                                                                                  ),
                                                                                  FieldNode(
                                                                                    name: NameNode(value: 'images'),
                                                                                    alias: null,
                                                                                    arguments: [],
                                                                                    directives: [],
                                                                                    selectionSet: SelectionSetNode(selections: [
                                                                                      FieldNode(
                                                                                        name: NameNode(value: 'svg'),
                                                                                        alias: null,
                                                                                        arguments: [],
                                                                                        directives: [],
                                                                                        selectionSet: SelectionSetNode(selections: [
                                                                                          FieldNode(
                                                                                            name: NameNode(value: 'size48'),
                                                                                            alias: null,
                                                                                            arguments: [],
                                                                                            directives: [],
                                                                                            selectionSet: SelectionSetNode(selections: [
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'baseUrl'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'path'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'width'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'height'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'x'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'y'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'alt'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                            ]),
                                                                                          ),
                                                                                          FieldNode(
                                                                                            name: NameNode(value: 'size96'),
                                                                                            alias: null,
                                                                                            arguments: [],
                                                                                            directives: [],
                                                                                            selectionSet: SelectionSetNode(selections: [
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'baseUrl'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'path'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'width'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'height'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'x'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'y'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'alt'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                            ]),
                                                                                          ),
                                                                                          FieldNode(
                                                                                            name: NameNode(value: 'size144'),
                                                                                            alias: null,
                                                                                            arguments: [],
                                                                                            directives: [],
                                                                                            selectionSet: SelectionSetNode(selections: [
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'baseUrl'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'path'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'width'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'height'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'x'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'y'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'alt'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                            ]),
                                                                                          ),
                                                                                          FieldNode(
                                                                                            name: NameNode(value: 'size240'),
                                                                                            alias: null,
                                                                                            arguments: [],
                                                                                            directives: [],
                                                                                            selectionSet: SelectionSetNode(selections: [
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'baseUrl'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'path'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'width'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'height'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'x'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'y'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'alt'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                            ]),
                                                                                          ),
                                                                                          FieldNode(
                                                                                            name: NameNode(value: 'size480'),
                                                                                            alias: null,
                                                                                            arguments: [],
                                                                                            directives: [],
                                                                                            selectionSet: SelectionSetNode(selections: [
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'baseUrl'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'path'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'width'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'height'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'x'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'y'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'alt'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                            ]),
                                                                                          ),
                                                                                        ]),
                                                                                      ),
                                                                                      FieldNode(
                                                                                        name: NameNode(value: 'png'),
                                                                                        alias: null,
                                                                                        arguments: [],
                                                                                        directives: [],
                                                                                        selectionSet: SelectionSetNode(selections: [
                                                                                          FieldNode(
                                                                                            name: NameNode(value: 'size48'),
                                                                                            alias: null,
                                                                                            arguments: [],
                                                                                            directives: [],
                                                                                            selectionSet: SelectionSetNode(selections: [
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'baseUrl'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'path'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'width'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'height'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'x'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'y'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'alt'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                            ]),
                                                                                          ),
                                                                                          FieldNode(
                                                                                            name: NameNode(value: 'size96'),
                                                                                            alias: null,
                                                                                            arguments: [],
                                                                                            directives: [],
                                                                                            selectionSet: SelectionSetNode(selections: [
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'baseUrl'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'path'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'width'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'height'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'x'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'y'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'alt'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                            ]),
                                                                                          ),
                                                                                          FieldNode(
                                                                                            name: NameNode(value: 'size144'),
                                                                                            alias: null,
                                                                                            arguments: [],
                                                                                            directives: [],
                                                                                            selectionSet: SelectionSetNode(selections: [
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'baseUrl'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'path'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'width'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'height'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'x'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'y'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'alt'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                            ]),
                                                                                          ),
                                                                                          FieldNode(
                                                                                            name: NameNode(value: 'size240'),
                                                                                            alias: null,
                                                                                            arguments: [],
                                                                                            directives: [],
                                                                                            selectionSet: SelectionSetNode(selections: [
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'baseUrl'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'path'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'width'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'height'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'x'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'y'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'alt'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                            ]),
                                                                                          ),
                                                                                          FieldNode(
                                                                                            name: NameNode(value: 'size480'),
                                                                                            alias: null,
                                                                                            arguments: [],
                                                                                            directives: [],
                                                                                            selectionSet: SelectionSetNode(selections: [
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'baseUrl'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'path'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'width'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'height'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'x'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'y'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                              FieldNode(
                                                                                                name: NameNode(value: 'alt'),
                                                                                                alias: null,
                                                                                                arguments: [],
                                                                                                directives: [],
                                                                                                selectionSet: null,
                                                                                              ),
                                                                                            ]),
                                                                                          ),
                                                                                        ]),
                                                                                      ),
                                                                                    ]),
                                                                                  ),
                                                                                ]),
                                                                              ),
                                                                            ]),
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'action'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'socialContent'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'url'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                    ]),
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'appDownload'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    SelectionSetNode(
                                                                        selections: [
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'playstore'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'appstore'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                      FieldNode(
                                                                        name: NameNode(
                                                                            value:
                                                                                'appgallery'),
                                                                        alias:
                                                                            null,
                                                                        arguments: [],
                                                                        directives: [],
                                                                        selectionSet:
                                                                            null,
                                                                      ),
                                                                    ]),
                                                              ),
                                                            ]),
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'createdAt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'updatedAt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                            ]),
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'operator'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet: null,
                                      ),
                                      FieldNode(
                                        name: NameNode(value: 'values'),
                                        alias: null,
                                        arguments: [],
                                        directives: [],
                                        selectionSet:
                                            SelectionSetNode(selections: [
                                          FieldNode(
                                            name: NameNode(value: 'startDate'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'endDate'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'minValue'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'maxValue'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'value'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'values'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet: null,
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'zone'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'radius'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'type'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'paths'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'lat'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'lng'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'order'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'countries'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'id'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'name'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'code'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'dialCode'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'iconFlag'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'createdAt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'updatedAt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'flagSquare'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'flagWide'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'states'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'id'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'name'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'adminName'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'capital'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'population'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'ascii'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'lat'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'lng'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'country'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'id'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'name'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'code'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'dialCode'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'iconFlag'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'createdAt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'updatedAt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value:
                                                                'flagSquare'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet:
                                                            SelectionSetNode(
                                                                selections: [
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'baseUrl'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'path'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'width'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'height'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value: 'x'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value: 'y'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'alt'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                            ]),
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'flagWide'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet:
                                                            SelectionSetNode(
                                                                selections: [
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'baseUrl'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'path'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'width'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'height'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value: 'x'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value: 'y'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                              FieldNode(
                                                                name: NameNode(
                                                                    value:
                                                                        'alt'),
                                                                alias: null,
                                                                arguments: [],
                                                                directives: [],
                                                                selectionSet:
                                                                    null,
                                                              ),
                                                            ]),
                                                      ),
                                                    ]),
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'createdAt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'updatedAt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'flagSquare'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'flagWide'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name: NameNode(value: 'languages'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'id'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'name'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'code'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'iconFlag'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'createdAt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'updatedAt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'flagSquare'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'flagWide'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                            ]),
                                          ),
                                          FieldNode(
                                            name:
                                                NameNode(value: 'reputations'),
                                            alias: null,
                                            arguments: [],
                                            directives: [],
                                            selectionSet:
                                                SelectionSetNode(selections: [
                                              FieldNode(
                                                name: NameNode(value: 'id'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'rank'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'color'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name:
                                                    NameNode(value: 'picture'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'baseUrl'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'path'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'width'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'height'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'x'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'y'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'alt'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                              FieldNode(
                                                name: NameNode(value: 'perks'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'discount'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value:
                                                                'description'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'lossAmount'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'nextLevelMax'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'inactivityCycle'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'levelInterval'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: SelectionSetNode(
                                                    selections: [
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'min'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                      FieldNode(
                                                        name: NameNode(
                                                            value: 'max'),
                                                        alias: null,
                                                        arguments: [],
                                                        directives: [],
                                                        selectionSet: null,
                                                      ),
                                                    ]),
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'reputationLevel'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'createdAt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                              FieldNode(
                                                name: NameNode(
                                                    value: 'updatedAt'),
                                                alias: null,
                                                arguments: [],
                                                directives: [],
                                                selectionSet: null,
                                              ),
                                            ]),
                                          ),
                                        ]),
                                      ),
                                    ]),
                                  ),
                                ]),
                              ),
                            ]),
                          ),
                          FieldNode(
                            name: NameNode(value: 'createdAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                          FieldNode(
                            name: NameNode(value: 'updatedAt'),
                            alias: null,
                            arguments: [],
                            directives: [],
                            selectionSet: null,
                          ),
                        ]),
                      ),
                    ]),
                  ),
                  FieldNode(
                    name: NameNode(value: 'createdAt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                  FieldNode(
                    name: NameNode(value: 'updatedAt'),
                    alias: null,
                    arguments: [],
                    directives: [],
                    selectionSet: null,
                  ),
                ]),
              ),
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class GetPointOfSalesWithWalletsForModuleQuery extends GraphQLQuery<
    GetPointOfSalesWithWalletsForModule$Query,
    GetPointOfSalesWithWalletsForModuleArguments> {
  GetPointOfSalesWithWalletsForModuleQuery({required this.variables});

  @override
  final DocumentNode document =
      GET_POINT_OF_SALES_WITH_WALLETS_FOR_MODULE_QUERY_DOCUMENT;

  @override
  final String operationName =
      GET_POINT_OF_SALES_WITH_WALLETS_FOR_MODULE_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  final GetPointOfSalesWithWalletsForModuleArguments variables;

  @override
  List<Object?> get props => [document, operationName, variables];

  @override
  GetPointOfSalesWithWalletsForModule$Query parse(Map<String, dynamic> json) =>
      GetPointOfSalesWithWalletsForModule$Query.fromJson(json);
}
