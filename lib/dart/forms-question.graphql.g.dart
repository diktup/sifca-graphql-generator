// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'forms-question.graphql.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

GetQuestions$Query$QuestionDtoType$QuestionChoiceDtoType
    _$GetQuestions$Query$QuestionDtoType$QuestionChoiceDtoTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$QuestionChoiceDtoType()
          ..item = json['item'] as String
          ..enable = json['enable'] as bool?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$QuestionChoiceDtoTypeToJson(
        GetQuestions$Query$QuestionDtoType$QuestionChoiceDtoType instance) {
  final val = <String, dynamic>{
    'item': instance.item,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('enable', instance.enable);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType()
          ..currency = json['currency'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType
                  .fromJson(json['currency'] as Map<String, dynamic>)
          ..kw$default = json['default'] as bool?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('currency', instance.currency?.toJson());
  writeNotNull('default', instance.kw$default);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType()
          ..day = $enumDecodeNullable(_$DaysEnumMap, json['day'],
              unknownValue: Days.artemisUnknown)
          ..from = json['from'] as String?
          ..to = json['to'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('day', _$DaysEnumMap[instance.day]);
  writeNotNull('from', instance.from);
  writeNotNull('to', instance.to);
  return val;
}

const _$DaysEnumMap = {
  Days.monday: 'MONDAY',
  Days.tuesday: 'TUESDAY',
  Days.wednesday: 'WEDNESDAY',
  Days.thursday: 'THURSDAY',
  Days.friday: 'FRIDAY',
  Days.saturday: 'SATURDAY',
  Days.sunday: 'SUNDAY',
  Days.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType()
          ..status = $enumDecodeNullable(_$OpeningStatusEnumMap, json['status'],
              unknownValue: OpeningStatus.artemisUnknown)
          ..hours = (json['hours'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', _$OpeningStatusEnumMap[instance.status]);
  writeNotNull('hours', instance.hours?.map((e) => e.toJson()).toList());
  return val;
}

const _$OpeningStatusEnumMap = {
  OpeningStatus.alwaysOpen: 'ALWAYS_OPEN',
  OpeningStatus.notAvailable: 'NOT_AVAILABLE',
  OpeningStatus.selectedHours: 'SELECTED_HOURS',
  OpeningStatus.permanentlyClosed: 'PERMANENTLY_CLOSED',
  OpeningStatus.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType()
          ..day = $enumDecodeNullable(_$DaysEnumMap, json['day'],
              unknownValue: Days.artemisUnknown)
          ..from = json['from'] as String?
          ..to = json['to'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('day', _$DaysEnumMap[instance.day]);
  writeNotNull('from', instance.from);
  writeNotNull('to', instance.to);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType()
          ..offerType = $enumDecodeNullable(
              _$SpecialOffersTypeEnumMap, json['offerType'],
              unknownValue: SpecialOffersType.artemisUnknown)
          ..hours = (json['hours'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('offerType', _$SpecialOffersTypeEnumMap[instance.offerType]);
  writeNotNull('hours', instance.hours?.map((e) => e.toJson()).toList());
  return val;
}

const _$SpecialOffersTypeEnumMap = {
  SpecialOffersType.bar: 'BAR',
  SpecialOffersType.lunch: 'LUNCH',
  SpecialOffersType.brunch: 'BRUNCH',
  SpecialOffersType.dinner: 'DINNER',
  SpecialOffersType.breakfast: 'BREAKFAST',
  SpecialOffersType.happyHour: 'HAPPY_HOUR',
  SpecialOffersType.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

const _$ZoneTypesEnumEnumMap = {
  ZoneTypesEnum.point: 'POINT',
  ZoneTypesEnum.polygon: 'POLYGON',
  ZoneTypesEnum.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

const _$StateCapitalEnumEnumMap = {
  StateCapitalEnum.primary: 'PRIMARY',
  StateCapitalEnum.admin: 'ADMIN',
  StateCapitalEnum.minor: 'MINOR',
  StateCapitalEnum.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType()
          ..size48 = json['size48'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size96 = json['size96'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size96'] as Map<String, dynamic>)
          ..size144 = json['size144'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size144'] as Map<String, dynamic>)
          ..size240 = json['size240'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size240'] as Map<String, dynamic>)
          ..size480 = json['size480'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size480'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size96', instance.size96?.toJson());
  writeNotNull('size144', instance.size144?.toJson());
  writeNotNull('size240', instance.size240?.toJson());
  writeNotNull('size480', instance.size480?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType()
          ..svg = json['svg'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
                  .fromJson(json['png'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType()
          ..style = $enumDecode(_$SocialImageStyleEnumEnumMap, json['style'],
              unknownValue: SocialImageStyleEnum.artemisUnknown)
          ..images = (json['images'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType
            instance) {
  final val = <String, dynamic>{
    'style': _$SocialImageStyleEnumEnumMap[instance.style]!,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('images', instance.images?.map((e) => e.toJson()).toList());
  return val;
}

const _$SocialImageStyleEnumEnumMap = {
  SocialImageStyleEnum.bubble: 'BUBBLE',
  SocialImageStyleEnum.color: 'COLOR',
  SocialImageStyleEnum.sticker: 'STICKER',
  SocialImageStyleEnum.colorHandDrown: 'COLOR_HAND_DROWN',
  SocialImageStyleEnum.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..fontIcon = json['fontIcon'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..images = (json['images'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('fontIcon', instance.fontIcon);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('images', instance.images?.map((e) => e.toJson()).toList());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType()
          ..name = json['name'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType
                  .fromJson(json['name'] as Map<String, dynamic>)
          ..value = json['value'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name?.toJson());
  writeNotNull('value', instance.value);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

const _$BankDetailsHolderTypeEnumEnumMap = {
  BankDetailsHolderTypeEnum.private: 'PRIVATE',
  BankDetailsHolderTypeEnum.company: 'COMPANY',
  BankDetailsHolderTypeEnum.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..mapPicture = json['mapPicture'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..picture = json['picture'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('mapPicture', instance.mapPicture);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('picture', instance.picture?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesType()
          ..id = json['id'] as String?
          ..index = json['index'] as int?
          ..name = json['name'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('id', instance.id);
  writeNotNull('index', instance.index);
  writeNotNull('name', instance.name);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType()
          ..alt = json['alt'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt'] as Map<String, dynamic>)
          ..alt2x = json['alt2x'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt2x'] as Map<String, dynamic>)
          ..alt128 = json['alt_128'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt_128'] as Map<String, dynamic>)
          ..alt256 = json['alt_256'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt_256'] as Map<String, dynamic>)
          ..alt512 = json['alt_512'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt_512'] as Map<String, dynamic>)
          ..cardFlat = json['card_flat'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat'] as Map<String, dynamic>)
          ..cardFlat2x = json['card_flat2x'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat2x'] as Map<String, dynamic>)
          ..cardFlat128 = json['card_flat_128'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat_128'] as Map<String, dynamic>)
          ..cardFlat256 = json['card_flat_256'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat_256'] as Map<String, dynamic>)
          ..cardFlat512 = json['card_flat_512'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat_512'] as Map<String, dynamic>)
          ..dark = json['dark'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark'] as Map<String, dynamic>)
          ..dark2x = json['dark2x'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark2x'] as Map<String, dynamic>)
          ..dark128 = json['dark_128'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark_128'] as Map<String, dynamic>)
          ..dark256 = json['dark_256'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark_256'] as Map<String, dynamic>)
          ..dark512 = json['dark_512'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark_512'] as Map<String, dynamic>)
          ..flat = json['flat'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat'] as Map<String, dynamic>)
          ..flat2x = json['flat2x'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat2x'] as Map<String, dynamic>)
          ..flat128 = json['flat_128'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat_128'] as Map<String, dynamic>)
          ..flat256 = json['flat_256'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat_256'] as Map<String, dynamic>)
          ..flat512 = json['flat_512'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat_512'] as Map<String, dynamic>)
          ..light = json['light'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light'] as Map<String, dynamic>)
          ..light2x = json['light2x'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light2x'] as Map<String, dynamic>)
          ..light128 = json['light_128'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light_128'] as Map<String, dynamic>)
          ..light256 = json['light_256'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light_256'] as Map<String, dynamic>)
          ..light512 = json['light_512'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light_512'] as Map<String, dynamic>)
          ..kw$default = json['default'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..default2x = json['default2x'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default2x'] as Map<String, dynamic>)
          ..default128 = json['default_128'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default_128'] as Map<String, dynamic>)
          ..default256 = json['default_256'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default_256'] as Map<String, dynamic>)
          ..default512 = json['default_512'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default_512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('alt', instance.alt?.toJson());
  writeNotNull('alt2x', instance.alt2x?.toJson());
  writeNotNull('alt_128', instance.alt128?.toJson());
  writeNotNull('alt_256', instance.alt256?.toJson());
  writeNotNull('alt_512', instance.alt512?.toJson());
  writeNotNull('card_flat', instance.cardFlat?.toJson());
  writeNotNull('card_flat2x', instance.cardFlat2x?.toJson());
  writeNotNull('card_flat_128', instance.cardFlat128?.toJson());
  writeNotNull('card_flat_256', instance.cardFlat256?.toJson());
  writeNotNull('card_flat_512', instance.cardFlat512?.toJson());
  writeNotNull('dark', instance.dark?.toJson());
  writeNotNull('dark2x', instance.dark2x?.toJson());
  writeNotNull('dark_128', instance.dark128?.toJson());
  writeNotNull('dark_256', instance.dark256?.toJson());
  writeNotNull('dark_512', instance.dark512?.toJson());
  writeNotNull('flat', instance.flat?.toJson());
  writeNotNull('flat2x', instance.flat2x?.toJson());
  writeNotNull('flat_128', instance.flat128?.toJson());
  writeNotNull('flat_256', instance.flat256?.toJson());
  writeNotNull('flat_512', instance.flat512?.toJson());
  writeNotNull('light', instance.light?.toJson());
  writeNotNull('light2x', instance.light2x?.toJson());
  writeNotNull('light_128', instance.light128?.toJson());
  writeNotNull('light_256', instance.light256?.toJson());
  writeNotNull('light_512', instance.light512?.toJson());
  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('default2x', instance.default2x?.toJson());
  writeNotNull('default_128', instance.default128?.toJson());
  writeNotNull('default_256', instance.default256?.toJson());
  writeNotNull('default_512', instance.default512?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType()
          ..alt = json['alt'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['alt'] as Map<String, dynamic>)
          ..cardFlat = json['card_flat'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['card_flat'] as Map<String, dynamic>)
          ..dark = json['dark'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['dark'] as Map<String, dynamic>)
          ..flat = json['flat'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['flat'] as Map<String, dynamic>)
          ..light = json['light'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['light'] as Map<String, dynamic>)
          ..kw$default = json['default'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('alt', instance.alt?.toJson());
  writeNotNull('card_flat', instance.cardFlat?.toJson());
  writeNotNull('dark', instance.dark?.toJson());
  writeNotNull('flat', instance.flat?.toJson());
  writeNotNull('light', instance.light?.toJson());
  writeNotNull('default', instance.kw$default?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType()
          ..png = json['png'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..svg = json['svg'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType
                  .fromJson(json['svg'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('png', instance.png?.toJson());
  writeNotNull('svg', instance.svg?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..paymentType = $enumDecodeNullable(
              _$PaymentTypeEnumEnumMap, json['paymentType'],
              unknownValue: PaymentTypeEnum.artemisUnknown)
          ..materialIcon = json['materialIcon'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..images = json['images'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType
                  .fromJson(json['images'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('paymentType', _$PaymentTypeEnumEnumMap[instance.paymentType]);
  writeNotNull('materialIcon', instance.materialIcon);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('images', instance.images?.toJson());
  return val;
}

const _$PaymentTypeEnumEnumMap = {
  PaymentTypeEnum.creditCard: 'CREDIT_CARD',
  PaymentTypeEnum.payment: 'PAYMENT',
  PaymentTypeEnum.methods: 'METHODS',
  PaymentTypeEnum.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType()
          ..id = json['id'] as String
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..programName = json['programName'] as String?
          ..picture = json['picture'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..company = json['company'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'createdAt': instance.createdAt.toIso8601String(),
    'updatedAt': instance.updatedAt.toIso8601String(),
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('programName', instance.programName);
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('company', instance.company?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType()
          ..to = DateTime.parse(json['to'] as String)
          ..from = DateTime.parse(json['from'] as String)
          ..loyaltyProgram = json['loyaltyProgram'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType
                  .fromJson(json['loyaltyProgram'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType
            instance) {
  final val = <String, dynamic>{
    'to': instance.to.toIso8601String(),
    'from': instance.from.toIso8601String(),
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('loyaltyProgram', instance.loyaltyProgram?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType()
          ..id = json['id'] as String
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..name = json['name'] as String?
          ..title = json['title'] as String?
          ..email = (json['email'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..phone = (json['phone'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..website = json['website'] as String?
          ..subtitle = json['subtitle'] as String?
          ..currencies = (json['currencies'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..turnover = json['turnover'] as String?
          ..reference = json['reference'] as String?
          ..published = json['published'] as bool?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..brandColor = json['brandColor'] as String?
          ..isFollowed = json['isFollowed'] as bool?
          ..description = json['description'] as String?
          ..contactEmails = (json['contactEmails'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..averageCustomers = (json['averageCustomers'] as num?)?.toDouble()
          ..languages = (json['languages'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..picture = json['picture'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..outsidePictures = (json['outsidePictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..insidePictures = (json['insidePictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..openingHours = json['openingHours'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType
                  .fromJson(json['openingHours'] as Map<String, dynamic>)
          ..specialOffers = (json['specialOffers'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..locations = (json['locations'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..chatContact = (json['chatContact'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..socialMedia = (json['socialMedia'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..company = json['company'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>)
          ..posCategory = (json['posCategory'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..services = (json['services'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..paymentMethods = (json['paymentMethods'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..loyaltyPrograms = (json['loyaltyPrograms'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('tags', instance.tags);
  writeNotNull('name', instance.name);
  writeNotNull('title', instance.title);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone);
  writeNotNull('website', instance.website);
  writeNotNull('subtitle', instance.subtitle);
  writeNotNull(
      'currencies', instance.currencies?.map((e) => e.toJson()).toList());
  writeNotNull('turnover', instance.turnover);
  writeNotNull('reference', instance.reference);
  writeNotNull('published', instance.published);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('brandColor', instance.brandColor);
  writeNotNull('isFollowed', instance.isFollowed);
  writeNotNull('description', instance.description);
  writeNotNull('contactEmails', instance.contactEmails);
  writeNotNull('averageCustomers', instance.averageCustomers);
  writeNotNull(
      'languages', instance.languages?.map((e) => e.toJson()).toList());
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('outsidePictures',
      instance.outsidePictures?.map((e) => e.toJson()).toList());
  writeNotNull('insidePictures',
      instance.insidePictures?.map((e) => e.toJson()).toList());
  writeNotNull('openingHours', instance.openingHours?.toJson());
  writeNotNull(
      'specialOffers', instance.specialOffers?.map((e) => e.toJson()).toList());
  writeNotNull(
      'locations', instance.locations?.map((e) => e.toJson()).toList());
  writeNotNull(
      'chatContact', instance.chatContact?.map((e) => e.toJson()).toList());
  writeNotNull(
      'socialMedia', instance.socialMedia?.map((e) => e.toJson()).toList());
  writeNotNull('company', instance.company?.toJson());
  writeNotNull(
      'posCategory', instance.posCategory?.map((e) => e.toJson()).toList());
  writeNotNull('services', instance.services?.map((e) => e.toJson()).toList());
  writeNotNull('paymentMethods',
      instance.paymentMethods?.map((e) => e.toJson()).toList());
  writeNotNull('loyaltyPrograms',
      instance.loyaltyPrograms?.map((e) => e.toJson()).toList());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType()
          ..currency = json['currency'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType
                  .fromJson(json['currency'] as Map<String, dynamic>)
          ..kw$default = json['default'] as bool?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('currency', instance.currency?.toJson());
  writeNotNull('default', instance.kw$default);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..email = json['email'] as String?
          ..website = json['website'] as String?
          ..currencies = (json['currencies'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..phone = json['phone'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>)
          ..fax = json['fax'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType
                  .fromJson(json['fax'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..description = json['description'] as String?
          ..contactEmails = (json['contactEmails'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..address = json['address'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..company = json['company'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>)
          ..picture = json['picture'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('email', instance.email);
  writeNotNull('website', instance.website);
  writeNotNull(
      'currencies', instance.currencies?.map((e) => e.toJson()).toList());
  writeNotNull('phone', instance.phone?.toJson());
  writeNotNull('fax', instance.fax?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('description', instance.description);
  writeNotNull('contactEmails', instance.contactEmails);
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('company', instance.company?.toJson());
  writeNotNull('picture', instance.picture?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType()
          ..currency = json['currency'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType
                  .fromJson(json['currency'] as Map<String, dynamic>)
          ..kw$default = json['default'] as bool?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('currency', instance.currency?.toJson());
  writeNotNull('default', instance.kw$default);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType()
          ..id = json['id'] as String
          ..email = json['email'] as String?
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..website = json['website'] as String?
          ..contactEmails = (json['contactEmails'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..currencies = (json['currencies'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..picture = json['picture'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..company = json['company'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('email', instance.email);
  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('website', instance.website);
  writeNotNull('contactEmails', instance.contactEmails);
  writeNotNull(
      'currencies', instance.currencies?.map((e) => e.toJson()).toList());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('company', instance.company?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType()
          ..pos = json['pos'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType
                  .fromJson(json['pos'] as Map<String, dynamic>)
          ..wholesaler = json['wholesaler'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType
                  .fromJson(json['wholesaler'] as Map<String, dynamic>)
          ..manufacturer = json['manufacturer'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType
                  .fromJson(json['manufacturer'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoTypeToJson(
        GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('pos', instance.pos?.toJson());
  writeNotNull('wholesaler', instance.wholesaler?.toJson());
  writeNotNull('manufacturer', instance.manufacturer?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$FormDtoType
    _$GetQuestions$Query$QuestionDtoType$FormDtoTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$FormDtoType()
          ..id = json['id'] as String
          ..title = json['title'] as String
          ..type = $enumDecodeNullable(_$FormTypeEnumMap, json['type'],
              unknownValue: FormType.artemisUnknown)
          ..status = $enumDecodeNullable(_$FormStatusEnumMap, json['status'],
              unknownValue: FormStatus.artemisUnknown)
          ..description = json['description'] as String
          ..owner =
              GetQuestions$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType
                  .fromJson(json['owner'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic> _$GetQuestions$Query$QuestionDtoType$FormDtoTypeToJson(
    GetQuestions$Query$QuestionDtoType$FormDtoType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'title': instance.title,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$FormTypeEnumMap[instance.type]);
  writeNotNull('status', _$FormStatusEnumMap[instance.status]);
  val['description'] = instance.description;
  val['owner'] = instance.owner.toJson();
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

const _$FormTypeEnumMap = {
  FormType.guided: 'GUIDED',
  FormType.autonomous: 'AUTONOMOUS',
  FormType.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

const _$FormStatusEnumMap = {
  FormStatus.draft: 'DRAFT',
  FormStatus.checked: 'CHECKED',
  FormStatus.ongoing: 'ONGOING',
  FormStatus.finished: 'FINISHED',
  FormStatus.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

GetQuestions$Query$QuestionDtoType$ChallengeStepType$MediaType$PictureType
    _$GetQuestions$Query$QuestionDtoType$ChallengeStepType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$ChallengeStepType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$ChallengeStepType$MediaType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$ChallengeStepType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$ChallengeStepType$MediaType
    _$GetQuestions$Query$QuestionDtoType$ChallengeStepType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$ChallengeStepType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$ChallengeStepType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$ChallengeStepType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$ChallengeStepType$MediaTypeToJson(
        GetQuestions$Query$QuestionDtoType$ChallengeStepType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetQuestions$Query$QuestionDtoType$ChallengeStepType
    _$GetQuestions$Query$QuestionDtoType$ChallengeStepTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$ChallengeStepType()
          ..id = json['id'] as String
          ..title = json['title'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$ChallengeStepType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$ChallengeStepTypeToJson(
        GetQuestions$Query$QuestionDtoType$ChallengeStepType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextType
    _$GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextType()
          ..max = (json['max'] as num).toDouble()
          ..min = (json['min'] as num).toDouble();

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextTypeToJson(
            GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextType
                instance) =>
        <String, dynamic>{
          'max': instance.max,
          'min': instance.min,
        };

GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateType
    _$GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateType()
          ..outdated = json['outdated'] as bool
          ..interval = json['interval'] as bool;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateTypeToJson(
            GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateType
                instance) =>
        <String, dynamic>{
          'outdated': instance.outdated,
          'interval': instance.interval,
        };

GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberType
    _$GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberType()
          ..minValue = (json['minValue'] as num).toDouble()
          ..maxValue = (json['maxValue'] as num).toDouble()
          ..interval = json['interval'] as bool;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberTypeToJson(
            GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberType
                instance) =>
        <String, dynamic>{
          'minValue': instance.minValue,
          'maxValue': instance.maxValue,
          'interval': instance.interval,
        };

GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleType
    _$GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleType()
          ..leftLabel = json['leftLabel'] as String
          ..rightLabel = json['rightLabel'] as String;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleTypeToJson(
            GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleType
                instance) =>
        <String, dynamic>{
          'leftLabel': instance.leftLabel,
          'rightLabel': instance.rightLabel,
        };

GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureType
    _$GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureTypeToJson(
        GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType
    _$GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType()
          ..rank = (json['rank'] as num).toDouble()
          ..icon = json['icon'] as String?
          ..picture = json['picture'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjTypeToJson(
        GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType
            instance) {
  final val = <String, dynamic>{
    'rank': instance.rank,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('icon', instance.icon);
  writeNotNull('picture', instance.picture?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType
    _$GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType()
          ..levels = (json['levels'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyTypeToJson(
        GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('levels', instance.levels?.map((e) => e.toJson()).toList());
  return val;
}

GetQuestions$Query$QuestionDtoType$QuestionSettingsType
    _$GetQuestions$Query$QuestionDtoType$QuestionSettingsTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestions$Query$QuestionDtoType$QuestionSettingsType()
          ..text = json['text'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextType
                  .fromJson(json['text'] as Map<String, dynamic>)
          ..date = json['date'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateType
                  .fromJson(json['date'] as Map<String, dynamic>)
          ..number = json['number'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberType
                  .fromJson(json['number'] as Map<String, dynamic>)
          ..toggle = json['toggle'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleType
                  .fromJson(json['toggle'] as Map<String, dynamic>)
          ..smiley = json['smiley'] == null
              ? null
              : GetQuestions$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType
                  .fromJson(json['smiley'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestions$Query$QuestionDtoType$QuestionSettingsTypeToJson(
        GetQuestions$Query$QuestionDtoType$QuestionSettingsType instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('text', instance.text?.toJson());
  writeNotNull('date', instance.date?.toJson());
  writeNotNull('number', instance.number?.toJson());
  writeNotNull('toggle', instance.toggle?.toJson());
  writeNotNull('smiley', instance.smiley?.toJson());
  return val;
}

GetQuestions$Query$QuestionDtoType _$GetQuestions$Query$QuestionDtoTypeFromJson(
        Map<String, dynamic> json) =>
    GetQuestions$Query$QuestionDtoType()
      ..id = json['id'] as String
      ..order = json['order'] as int?
      ..title = json['title'] as String?
      ..description = json['description'] as String?
      ..choices = (json['choices'] as List<dynamic>)
          .map((e) =>
              GetQuestions$Query$QuestionDtoType$QuestionChoiceDtoType.fromJson(
                  e as Map<String, dynamic>))
          .toList()
      ..type = $enumDecodeNullable(_$QuestionTypeEnumEnumMap, json['type'],
          unknownValue: QuestionTypeEnum.artemisUnknown)
      ..form = json['form'] == null
          ? null
          : GetQuestions$Query$QuestionDtoType$FormDtoType.fromJson(
              json['form'] as Map<String, dynamic>)
      ..challengeStep = json['challengeStep'] == null
          ? null
          : GetQuestions$Query$QuestionDtoType$ChallengeStepType.fromJson(
              json['challengeStep'] as Map<String, dynamic>)
      ..settings = json['settings'] == null
          ? null
          : GetQuestions$Query$QuestionDtoType$QuestionSettingsType.fromJson(
              json['settings'] as Map<String, dynamic>)
      ..createdAt = DateTime.parse(json['createdAt'] as String)
      ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic> _$GetQuestions$Query$QuestionDtoTypeToJson(
    GetQuestions$Query$QuestionDtoType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('order', instance.order);
  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  val['choices'] = instance.choices.map((e) => e.toJson()).toList();
  writeNotNull('type', _$QuestionTypeEnumEnumMap[instance.type]);
  writeNotNull('form', instance.form?.toJson());
  writeNotNull('challengeStep', instance.challengeStep?.toJson());
  writeNotNull('settings', instance.settings?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

const _$QuestionTypeEnumEnumMap = {
  QuestionTypeEnum.shortAnswer: 'SHORT_ANSWER',
  QuestionTypeEnum.paragraph: 'PARAGRAPH',
  QuestionTypeEnum.multipleChoice: 'MULTIPLE_CHOICE',
  QuestionTypeEnum.singleChoice: 'SINGLE_CHOICE',
  QuestionTypeEnum.picture: 'PICTURE',
  QuestionTypeEnum.datetime: 'DATETIME',
  QuestionTypeEnum.number: 'NUMBER',
  QuestionTypeEnum.toggle: 'TOGGLE',
  QuestionTypeEnum.smiley: 'SMILEY',
  QuestionTypeEnum.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

GetQuestions$Query _$GetQuestions$QueryFromJson(Map<String, dynamic> json) =>
    GetQuestions$Query()
      ..getQuestions = (json['getQuestions'] as List<dynamic>)
          .map((e) => GetQuestions$Query$QuestionDtoType.fromJson(
              e as Map<String, dynamic>))
          .toList();

Map<String, dynamic> _$GetQuestions$QueryToJson(GetQuestions$Query instance) =>
    <String, dynamic>{
      'getQuestions': instance.getQuestions.map((e) => e.toJson()).toList(),
    };

Question$Query$QuestionDtoType$QuestionChoiceDtoType
    _$Question$Query$QuestionDtoType$QuestionChoiceDtoTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$QuestionChoiceDtoType()
          ..item = json['item'] as String
          ..enable = json['enable'] as bool?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$QuestionChoiceDtoTypeToJson(
        Question$Query$QuestionDtoType$QuestionChoiceDtoType instance) {
  final val = <String, dynamic>{
    'item': instance.item,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('enable', instance.enable);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType()
          ..currency = json['currency'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType
                  .fromJson(json['currency'] as Map<String, dynamic>)
          ..kw$default = json['default'] as bool?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('currency', instance.currency?.toJson());
  writeNotNull('default', instance.kw$default);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType()
          ..day = $enumDecodeNullable(_$DaysEnumMap, json['day'],
              unknownValue: Days.artemisUnknown)
          ..from = json['from'] as String?
          ..to = json['to'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('day', _$DaysEnumMap[instance.day]);
  writeNotNull('from', instance.from);
  writeNotNull('to', instance.to);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType()
          ..status = $enumDecodeNullable(_$OpeningStatusEnumMap, json['status'],
              unknownValue: OpeningStatus.artemisUnknown)
          ..hours = (json['hours'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', _$OpeningStatusEnumMap[instance.status]);
  writeNotNull('hours', instance.hours?.map((e) => e.toJson()).toList());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType()
          ..day = $enumDecodeNullable(_$DaysEnumMap, json['day'],
              unknownValue: Days.artemisUnknown)
          ..from = json['from'] as String?
          ..to = json['to'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('day', _$DaysEnumMap[instance.day]);
  writeNotNull('from', instance.from);
  writeNotNull('to', instance.to);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType()
          ..offerType = $enumDecodeNullable(
              _$SpecialOffersTypeEnumMap, json['offerType'],
              unknownValue: SpecialOffersType.artemisUnknown)
          ..hours = (json['hours'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('offerType', _$SpecialOffersTypeEnumMap[instance.offerType]);
  writeNotNull('hours', instance.hours?.map((e) => e.toJson()).toList());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType()
          ..size48 = json['size48'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size96 = json['size96'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size96'] as Map<String, dynamic>)
          ..size144 = json['size144'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size144'] as Map<String, dynamic>)
          ..size240 = json['size240'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size240'] as Map<String, dynamic>)
          ..size480 = json['size480'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size480'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size96', instance.size96?.toJson());
  writeNotNull('size144', instance.size144?.toJson());
  writeNotNull('size240', instance.size240?.toJson());
  writeNotNull('size480', instance.size480?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType()
          ..svg = json['svg'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
                  .fromJson(json['png'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType()
          ..style = $enumDecode(_$SocialImageStyleEnumEnumMap, json['style'],
              unknownValue: SocialImageStyleEnum.artemisUnknown)
          ..images = (json['images'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType
            instance) {
  final val = <String, dynamic>{
    'style': _$SocialImageStyleEnumEnumMap[instance.style]!,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('images', instance.images?.map((e) => e.toJson()).toList());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..fontIcon = json['fontIcon'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..images = (json['images'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('fontIcon', instance.fontIcon);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('images', instance.images?.map((e) => e.toJson()).toList());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType()
          ..name = json['name'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType
                  .fromJson(json['name'] as Map<String, dynamic>)
          ..value = json['value'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name?.toJson());
  writeNotNull('value', instance.value);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..mapPicture = json['mapPicture'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..picture = json['picture'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('mapPicture', instance.mapPicture);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('picture', instance.picture?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesType()
          ..id = json['id'] as String?
          ..index = json['index'] as int?
          ..name = json['name'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('id', instance.id);
  writeNotNull('index', instance.index);
  writeNotNull('name', instance.name);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType()
          ..alt = json['alt'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt'] as Map<String, dynamic>)
          ..alt2x = json['alt2x'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt2x'] as Map<String, dynamic>)
          ..alt128 = json['alt_128'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt_128'] as Map<String, dynamic>)
          ..alt256 = json['alt_256'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt_256'] as Map<String, dynamic>)
          ..alt512 = json['alt_512'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt_512'] as Map<String, dynamic>)
          ..cardFlat = json['card_flat'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat'] as Map<String, dynamic>)
          ..cardFlat2x = json['card_flat2x'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat2x'] as Map<String, dynamic>)
          ..cardFlat128 = json['card_flat_128'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat_128'] as Map<String, dynamic>)
          ..cardFlat256 = json['card_flat_256'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat_256'] as Map<String, dynamic>)
          ..cardFlat512 = json['card_flat_512'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat_512'] as Map<String, dynamic>)
          ..dark = json['dark'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark'] as Map<String, dynamic>)
          ..dark2x = json['dark2x'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark2x'] as Map<String, dynamic>)
          ..dark128 = json['dark_128'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark_128'] as Map<String, dynamic>)
          ..dark256 = json['dark_256'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark_256'] as Map<String, dynamic>)
          ..dark512 = json['dark_512'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark_512'] as Map<String, dynamic>)
          ..flat = json['flat'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat'] as Map<String, dynamic>)
          ..flat2x = json['flat2x'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat2x'] as Map<String, dynamic>)
          ..flat128 = json['flat_128'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat_128'] as Map<String, dynamic>)
          ..flat256 = json['flat_256'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat_256'] as Map<String, dynamic>)
          ..flat512 = json['flat_512'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat_512'] as Map<String, dynamic>)
          ..light = json['light'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light'] as Map<String, dynamic>)
          ..light2x = json['light2x'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light2x'] as Map<String, dynamic>)
          ..light128 = json['light_128'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light_128'] as Map<String, dynamic>)
          ..light256 = json['light_256'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light_256'] as Map<String, dynamic>)
          ..light512 = json['light_512'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light_512'] as Map<String, dynamic>)
          ..kw$default = json['default'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..default2x = json['default2x'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default2x'] as Map<String, dynamic>)
          ..default128 = json['default_128'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default_128'] as Map<String, dynamic>)
          ..default256 = json['default_256'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default_256'] as Map<String, dynamic>)
          ..default512 = json['default_512'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default_512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('alt', instance.alt?.toJson());
  writeNotNull('alt2x', instance.alt2x?.toJson());
  writeNotNull('alt_128', instance.alt128?.toJson());
  writeNotNull('alt_256', instance.alt256?.toJson());
  writeNotNull('alt_512', instance.alt512?.toJson());
  writeNotNull('card_flat', instance.cardFlat?.toJson());
  writeNotNull('card_flat2x', instance.cardFlat2x?.toJson());
  writeNotNull('card_flat_128', instance.cardFlat128?.toJson());
  writeNotNull('card_flat_256', instance.cardFlat256?.toJson());
  writeNotNull('card_flat_512', instance.cardFlat512?.toJson());
  writeNotNull('dark', instance.dark?.toJson());
  writeNotNull('dark2x', instance.dark2x?.toJson());
  writeNotNull('dark_128', instance.dark128?.toJson());
  writeNotNull('dark_256', instance.dark256?.toJson());
  writeNotNull('dark_512', instance.dark512?.toJson());
  writeNotNull('flat', instance.flat?.toJson());
  writeNotNull('flat2x', instance.flat2x?.toJson());
  writeNotNull('flat_128', instance.flat128?.toJson());
  writeNotNull('flat_256', instance.flat256?.toJson());
  writeNotNull('flat_512', instance.flat512?.toJson());
  writeNotNull('light', instance.light?.toJson());
  writeNotNull('light2x', instance.light2x?.toJson());
  writeNotNull('light_128', instance.light128?.toJson());
  writeNotNull('light_256', instance.light256?.toJson());
  writeNotNull('light_512', instance.light512?.toJson());
  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('default2x', instance.default2x?.toJson());
  writeNotNull('default_128', instance.default128?.toJson());
  writeNotNull('default_256', instance.default256?.toJson());
  writeNotNull('default_512', instance.default512?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType()
          ..alt = json['alt'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['alt'] as Map<String, dynamic>)
          ..cardFlat = json['card_flat'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['card_flat'] as Map<String, dynamic>)
          ..dark = json['dark'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['dark'] as Map<String, dynamic>)
          ..flat = json['flat'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['flat'] as Map<String, dynamic>)
          ..light = json['light'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['light'] as Map<String, dynamic>)
          ..kw$default = json['default'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('alt', instance.alt?.toJson());
  writeNotNull('card_flat', instance.cardFlat?.toJson());
  writeNotNull('dark', instance.dark?.toJson());
  writeNotNull('flat', instance.flat?.toJson());
  writeNotNull('light', instance.light?.toJson());
  writeNotNull('default', instance.kw$default?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType()
          ..png = json['png'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..svg = json['svg'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType
                  .fromJson(json['svg'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('png', instance.png?.toJson());
  writeNotNull('svg', instance.svg?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..paymentType = $enumDecodeNullable(
              _$PaymentTypeEnumEnumMap, json['paymentType'],
              unknownValue: PaymentTypeEnum.artemisUnknown)
          ..materialIcon = json['materialIcon'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..images = json['images'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType
                  .fromJson(json['images'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('paymentType', _$PaymentTypeEnumEnumMap[instance.paymentType]);
  writeNotNull('materialIcon', instance.materialIcon);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('images', instance.images?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType()
          ..id = json['id'] as String
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..programName = json['programName'] as String?
          ..picture = json['picture'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..company = json['company'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'createdAt': instance.createdAt.toIso8601String(),
    'updatedAt': instance.updatedAt.toIso8601String(),
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('programName', instance.programName);
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('company', instance.company?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType()
          ..to = DateTime.parse(json['to'] as String)
          ..from = DateTime.parse(json['from'] as String)
          ..loyaltyProgram = json['loyaltyProgram'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType
                  .fromJson(json['loyaltyProgram'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType
            instance) {
  final val = <String, dynamic>{
    'to': instance.to.toIso8601String(),
    'from': instance.from.toIso8601String(),
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('loyaltyProgram', instance.loyaltyProgram?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType()
          ..id = json['id'] as String
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..name = json['name'] as String?
          ..title = json['title'] as String?
          ..email = (json['email'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..phone = (json['phone'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..website = json['website'] as String?
          ..subtitle = json['subtitle'] as String?
          ..currencies = (json['currencies'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..turnover = json['turnover'] as String?
          ..reference = json['reference'] as String?
          ..published = json['published'] as bool?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..brandColor = json['brandColor'] as String?
          ..isFollowed = json['isFollowed'] as bool?
          ..description = json['description'] as String?
          ..contactEmails = (json['contactEmails'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..averageCustomers = (json['averageCustomers'] as num?)?.toDouble()
          ..languages = (json['languages'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..picture = json['picture'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..outsidePictures = (json['outsidePictures'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..insidePictures = (json['insidePictures'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..openingHours = json['openingHours'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType
                  .fromJson(json['openingHours'] as Map<String, dynamic>)
          ..specialOffers = (json['specialOffers'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..locations = (json['locations'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..chatContact = (json['chatContact'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..socialMedia = (json['socialMedia'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..company = json['company'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>)
          ..posCategory = (json['posCategory'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..services = (json['services'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..paymentMethods = (json['paymentMethods'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..loyaltyPrograms = (json['loyaltyPrograms'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('tags', instance.tags);
  writeNotNull('name', instance.name);
  writeNotNull('title', instance.title);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone);
  writeNotNull('website', instance.website);
  writeNotNull('subtitle', instance.subtitle);
  writeNotNull(
      'currencies', instance.currencies?.map((e) => e.toJson()).toList());
  writeNotNull('turnover', instance.turnover);
  writeNotNull('reference', instance.reference);
  writeNotNull('published', instance.published);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('brandColor', instance.brandColor);
  writeNotNull('isFollowed', instance.isFollowed);
  writeNotNull('description', instance.description);
  writeNotNull('contactEmails', instance.contactEmails);
  writeNotNull('averageCustomers', instance.averageCustomers);
  writeNotNull(
      'languages', instance.languages?.map((e) => e.toJson()).toList());
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('outsidePictures',
      instance.outsidePictures?.map((e) => e.toJson()).toList());
  writeNotNull('insidePictures',
      instance.insidePictures?.map((e) => e.toJson()).toList());
  writeNotNull('openingHours', instance.openingHours?.toJson());
  writeNotNull(
      'specialOffers', instance.specialOffers?.map((e) => e.toJson()).toList());
  writeNotNull(
      'locations', instance.locations?.map((e) => e.toJson()).toList());
  writeNotNull(
      'chatContact', instance.chatContact?.map((e) => e.toJson()).toList());
  writeNotNull(
      'socialMedia', instance.socialMedia?.map((e) => e.toJson()).toList());
  writeNotNull('company', instance.company?.toJson());
  writeNotNull(
      'posCategory', instance.posCategory?.map((e) => e.toJson()).toList());
  writeNotNull('services', instance.services?.map((e) => e.toJson()).toList());
  writeNotNull('paymentMethods',
      instance.paymentMethods?.map((e) => e.toJson()).toList());
  writeNotNull('loyaltyPrograms',
      instance.loyaltyPrograms?.map((e) => e.toJson()).toList());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType()
          ..currency = json['currency'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType
                  .fromJson(json['currency'] as Map<String, dynamic>)
          ..kw$default = json['default'] as bool?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('currency', instance.currency?.toJson());
  writeNotNull('default', instance.kw$default);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..email = json['email'] as String?
          ..website = json['website'] as String?
          ..currencies = (json['currencies'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..phone = json['phone'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>)
          ..fax = json['fax'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType
                  .fromJson(json['fax'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..description = json['description'] as String?
          ..contactEmails = (json['contactEmails'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..address = json['address'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..company = json['company'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>)
          ..picture = json['picture'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('email', instance.email);
  writeNotNull('website', instance.website);
  writeNotNull(
      'currencies', instance.currencies?.map((e) => e.toJson()).toList());
  writeNotNull('phone', instance.phone?.toJson());
  writeNotNull('fax', instance.fax?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('description', instance.description);
  writeNotNull('contactEmails', instance.contactEmails);
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('company', instance.company?.toJson());
  writeNotNull('picture', instance.picture?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType()
          ..currency = json['currency'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType
                  .fromJson(json['currency'] as Map<String, dynamic>)
          ..kw$default = json['default'] as bool?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('currency', instance.currency?.toJson());
  writeNotNull('default', instance.kw$default);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType()
          ..id = json['id'] as String
          ..email = json['email'] as String?
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..website = json['website'] as String?
          ..contactEmails = (json['contactEmails'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..currencies = (json['currencies'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..picture = json['picture'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..company = json['company'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('email', instance.email);
  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('website', instance.website);
  writeNotNull('contactEmails', instance.contactEmails);
  writeNotNull(
      'currencies', instance.currencies?.map((e) => e.toJson()).toList());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('company', instance.company?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType()
          ..pos = json['pos'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType
                  .fromJson(json['pos'] as Map<String, dynamic>)
          ..wholesaler = json['wholesaler'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType
                  .fromJson(json['wholesaler'] as Map<String, dynamic>)
          ..manufacturer = json['manufacturer'] == null
              ? null
              : Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType
                  .fromJson(json['manufacturer'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoTypeToJson(
        Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('pos', instance.pos?.toJson());
  writeNotNull('wholesaler', instance.wholesaler?.toJson());
  writeNotNull('manufacturer', instance.manufacturer?.toJson());
  return val;
}

Question$Query$QuestionDtoType$FormDtoType
    _$Question$Query$QuestionDtoType$FormDtoTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$FormDtoType()
          ..id = json['id'] as String
          ..title = json['title'] as String
          ..type = $enumDecodeNullable(_$FormTypeEnumMap, json['type'],
              unknownValue: FormType.artemisUnknown)
          ..status = $enumDecodeNullable(_$FormStatusEnumMap, json['status'],
              unknownValue: FormStatus.artemisUnknown)
          ..description = json['description'] as String
          ..owner = Question$Query$QuestionDtoType$FormDtoType$FormOwnerDtoType
              .fromJson(json['owner'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic> _$Question$Query$QuestionDtoType$FormDtoTypeToJson(
    Question$Query$QuestionDtoType$FormDtoType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'title': instance.title,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$FormTypeEnumMap[instance.type]);
  writeNotNull('status', _$FormStatusEnumMap[instance.status]);
  val['description'] = instance.description;
  val['owner'] = instance.owner.toJson();
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

Question$Query$QuestionDtoType$ChallengeStepType$MediaType$PictureType
    _$Question$Query$QuestionDtoType$ChallengeStepType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$ChallengeStepType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$ChallengeStepType$MediaType$PictureTypeToJson(
        Question$Query$QuestionDtoType$ChallengeStepType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$ChallengeStepType$MediaType
    _$Question$Query$QuestionDtoType$ChallengeStepType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$ChallengeStepType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$ChallengeStepType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$ChallengeStepType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$ChallengeStepType$MediaTypeToJson(
        Question$Query$QuestionDtoType$ChallengeStepType$MediaType instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

Question$Query$QuestionDtoType$ChallengeStepType
    _$Question$Query$QuestionDtoType$ChallengeStepTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$ChallengeStepType()
          ..id = json['id'] as String
          ..title = json['title'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : Question$Query$QuestionDtoType$ChallengeStepType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>);

Map<String, dynamic> _$Question$Query$QuestionDtoType$ChallengeStepTypeToJson(
    Question$Query$QuestionDtoType$ChallengeStepType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  return val;
}

Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextType
    _$Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextType()
          ..max = (json['max'] as num).toDouble()
          ..min = (json['min'] as num).toDouble();

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextTypeToJson(
            Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextType
                instance) =>
        <String, dynamic>{
          'max': instance.max,
          'min': instance.min,
        };

Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateType
    _$Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateType()
          ..outdated = json['outdated'] as bool
          ..interval = json['interval'] as bool;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateTypeToJson(
            Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateType
                instance) =>
        <String, dynamic>{
          'outdated': instance.outdated,
          'interval': instance.interval,
        };

Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberType
    _$Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberType()
          ..minValue = (json['minValue'] as num).toDouble()
          ..maxValue = (json['maxValue'] as num).toDouble()
          ..interval = json['interval'] as bool;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberTypeToJson(
            Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberType
                instance) =>
        <String, dynamic>{
          'minValue': instance.minValue,
          'maxValue': instance.maxValue,
          'interval': instance.interval,
        };

Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleType
    _$Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleType()
          ..leftLabel = json['leftLabel'] as String
          ..rightLabel = json['rightLabel'] as String;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleTypeToJson(
            Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleType
                instance) =>
        <String, dynamic>{
          'leftLabel': instance.leftLabel,
          'rightLabel': instance.rightLabel,
        };

Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureType
    _$Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureTypeToJson(
        Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType
    _$Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType()
          ..rank = (json['rank'] as num).toDouble()
          ..icon = json['icon'] as String?
          ..picture = json['picture'] == null
              ? null
              : Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjTypeToJson(
        Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType
            instance) {
  final val = <String, dynamic>{
    'rank': instance.rank,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('icon', instance.icon);
  writeNotNull('picture', instance.picture?.toJson());
  return val;
}

Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType
    _$Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType()
          ..levels = (json['levels'] as List<dynamic>?)
              ?.map((e) =>
                  Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyTypeToJson(
        Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('levels', instance.levels?.map((e) => e.toJson()).toList());
  return val;
}

Question$Query$QuestionDtoType$QuestionSettingsType
    _$Question$Query$QuestionDtoType$QuestionSettingsTypeFromJson(
            Map<String, dynamic> json) =>
        Question$Query$QuestionDtoType$QuestionSettingsType()
          ..text = json['text'] == null
              ? null
              : Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextType
                  .fromJson(json['text'] as Map<String, dynamic>)
          ..date = json['date'] == null
              ? null
              : Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateType
                  .fromJson(json['date'] as Map<String, dynamic>)
          ..number = json['number'] == null
              ? null
              : Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberType
                  .fromJson(json['number'] as Map<String, dynamic>)
          ..toggle = json['toggle'] == null
              ? null
              : Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleType
                  .fromJson(json['toggle'] as Map<String, dynamic>)
          ..smiley = json['smiley'] == null
              ? null
              : Question$Query$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType
                  .fromJson(json['smiley'] as Map<String, dynamic>);

Map<String, dynamic>
    _$Question$Query$QuestionDtoType$QuestionSettingsTypeToJson(
        Question$Query$QuestionDtoType$QuestionSettingsType instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('text', instance.text?.toJson());
  writeNotNull('date', instance.date?.toJson());
  writeNotNull('number', instance.number?.toJson());
  writeNotNull('toggle', instance.toggle?.toJson());
  writeNotNull('smiley', instance.smiley?.toJson());
  return val;
}

Question$Query$QuestionDtoType _$Question$Query$QuestionDtoTypeFromJson(
        Map<String, dynamic> json) =>
    Question$Query$QuestionDtoType()
      ..id = json['id'] as String
      ..order = json['order'] as int?
      ..title = json['title'] as String?
      ..description = json['description'] as String?
      ..choices = (json['choices'] as List<dynamic>)
          .map((e) =>
              Question$Query$QuestionDtoType$QuestionChoiceDtoType.fromJson(
                  e as Map<String, dynamic>))
          .toList()
      ..type = $enumDecodeNullable(_$QuestionTypeEnumEnumMap, json['type'],
          unknownValue: QuestionTypeEnum.artemisUnknown)
      ..form = json['form'] == null
          ? null
          : Question$Query$QuestionDtoType$FormDtoType.fromJson(
              json['form'] as Map<String, dynamic>)
      ..challengeStep = json['challengeStep'] == null
          ? null
          : Question$Query$QuestionDtoType$ChallengeStepType.fromJson(
              json['challengeStep'] as Map<String, dynamic>)
      ..settings = json['settings'] == null
          ? null
          : Question$Query$QuestionDtoType$QuestionSettingsType.fromJson(
              json['settings'] as Map<String, dynamic>)
      ..createdAt = DateTime.parse(json['createdAt'] as String)
      ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic> _$Question$Query$QuestionDtoTypeToJson(
    Question$Query$QuestionDtoType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('order', instance.order);
  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  val['choices'] = instance.choices.map((e) => e.toJson()).toList();
  writeNotNull('type', _$QuestionTypeEnumEnumMap[instance.type]);
  writeNotNull('form', instance.form?.toJson());
  writeNotNull('challengeStep', instance.challengeStep?.toJson());
  writeNotNull('settings', instance.settings?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

Question$Query _$Question$QueryFromJson(Map<String, dynamic> json) =>
    Question$Query()
      ..question = Question$Query$QuestionDtoType.fromJson(
          json['question'] as Map<String, dynamic>);

Map<String, dynamic> _$Question$QueryToJson(Question$Query instance) =>
    <String, dynamic>{
      'question': instance.question.toJson(),
    };

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionChoiceDtoType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionChoiceDtoTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionChoiceDtoType()
          ..item = json['item'] as String
          ..enable = json['enable'] as bool?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionChoiceDtoTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionChoiceDtoType
            instance) {
  final val = <String, dynamic>{
    'item': instance.item,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('enable', instance.enable);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType()
          ..currency = json['currency'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType
                  .fromJson(json['currency'] as Map<String, dynamic>)
          ..kw$default = json['default'] as bool?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('currency', instance.currency?.toJson());
  writeNotNull('default', instance.kw$default);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType()
          ..day = $enumDecodeNullable(_$DaysEnumMap, json['day'],
              unknownValue: Days.artemisUnknown)
          ..from = json['from'] as String?
          ..to = json['to'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('day', _$DaysEnumMap[instance.day]);
  writeNotNull('from', instance.from);
  writeNotNull('to', instance.to);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType()
          ..status = $enumDecodeNullable(_$OpeningStatusEnumMap, json['status'],
              unknownValue: OpeningStatus.artemisUnknown)
          ..hours = (json['hours'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', _$OpeningStatusEnumMap[instance.status]);
  writeNotNull('hours', instance.hours?.map((e) => e.toJson()).toList());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType()
          ..day = $enumDecodeNullable(_$DaysEnumMap, json['day'],
              unknownValue: Days.artemisUnknown)
          ..from = json['from'] as String?
          ..to = json['to'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('day', _$DaysEnumMap[instance.day]);
  writeNotNull('from', instance.from);
  writeNotNull('to', instance.to);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType()
          ..offerType = $enumDecodeNullable(
              _$SpecialOffersTypeEnumMap, json['offerType'],
              unknownValue: SpecialOffersType.artemisUnknown)
          ..hours = (json['hours'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('offerType', _$SpecialOffersTypeEnumMap[instance.offerType]);
  writeNotNull('hours', instance.hours?.map((e) => e.toJson()).toList());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType()
          ..size48 = json['size48'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size96 = json['size96'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size96'] as Map<String, dynamic>)
          ..size144 = json['size144'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size144'] as Map<String, dynamic>)
          ..size240 = json['size240'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size240'] as Map<String, dynamic>)
          ..size480 = json['size480'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size480'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size96', instance.size96?.toJson());
  writeNotNull('size144', instance.size144?.toJson());
  writeNotNull('size240', instance.size240?.toJson());
  writeNotNull('size480', instance.size480?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType()
          ..svg = json['svg'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
                  .fromJson(json['png'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType()
          ..style = $enumDecode(_$SocialImageStyleEnumEnumMap, json['style'],
              unknownValue: SocialImageStyleEnum.artemisUnknown)
          ..images = (json['images'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType
            instance) {
  final val = <String, dynamic>{
    'style': _$SocialImageStyleEnumEnumMap[instance.style]!,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('images', instance.images?.map((e) => e.toJson()).toList());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..fontIcon = json['fontIcon'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..images = (json['images'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('fontIcon', instance.fontIcon);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('images', instance.images?.map((e) => e.toJson()).toList());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType()
          ..name = json['name'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType
                  .fromJson(json['name'] as Map<String, dynamic>)
          ..value = json['value'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name?.toJson());
  writeNotNull('value', instance.value);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..mapPicture = json['mapPicture'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..picture = json['picture'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('mapPicture', instance.mapPicture);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('picture', instance.picture?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesType()
          ..id = json['id'] as String?
          ..index = json['index'] as int?
          ..name = json['name'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('id', instance.id);
  writeNotNull('index', instance.index);
  writeNotNull('name', instance.name);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType()
          ..alt = json['alt'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt'] as Map<String, dynamic>)
          ..alt2x = json['alt2x'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt2x'] as Map<String, dynamic>)
          ..alt128 = json['alt_128'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt_128'] as Map<String, dynamic>)
          ..alt256 = json['alt_256'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt_256'] as Map<String, dynamic>)
          ..alt512 = json['alt_512'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt_512'] as Map<String, dynamic>)
          ..cardFlat = json['card_flat'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat'] as Map<String, dynamic>)
          ..cardFlat2x = json['card_flat2x'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat2x'] as Map<String, dynamic>)
          ..cardFlat128 = json['card_flat_128'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat_128'] as Map<String, dynamic>)
          ..cardFlat256 = json['card_flat_256'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat_256'] as Map<String, dynamic>)
          ..cardFlat512 = json['card_flat_512'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat_512'] as Map<String, dynamic>)
          ..dark = json['dark'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark'] as Map<String, dynamic>)
          ..dark2x = json['dark2x'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark2x'] as Map<String, dynamic>)
          ..dark128 = json['dark_128'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark_128'] as Map<String, dynamic>)
          ..dark256 = json['dark_256'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark_256'] as Map<String, dynamic>)
          ..dark512 = json['dark_512'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark_512'] as Map<String, dynamic>)
          ..flat = json['flat'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat'] as Map<String, dynamic>)
          ..flat2x = json['flat2x'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat2x'] as Map<String, dynamic>)
          ..flat128 = json['flat_128'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat_128'] as Map<String, dynamic>)
          ..flat256 = json['flat_256'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat_256'] as Map<String, dynamic>)
          ..flat512 = json['flat_512'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat_512'] as Map<String, dynamic>)
          ..light = json['light'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light'] as Map<String, dynamic>)
          ..light2x = json['light2x'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light2x'] as Map<String, dynamic>)
          ..light128 = json['light_128'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light_128'] as Map<String, dynamic>)
          ..light256 = json['light_256'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light_256'] as Map<String, dynamic>)
          ..light512 = json['light_512'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light_512'] as Map<String, dynamic>)
          ..kw$default = json['default'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..default2x = json['default2x'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default2x'] as Map<String, dynamic>)
          ..default128 = json['default_128'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default_128'] as Map<String, dynamic>)
          ..default256 = json['default_256'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default_256'] as Map<String, dynamic>)
          ..default512 = json['default_512'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default_512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('alt', instance.alt?.toJson());
  writeNotNull('alt2x', instance.alt2x?.toJson());
  writeNotNull('alt_128', instance.alt128?.toJson());
  writeNotNull('alt_256', instance.alt256?.toJson());
  writeNotNull('alt_512', instance.alt512?.toJson());
  writeNotNull('card_flat', instance.cardFlat?.toJson());
  writeNotNull('card_flat2x', instance.cardFlat2x?.toJson());
  writeNotNull('card_flat_128', instance.cardFlat128?.toJson());
  writeNotNull('card_flat_256', instance.cardFlat256?.toJson());
  writeNotNull('card_flat_512', instance.cardFlat512?.toJson());
  writeNotNull('dark', instance.dark?.toJson());
  writeNotNull('dark2x', instance.dark2x?.toJson());
  writeNotNull('dark_128', instance.dark128?.toJson());
  writeNotNull('dark_256', instance.dark256?.toJson());
  writeNotNull('dark_512', instance.dark512?.toJson());
  writeNotNull('flat', instance.flat?.toJson());
  writeNotNull('flat2x', instance.flat2x?.toJson());
  writeNotNull('flat_128', instance.flat128?.toJson());
  writeNotNull('flat_256', instance.flat256?.toJson());
  writeNotNull('flat_512', instance.flat512?.toJson());
  writeNotNull('light', instance.light?.toJson());
  writeNotNull('light2x', instance.light2x?.toJson());
  writeNotNull('light_128', instance.light128?.toJson());
  writeNotNull('light_256', instance.light256?.toJson());
  writeNotNull('light_512', instance.light512?.toJson());
  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('default2x', instance.default2x?.toJson());
  writeNotNull('default_128', instance.default128?.toJson());
  writeNotNull('default_256', instance.default256?.toJson());
  writeNotNull('default_512', instance.default512?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType()
          ..alt = json['alt'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['alt'] as Map<String, dynamic>)
          ..cardFlat = json['card_flat'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['card_flat'] as Map<String, dynamic>)
          ..dark = json['dark'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['dark'] as Map<String, dynamic>)
          ..flat = json['flat'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['flat'] as Map<String, dynamic>)
          ..light = json['light'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['light'] as Map<String, dynamic>)
          ..kw$default = json['default'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('alt', instance.alt?.toJson());
  writeNotNull('card_flat', instance.cardFlat?.toJson());
  writeNotNull('dark', instance.dark?.toJson());
  writeNotNull('flat', instance.flat?.toJson());
  writeNotNull('light', instance.light?.toJson());
  writeNotNull('default', instance.kw$default?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType()
          ..png = json['png'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..svg = json['svg'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType
                  .fromJson(json['svg'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('png', instance.png?.toJson());
  writeNotNull('svg', instance.svg?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..paymentType = $enumDecodeNullable(
              _$PaymentTypeEnumEnumMap, json['paymentType'],
              unknownValue: PaymentTypeEnum.artemisUnknown)
          ..materialIcon = json['materialIcon'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..images = json['images'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType
                  .fromJson(json['images'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('paymentType', _$PaymentTypeEnumEnumMap[instance.paymentType]);
  writeNotNull('materialIcon', instance.materialIcon);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('images', instance.images?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType()
          ..id = json['id'] as String
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..programName = json['programName'] as String?
          ..picture = json['picture'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..company = json['company'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'createdAt': instance.createdAt.toIso8601String(),
    'updatedAt': instance.updatedAt.toIso8601String(),
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('programName', instance.programName);
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('company', instance.company?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType()
          ..to = DateTime.parse(json['to'] as String)
          ..from = DateTime.parse(json['from'] as String)
          ..loyaltyProgram = json['loyaltyProgram'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType
                  .fromJson(json['loyaltyProgram'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType
            instance) {
  final val = <String, dynamic>{
    'to': instance.to.toIso8601String(),
    'from': instance.from.toIso8601String(),
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('loyaltyProgram', instance.loyaltyProgram?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType()
          ..id = json['id'] as String
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..name = json['name'] as String?
          ..title = json['title'] as String?
          ..email = (json['email'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..phone = (json['phone'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..website = json['website'] as String?
          ..subtitle = json['subtitle'] as String?
          ..currencies = (json['currencies'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..turnover = json['turnover'] as String?
          ..reference = json['reference'] as String?
          ..published = json['published'] as bool?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..brandColor = json['brandColor'] as String?
          ..isFollowed = json['isFollowed'] as bool?
          ..description = json['description'] as String?
          ..contactEmails = (json['contactEmails'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..averageCustomers = (json['averageCustomers'] as num?)?.toDouble()
          ..languages = (json['languages'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..picture = json['picture'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..outsidePictures = (json['outsidePictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..insidePictures = (json['insidePictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..openingHours = json['openingHours'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType
                  .fromJson(json['openingHours'] as Map<String, dynamic>)
          ..specialOffers = (json['specialOffers'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..locations = (json['locations'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..chatContact = (json['chatContact'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..socialMedia = (json['socialMedia'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..company = json['company'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>)
          ..posCategory = (json['posCategory'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..services = (json['services'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..paymentMethods = (json['paymentMethods'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..loyaltyPrograms = (json['loyaltyPrograms'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('tags', instance.tags);
  writeNotNull('name', instance.name);
  writeNotNull('title', instance.title);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone);
  writeNotNull('website', instance.website);
  writeNotNull('subtitle', instance.subtitle);
  writeNotNull(
      'currencies', instance.currencies?.map((e) => e.toJson()).toList());
  writeNotNull('turnover', instance.turnover);
  writeNotNull('reference', instance.reference);
  writeNotNull('published', instance.published);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('brandColor', instance.brandColor);
  writeNotNull('isFollowed', instance.isFollowed);
  writeNotNull('description', instance.description);
  writeNotNull('contactEmails', instance.contactEmails);
  writeNotNull('averageCustomers', instance.averageCustomers);
  writeNotNull(
      'languages', instance.languages?.map((e) => e.toJson()).toList());
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('outsidePictures',
      instance.outsidePictures?.map((e) => e.toJson()).toList());
  writeNotNull('insidePictures',
      instance.insidePictures?.map((e) => e.toJson()).toList());
  writeNotNull('openingHours', instance.openingHours?.toJson());
  writeNotNull(
      'specialOffers', instance.specialOffers?.map((e) => e.toJson()).toList());
  writeNotNull(
      'locations', instance.locations?.map((e) => e.toJson()).toList());
  writeNotNull(
      'chatContact', instance.chatContact?.map((e) => e.toJson()).toList());
  writeNotNull(
      'socialMedia', instance.socialMedia?.map((e) => e.toJson()).toList());
  writeNotNull('company', instance.company?.toJson());
  writeNotNull(
      'posCategory', instance.posCategory?.map((e) => e.toJson()).toList());
  writeNotNull('services', instance.services?.map((e) => e.toJson()).toList());
  writeNotNull('paymentMethods',
      instance.paymentMethods?.map((e) => e.toJson()).toList());
  writeNotNull('loyaltyPrograms',
      instance.loyaltyPrograms?.map((e) => e.toJson()).toList());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType()
          ..currency = json['currency'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType
                  .fromJson(json['currency'] as Map<String, dynamic>)
          ..kw$default = json['default'] as bool?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('currency', instance.currency?.toJson());
  writeNotNull('default', instance.kw$default);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..email = json['email'] as String?
          ..website = json['website'] as String?
          ..currencies = (json['currencies'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..phone = json['phone'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>)
          ..fax = json['fax'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType
                  .fromJson(json['fax'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..description = json['description'] as String?
          ..contactEmails = (json['contactEmails'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..address = json['address'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..company = json['company'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>)
          ..picture = json['picture'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('email', instance.email);
  writeNotNull('website', instance.website);
  writeNotNull(
      'currencies', instance.currencies?.map((e) => e.toJson()).toList());
  writeNotNull('phone', instance.phone?.toJson());
  writeNotNull('fax', instance.fax?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('description', instance.description);
  writeNotNull('contactEmails', instance.contactEmails);
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('company', instance.company?.toJson());
  writeNotNull('picture', instance.picture?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType()
          ..currency = json['currency'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType
                  .fromJson(json['currency'] as Map<String, dynamic>)
          ..kw$default = json['default'] as bool?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('currency', instance.currency?.toJson());
  writeNotNull('default', instance.kw$default);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType()
          ..id = json['id'] as String
          ..email = json['email'] as String?
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..website = json['website'] as String?
          ..contactEmails = (json['contactEmails'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..currencies = (json['currencies'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..picture = json['picture'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..company = json['company'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('email', instance.email);
  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('website', instance.website);
  writeNotNull('contactEmails', instance.contactEmails);
  writeNotNull(
      'currencies', instance.currencies?.map((e) => e.toJson()).toList());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('company', instance.company?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType()
          ..pos = json['pos'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType
                  .fromJson(json['pos'] as Map<String, dynamic>)
          ..wholesaler = json['wholesaler'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType
                  .fromJson(json['wholesaler'] as Map<String, dynamic>)
          ..manufacturer = json['manufacturer'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType
                  .fromJson(json['manufacturer'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('pos', instance.pos?.toJson());
  writeNotNull('wholesaler', instance.wholesaler?.toJson());
  writeNotNull('manufacturer', instance.manufacturer?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType()
          ..id = json['id'] as String
          ..title = json['title'] as String
          ..type = $enumDecodeNullable(_$FormTypeEnumMap, json['type'],
              unknownValue: FormType.artemisUnknown)
          ..status = $enumDecodeNullable(_$FormStatusEnumMap, json['status'],
              unknownValue: FormStatus.artemisUnknown)
          ..description = json['description'] as String
          ..owner =
              GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType$FormOwnerDtoType
                  .fromJson(json['owner'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'title': instance.title,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$FormTypeEnumMap[instance.type]);
  writeNotNull('status', _$FormStatusEnumMap[instance.status]);
  val['description'] = instance.description;
  val['owner'] = instance.owner.toJson();
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$ChallengeStepType$MediaType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$ChallengeStepType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$ChallengeStepType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$ChallengeStepType$MediaType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$ChallengeStepType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$ChallengeStepType$MediaType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$ChallengeStepType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$ChallengeStepType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$ChallengeStepType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$ChallengeStepType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$ChallengeStepType$MediaTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$ChallengeStepType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$ChallengeStepType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$ChallengeStepTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$ChallengeStepType()
          ..id = json['id'] as String
          ..title = json['title'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$ChallengeStepType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$ChallengeStepTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$ChallengeStepType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextType()
          ..max = (json['max'] as num).toDouble()
          ..min = (json['min'] as num).toDouble();

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextTypeToJson(
            GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextType
                instance) =>
        <String, dynamic>{
          'max': instance.max,
          'min': instance.min,
        };

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateType()
          ..outdated = json['outdated'] as bool
          ..interval = json['interval'] as bool;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateTypeToJson(
            GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateType
                instance) =>
        <String, dynamic>{
          'outdated': instance.outdated,
          'interval': instance.interval,
        };

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberType()
          ..minValue = (json['minValue'] as num).toDouble()
          ..maxValue = (json['maxValue'] as num).toDouble()
          ..interval = json['interval'] as bool;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberTypeToJson(
            GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberType
                instance) =>
        <String, dynamic>{
          'minValue': instance.minValue,
          'maxValue': instance.maxValue,
          'interval': instance.interval,
        };

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleType()
          ..leftLabel = json['leftLabel'] as String
          ..rightLabel = json['rightLabel'] as String;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleTypeToJson(
            GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleType
                instance) =>
        <String, dynamic>{
          'leftLabel': instance.leftLabel,
          'rightLabel': instance.rightLabel,
        };

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType()
          ..rank = (json['rank'] as num).toDouble()
          ..icon = json['icon'] as String?
          ..picture = json['picture'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType
            instance) {
  final val = <String, dynamic>{
    'rank': instance.rank,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('icon', instance.icon);
  writeNotNull('picture', instance.picture?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType()
          ..levels = (json['levels'] as List<dynamic>?)
              ?.map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('levels', instance.levels?.map((e) => e.toJson()).toList());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType()
          ..text = json['text'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextType
                  .fromJson(json['text'] as Map<String, dynamic>)
          ..date = json['date'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateType
                  .fromJson(json['date'] as Map<String, dynamic>)
          ..number = json['number'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberType
                  .fromJson(json['number'] as Map<String, dynamic>)
          ..toggle = json['toggle'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleType
                  .fromJson(json['toggle'] as Map<String, dynamic>)
          ..smiley = json['smiley'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType
                  .fromJson(json['smiley'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('text', instance.text?.toJson());
  writeNotNull('date', instance.date?.toJson());
  writeNotNull('number', instance.number?.toJson());
  writeNotNull('toggle', instance.toggle?.toJson());
  writeNotNull('smiley', instance.smiley?.toJson());
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType()
          ..id = json['id'] as String
          ..order = json['order'] as int?
          ..title = json['title'] as String?
          ..description = json['description'] as String?
          ..choices = (json['choices'] as List<dynamic>)
              .map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionChoiceDtoType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..type = $enumDecodeNullable(_$QuestionTypeEnumEnumMap, json['type'],
              unknownValue: QuestionTypeEnum.artemisUnknown)
          ..form = json['form'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$FormDtoType
                  .fromJson(json['form'] as Map<String, dynamic>)
          ..challengeStep = json['challengeStep'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$ChallengeStepType
                  .fromJson(json['challengeStep'] as Map<String, dynamic>)
          ..settings = json['settings'] == null
              ? null
              : GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType$QuestionSettingsType
                  .fromJson(json['settings'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('order', instance.order);
  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  val['choices'] = instance.choices.map((e) => e.toJson()).toList();
  writeNotNull('type', _$QuestionTypeEnumEnumMap[instance.type]);
  writeNotNull('form', instance.form?.toJson());
  writeNotNull('challengeStep', instance.challengeStep?.toJson());
  writeNotNull('settings', instance.settings?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetQuestionsByChallengeStep$Query$QuestionPaginateType
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateTypeFromJson(
            Map<String, dynamic> json) =>
        GetQuestionsByChallengeStep$Query$QuestionPaginateType()
          ..count = json['count'] as int?
          ..isLast = json['isLast'] as bool?
          ..objects = (json['objects'] as List<dynamic>)
              .map((e) =>
                  GetQuestionsByChallengeStep$Query$QuestionPaginateType$QuestionDtoType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$GetQuestionsByChallengeStep$Query$QuestionPaginateTypeToJson(
        GetQuestionsByChallengeStep$Query$QuestionPaginateType instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('count', instance.count);
  writeNotNull('isLast', instance.isLast);
  val['objects'] = instance.objects.map((e) => e.toJson()).toList();
  return val;
}

GetQuestionsByChallengeStep$Query _$GetQuestionsByChallengeStep$QueryFromJson(
        Map<String, dynamic> json) =>
    GetQuestionsByChallengeStep$Query()
      ..getQuestionsByChallengeStep =
          GetQuestionsByChallengeStep$Query$QuestionPaginateType.fromJson(
              json['getQuestionsByChallengeStep'] as Map<String, dynamic>);

Map<String, dynamic> _$GetQuestionsByChallengeStep$QueryToJson(
        GetQuestionsByChallengeStep$Query instance) =>
    <String, dynamic>{
      'getQuestionsByChallengeStep':
          instance.getQuestionsByChallengeStep.toJson(),
    };

PaginationInput _$PaginationInputFromJson(Map<String, dynamic> json) =>
    PaginationInput(
      page: json['page'] as int?,
      limit: json['limit'] as int?,
    );

Map<String, dynamic> _$PaginationInputToJson(PaginationInput instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('page', instance.page);
  writeNotNull('limit', instance.limit);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$QuestionChoiceDtoType
    _$CreateQuestion$Mutation$QuestionDtoType$QuestionChoiceDtoTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$QuestionChoiceDtoType()
          ..item = json['item'] as String
          ..enable = json['enable'] as bool?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$QuestionChoiceDtoTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$QuestionChoiceDtoType
            instance) {
  final val = <String, dynamic>{
    'item': instance.item,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('enable', instance.enable);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType()
          ..currency = json['currency'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType
                  .fromJson(json['currency'] as Map<String, dynamic>)
          ..kw$default = json['default'] as bool?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('currency', instance.currency?.toJson());
  writeNotNull('default', instance.kw$default);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType()
          ..day = $enumDecodeNullable(_$DaysEnumMap, json['day'],
              unknownValue: Days.artemisUnknown)
          ..from = json['from'] as String?
          ..to = json['to'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('day', _$DaysEnumMap[instance.day]);
  writeNotNull('from', instance.from);
  writeNotNull('to', instance.to);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType()
          ..status = $enumDecodeNullable(_$OpeningStatusEnumMap, json['status'],
              unknownValue: OpeningStatus.artemisUnknown)
          ..hours = (json['hours'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', _$OpeningStatusEnumMap[instance.status]);
  writeNotNull('hours', instance.hours?.map((e) => e.toJson()).toList());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType()
          ..day = $enumDecodeNullable(_$DaysEnumMap, json['day'],
              unknownValue: Days.artemisUnknown)
          ..from = json['from'] as String?
          ..to = json['to'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('day', _$DaysEnumMap[instance.day]);
  writeNotNull('from', instance.from);
  writeNotNull('to', instance.to);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType()
          ..offerType = $enumDecodeNullable(
              _$SpecialOffersTypeEnumMap, json['offerType'],
              unknownValue: SpecialOffersType.artemisUnknown)
          ..hours = (json['hours'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('offerType', _$SpecialOffersTypeEnumMap[instance.offerType]);
  writeNotNull('hours', instance.hours?.map((e) => e.toJson()).toList());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType()
          ..size48 = json['size48'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size96 = json['size96'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size96'] as Map<String, dynamic>)
          ..size144 = json['size144'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size144'] as Map<String, dynamic>)
          ..size240 = json['size240'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size240'] as Map<String, dynamic>)
          ..size480 = json['size480'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size480'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size96', instance.size96?.toJson());
  writeNotNull('size144', instance.size144?.toJson());
  writeNotNull('size240', instance.size240?.toJson());
  writeNotNull('size480', instance.size480?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType()
          ..svg = json['svg'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
                  .fromJson(json['png'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType()
          ..style = $enumDecode(_$SocialImageStyleEnumEnumMap, json['style'],
              unknownValue: SocialImageStyleEnum.artemisUnknown)
          ..images = (json['images'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType
            instance) {
  final val = <String, dynamic>{
    'style': _$SocialImageStyleEnumEnumMap[instance.style]!,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('images', instance.images?.map((e) => e.toJson()).toList());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..fontIcon = json['fontIcon'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..images = (json['images'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('fontIcon', instance.fontIcon);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('images', instance.images?.map((e) => e.toJson()).toList());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType()
          ..name = json['name'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType
                  .fromJson(json['name'] as Map<String, dynamic>)
          ..value = json['value'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name?.toJson());
  writeNotNull('value', instance.value);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..mapPicture = json['mapPicture'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..picture = json['picture'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('mapPicture', instance.mapPicture);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('picture', instance.picture?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesType()
          ..id = json['id'] as String?
          ..index = json['index'] as int?
          ..name = json['name'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('id', instance.id);
  writeNotNull('index', instance.index);
  writeNotNull('name', instance.name);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType()
          ..alt = json['alt'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt'] as Map<String, dynamic>)
          ..alt2x = json['alt2x'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt2x'] as Map<String, dynamic>)
          ..alt128 = json['alt_128'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt_128'] as Map<String, dynamic>)
          ..alt256 = json['alt_256'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt_256'] as Map<String, dynamic>)
          ..alt512 = json['alt_512'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt_512'] as Map<String, dynamic>)
          ..cardFlat = json['card_flat'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat'] as Map<String, dynamic>)
          ..cardFlat2x = json['card_flat2x'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat2x'] as Map<String, dynamic>)
          ..cardFlat128 = json['card_flat_128'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat_128'] as Map<String, dynamic>)
          ..cardFlat256 = json['card_flat_256'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat_256'] as Map<String, dynamic>)
          ..cardFlat512 = json['card_flat_512'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat_512'] as Map<String, dynamic>)
          ..dark = json['dark'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark'] as Map<String, dynamic>)
          ..dark2x = json['dark2x'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark2x'] as Map<String, dynamic>)
          ..dark128 = json['dark_128'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark_128'] as Map<String, dynamic>)
          ..dark256 = json['dark_256'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark_256'] as Map<String, dynamic>)
          ..dark512 = json['dark_512'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark_512'] as Map<String, dynamic>)
          ..flat = json['flat'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat'] as Map<String, dynamic>)
          ..flat2x = json['flat2x'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat2x'] as Map<String, dynamic>)
          ..flat128 = json['flat_128'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat_128'] as Map<String, dynamic>)
          ..flat256 = json['flat_256'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat_256'] as Map<String, dynamic>)
          ..flat512 = json['flat_512'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat_512'] as Map<String, dynamic>)
          ..light = json['light'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light'] as Map<String, dynamic>)
          ..light2x = json['light2x'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light2x'] as Map<String, dynamic>)
          ..light128 = json['light_128'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light_128'] as Map<String, dynamic>)
          ..light256 = json['light_256'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light_256'] as Map<String, dynamic>)
          ..light512 = json['light_512'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light_512'] as Map<String, dynamic>)
          ..kw$default = json['default'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..default2x = json['default2x'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default2x'] as Map<String, dynamic>)
          ..default128 = json['default_128'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default_128'] as Map<String, dynamic>)
          ..default256 = json['default_256'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default_256'] as Map<String, dynamic>)
          ..default512 = json['default_512'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default_512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('alt', instance.alt?.toJson());
  writeNotNull('alt2x', instance.alt2x?.toJson());
  writeNotNull('alt_128', instance.alt128?.toJson());
  writeNotNull('alt_256', instance.alt256?.toJson());
  writeNotNull('alt_512', instance.alt512?.toJson());
  writeNotNull('card_flat', instance.cardFlat?.toJson());
  writeNotNull('card_flat2x', instance.cardFlat2x?.toJson());
  writeNotNull('card_flat_128', instance.cardFlat128?.toJson());
  writeNotNull('card_flat_256', instance.cardFlat256?.toJson());
  writeNotNull('card_flat_512', instance.cardFlat512?.toJson());
  writeNotNull('dark', instance.dark?.toJson());
  writeNotNull('dark2x', instance.dark2x?.toJson());
  writeNotNull('dark_128', instance.dark128?.toJson());
  writeNotNull('dark_256', instance.dark256?.toJson());
  writeNotNull('dark_512', instance.dark512?.toJson());
  writeNotNull('flat', instance.flat?.toJson());
  writeNotNull('flat2x', instance.flat2x?.toJson());
  writeNotNull('flat_128', instance.flat128?.toJson());
  writeNotNull('flat_256', instance.flat256?.toJson());
  writeNotNull('flat_512', instance.flat512?.toJson());
  writeNotNull('light', instance.light?.toJson());
  writeNotNull('light2x', instance.light2x?.toJson());
  writeNotNull('light_128', instance.light128?.toJson());
  writeNotNull('light_256', instance.light256?.toJson());
  writeNotNull('light_512', instance.light512?.toJson());
  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('default2x', instance.default2x?.toJson());
  writeNotNull('default_128', instance.default128?.toJson());
  writeNotNull('default_256', instance.default256?.toJson());
  writeNotNull('default_512', instance.default512?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType()
          ..alt = json['alt'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['alt'] as Map<String, dynamic>)
          ..cardFlat = json['card_flat'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['card_flat'] as Map<String, dynamic>)
          ..dark = json['dark'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['dark'] as Map<String, dynamic>)
          ..flat = json['flat'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['flat'] as Map<String, dynamic>)
          ..light = json['light'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['light'] as Map<String, dynamic>)
          ..kw$default = json['default'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('alt', instance.alt?.toJson());
  writeNotNull('card_flat', instance.cardFlat?.toJson());
  writeNotNull('dark', instance.dark?.toJson());
  writeNotNull('flat', instance.flat?.toJson());
  writeNotNull('light', instance.light?.toJson());
  writeNotNull('default', instance.kw$default?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType()
          ..png = json['png'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..svg = json['svg'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType
                  .fromJson(json['svg'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('png', instance.png?.toJson());
  writeNotNull('svg', instance.svg?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..paymentType = $enumDecodeNullable(
              _$PaymentTypeEnumEnumMap, json['paymentType'],
              unknownValue: PaymentTypeEnum.artemisUnknown)
          ..materialIcon = json['materialIcon'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..images = json['images'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType
                  .fromJson(json['images'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('paymentType', _$PaymentTypeEnumEnumMap[instance.paymentType]);
  writeNotNull('materialIcon', instance.materialIcon);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('images', instance.images?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType()
          ..id = json['id'] as String
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..programName = json['programName'] as String?
          ..picture = json['picture'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..company = json['company'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'createdAt': instance.createdAt.toIso8601String(),
    'updatedAt': instance.updatedAt.toIso8601String(),
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('programName', instance.programName);
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('company', instance.company?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType()
          ..to = DateTime.parse(json['to'] as String)
          ..from = DateTime.parse(json['from'] as String)
          ..loyaltyProgram = json['loyaltyProgram'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType
                  .fromJson(json['loyaltyProgram'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType
            instance) {
  final val = <String, dynamic>{
    'to': instance.to.toIso8601String(),
    'from': instance.from.toIso8601String(),
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('loyaltyProgram', instance.loyaltyProgram?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType()
          ..id = json['id'] as String
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..name = json['name'] as String?
          ..title = json['title'] as String?
          ..email = (json['email'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..phone = (json['phone'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..website = json['website'] as String?
          ..subtitle = json['subtitle'] as String?
          ..currencies = (json['currencies'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..turnover = json['turnover'] as String?
          ..reference = json['reference'] as String?
          ..published = json['published'] as bool?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..brandColor = json['brandColor'] as String?
          ..isFollowed = json['isFollowed'] as bool?
          ..description = json['description'] as String?
          ..contactEmails = (json['contactEmails'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..averageCustomers = (json['averageCustomers'] as num?)?.toDouble()
          ..languages = (json['languages'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..picture = json['picture'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..outsidePictures = (json['outsidePictures'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..insidePictures = (json['insidePictures'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..openingHours = json['openingHours'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType
                  .fromJson(json['openingHours'] as Map<String, dynamic>)
          ..specialOffers = (json['specialOffers'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..locations = (json['locations'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..chatContact = (json['chatContact'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..socialMedia = (json['socialMedia'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..company = json['company'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>)
          ..posCategory = (json['posCategory'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..services = (json['services'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..paymentMethods = (json['paymentMethods'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..loyaltyPrograms = (json['loyaltyPrograms'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('tags', instance.tags);
  writeNotNull('name', instance.name);
  writeNotNull('title', instance.title);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone);
  writeNotNull('website', instance.website);
  writeNotNull('subtitle', instance.subtitle);
  writeNotNull(
      'currencies', instance.currencies?.map((e) => e.toJson()).toList());
  writeNotNull('turnover', instance.turnover);
  writeNotNull('reference', instance.reference);
  writeNotNull('published', instance.published);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('brandColor', instance.brandColor);
  writeNotNull('isFollowed', instance.isFollowed);
  writeNotNull('description', instance.description);
  writeNotNull('contactEmails', instance.contactEmails);
  writeNotNull('averageCustomers', instance.averageCustomers);
  writeNotNull(
      'languages', instance.languages?.map((e) => e.toJson()).toList());
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('outsidePictures',
      instance.outsidePictures?.map((e) => e.toJson()).toList());
  writeNotNull('insidePictures',
      instance.insidePictures?.map((e) => e.toJson()).toList());
  writeNotNull('openingHours', instance.openingHours?.toJson());
  writeNotNull(
      'specialOffers', instance.specialOffers?.map((e) => e.toJson()).toList());
  writeNotNull(
      'locations', instance.locations?.map((e) => e.toJson()).toList());
  writeNotNull(
      'chatContact', instance.chatContact?.map((e) => e.toJson()).toList());
  writeNotNull(
      'socialMedia', instance.socialMedia?.map((e) => e.toJson()).toList());
  writeNotNull('company', instance.company?.toJson());
  writeNotNull(
      'posCategory', instance.posCategory?.map((e) => e.toJson()).toList());
  writeNotNull('services', instance.services?.map((e) => e.toJson()).toList());
  writeNotNull('paymentMethods',
      instance.paymentMethods?.map((e) => e.toJson()).toList());
  writeNotNull('loyaltyPrograms',
      instance.loyaltyPrograms?.map((e) => e.toJson()).toList());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType()
          ..currency = json['currency'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType
                  .fromJson(json['currency'] as Map<String, dynamic>)
          ..kw$default = json['default'] as bool?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('currency', instance.currency?.toJson());
  writeNotNull('default', instance.kw$default);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..email = json['email'] as String?
          ..website = json['website'] as String?
          ..currencies = (json['currencies'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..phone = json['phone'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>)
          ..fax = json['fax'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType
                  .fromJson(json['fax'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..description = json['description'] as String?
          ..contactEmails = (json['contactEmails'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..address = json['address'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..company = json['company'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>)
          ..picture = json['picture'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('email', instance.email);
  writeNotNull('website', instance.website);
  writeNotNull(
      'currencies', instance.currencies?.map((e) => e.toJson()).toList());
  writeNotNull('phone', instance.phone?.toJson());
  writeNotNull('fax', instance.fax?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('description', instance.description);
  writeNotNull('contactEmails', instance.contactEmails);
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('company', instance.company?.toJson());
  writeNotNull('picture', instance.picture?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType()
          ..currency = json['currency'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType
                  .fromJson(json['currency'] as Map<String, dynamic>)
          ..kw$default = json['default'] as bool?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('currency', instance.currency?.toJson());
  writeNotNull('default', instance.kw$default);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType()
          ..id = json['id'] as String
          ..email = json['email'] as String?
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..website = json['website'] as String?
          ..contactEmails = (json['contactEmails'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..currencies = (json['currencies'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..picture = json['picture'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..company = json['company'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('email', instance.email);
  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('website', instance.website);
  writeNotNull('contactEmails', instance.contactEmails);
  writeNotNull(
      'currencies', instance.currencies?.map((e) => e.toJson()).toList());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('company', instance.company?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType()
          ..pos = json['pos'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType
                  .fromJson(json['pos'] as Map<String, dynamic>)
          ..wholesaler = json['wholesaler'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType
                  .fromJson(json['wholesaler'] as Map<String, dynamic>)
          ..manufacturer = json['manufacturer'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType
                  .fromJson(json['manufacturer'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('pos', instance.pos?.toJson());
  writeNotNull('wholesaler', instance.wholesaler?.toJson());
  writeNotNull('manufacturer', instance.manufacturer?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$FormDtoType
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType()
          ..id = json['id'] as String
          ..title = json['title'] as String
          ..type = $enumDecodeNullable(_$FormTypeEnumMap, json['type'],
              unknownValue: FormType.artemisUnknown)
          ..status = $enumDecodeNullable(_$FormStatusEnumMap, json['status'],
              unknownValue: FormStatus.artemisUnknown)
          ..description = json['description'] as String
          ..owner =
              CreateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType
                  .fromJson(json['owner'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$FormDtoTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$FormDtoType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'title': instance.title,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$FormTypeEnumMap[instance.type]);
  writeNotNull('status', _$FormStatusEnumMap[instance.status]);
  val['description'] = instance.description;
  val['owner'] = instance.owner.toJson();
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType
    _$CreateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$ChallengeStepType
    _$CreateQuestion$Mutation$QuestionDtoType$ChallengeStepTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$ChallengeStepType()
          ..id = json['id'] as String
          ..title = json['title'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$ChallengeStepTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$ChallengeStepType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextType
    _$CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextType()
          ..max = (json['max'] as num).toDouble()
          ..min = (json['min'] as num).toDouble();

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextTypeToJson(
            CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextType
                instance) =>
        <String, dynamic>{
          'max': instance.max,
          'min': instance.min,
        };

CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateType
    _$CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateType()
          ..outdated = json['outdated'] as bool
          ..interval = json['interval'] as bool;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateTypeToJson(
            CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateType
                instance) =>
        <String, dynamic>{
          'outdated': instance.outdated,
          'interval': instance.interval,
        };

CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberType
    _$CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberType()
          ..minValue = (json['minValue'] as num).toDouble()
          ..maxValue = (json['maxValue'] as num).toDouble()
          ..interval = json['interval'] as bool;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberTypeToJson(
            CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberType
                instance) =>
        <String, dynamic>{
          'minValue': instance.minValue,
          'maxValue': instance.maxValue,
          'interval': instance.interval,
        };

CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleType
    _$CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleType()
          ..leftLabel = json['leftLabel'] as String
          ..rightLabel = json['rightLabel'] as String;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleTypeToJson(
            CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleType
                instance) =>
        <String, dynamic>{
          'leftLabel': instance.leftLabel,
          'rightLabel': instance.rightLabel,
        };

CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureType
    _$CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType
    _$CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType()
          ..rank = (json['rank'] as num).toDouble()
          ..icon = json['icon'] as String?
          ..picture = json['picture'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType
            instance) {
  final val = <String, dynamic>{
    'rank': instance.rank,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('icon', instance.icon);
  writeNotNull('picture', instance.picture?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType
    _$CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType()
          ..levels = (json['levels'] as List<dynamic>?)
              ?.map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('levels', instance.levels?.map((e) => e.toJson()).toList());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType
    _$CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType()
          ..text = json['text'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextType
                  .fromJson(json['text'] as Map<String, dynamic>)
          ..date = json['date'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateType
                  .fromJson(json['date'] as Map<String, dynamic>)
          ..number = json['number'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberType
                  .fromJson(json['number'] as Map<String, dynamic>)
          ..toggle = json['toggle'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleType
                  .fromJson(json['toggle'] as Map<String, dynamic>)
          ..smiley = json['smiley'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType
                  .fromJson(json['smiley'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsTypeToJson(
        CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('text', instance.text?.toJson());
  writeNotNull('date', instance.date?.toJson());
  writeNotNull('number', instance.number?.toJson());
  writeNotNull('toggle', instance.toggle?.toJson());
  writeNotNull('smiley', instance.smiley?.toJson());
  return val;
}

CreateQuestion$Mutation$QuestionDtoType
    _$CreateQuestion$Mutation$QuestionDtoTypeFromJson(
            Map<String, dynamic> json) =>
        CreateQuestion$Mutation$QuestionDtoType()
          ..id = json['id'] as String
          ..order = json['order'] as int?
          ..title = json['title'] as String?
          ..description = json['description'] as String?
          ..choices = (json['choices'] as List<dynamic>)
              .map((e) =>
                  CreateQuestion$Mutation$QuestionDtoType$QuestionChoiceDtoType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..type = $enumDecodeNullable(_$QuestionTypeEnumEnumMap, json['type'],
              unknownValue: QuestionTypeEnum.artemisUnknown)
          ..form = json['form'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$FormDtoType.fromJson(
                  json['form'] as Map<String, dynamic>)
          ..challengeStep = json['challengeStep'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$ChallengeStepType
                  .fromJson(json['challengeStep'] as Map<String, dynamic>)
          ..settings = json['settings'] == null
              ? null
              : CreateQuestion$Mutation$QuestionDtoType$QuestionSettingsType
                  .fromJson(json['settings'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic> _$CreateQuestion$Mutation$QuestionDtoTypeToJson(
    CreateQuestion$Mutation$QuestionDtoType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('order', instance.order);
  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  val['choices'] = instance.choices.map((e) => e.toJson()).toList();
  writeNotNull('type', _$QuestionTypeEnumEnumMap[instance.type]);
  writeNotNull('form', instance.form?.toJson());
  writeNotNull('challengeStep', instance.challengeStep?.toJson());
  writeNotNull('settings', instance.settings?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

CreateQuestion$Mutation _$CreateQuestion$MutationFromJson(
        Map<String, dynamic> json) =>
    CreateQuestion$Mutation()
      ..createQuestion = CreateQuestion$Mutation$QuestionDtoType.fromJson(
          json['createQuestion'] as Map<String, dynamic>);

Map<String, dynamic> _$CreateQuestion$MutationToJson(
        CreateQuestion$Mutation instance) =>
    <String, dynamic>{
      'createQuestion': instance.createQuestion.toJson(),
    };

QuestionInput _$QuestionInputFromJson(Map<String, dynamic> json) =>
    QuestionInput(
      title: json['title'] as String?,
      description: json['description'] as String?,
      choices: (json['choices'] as List<dynamic>?)
          ?.map((e) => QuestionChoiceInput.fromJson(e as Map<String, dynamic>))
          .toList(),
      order: json['order'] as int?,
      type: $enumDecodeNullable(_$QuestionTypeEnumEnumMap, json['type'],
          unknownValue: QuestionTypeEnum.artemisUnknown),
      form: json['form'] as String?,
      challengeStep: json['challengeStep'] as String?,
      settings: json['settings'] == null
          ? null
          : QuestionSettingsInput.fromJson(
              json['settings'] as Map<String, dynamic>),
    );

Map<String, dynamic> _$QuestionInputToJson(QuestionInput instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  writeNotNull('choices', instance.choices?.map((e) => e.toJson()).toList());
  writeNotNull('order', instance.order);
  writeNotNull('type', _$QuestionTypeEnumEnumMap[instance.type]);
  writeNotNull('form', instance.form);
  writeNotNull('challengeStep', instance.challengeStep);
  writeNotNull('settings', instance.settings?.toJson());
  return val;
}

QuestionChoiceInput _$QuestionChoiceInputFromJson(Map<String, dynamic> json) =>
    QuestionChoiceInput(
      item: json['item'] as String,
      enable: json['enable'] as bool?,
    );

Map<String, dynamic> _$QuestionChoiceInputToJson(QuestionChoiceInput instance) {
  final val = <String, dynamic>{
    'item': instance.item,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('enable', instance.enable);
  return val;
}

QuestionSettingsInput _$QuestionSettingsInputFromJson(
        Map<String, dynamic> json) =>
    QuestionSettingsInput(
      text: json['text'] == null
          ? null
          : QuestionSettingsTextInput.fromJson(
              json['text'] as Map<String, dynamic>),
      rating: json['rating'] == null
          ? null
          : QuestionSettingsTextInput.fromJson(
              json['rating'] as Map<String, dynamic>),
      date: json['date'] == null
          ? null
          : QuestionSettingsDateInput.fromJson(
              json['date'] as Map<String, dynamic>),
      number: json['number'] == null
          ? null
          : QuestionSettingsNumberInput.fromJson(
              json['number'] as Map<String, dynamic>),
      toggle: json['toggle'] == null
          ? null
          : QuestionSettingsToggleInput.fromJson(
              json['toggle'] as Map<String, dynamic>),
      smiley: json['smiley'] == null
          ? null
          : QuestionSettingsSmileyInput.fromJson(
              json['smiley'] as Map<String, dynamic>),
    );

Map<String, dynamic> _$QuestionSettingsInputToJson(
    QuestionSettingsInput instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('text', instance.text?.toJson());
  writeNotNull('rating', instance.rating?.toJson());
  writeNotNull('date', instance.date?.toJson());
  writeNotNull('number', instance.number?.toJson());
  writeNotNull('toggle', instance.toggle?.toJson());
  writeNotNull('smiley', instance.smiley?.toJson());
  return val;
}

QuestionSettingsTextInput _$QuestionSettingsTextInputFromJson(
        Map<String, dynamic> json) =>
    QuestionSettingsTextInput(
      max: (json['max'] as num).toDouble(),
      min: (json['min'] as num).toDouble(),
    );

Map<String, dynamic> _$QuestionSettingsTextInputToJson(
        QuestionSettingsTextInput instance) =>
    <String, dynamic>{
      'max': instance.max,
      'min': instance.min,
    };

QuestionSettingsDateInput _$QuestionSettingsDateInputFromJson(
        Map<String, dynamic> json) =>
    QuestionSettingsDateInput(
      outdated: json['outdated'] as bool,
      interval: json['interval'] as bool,
    );

Map<String, dynamic> _$QuestionSettingsDateInputToJson(
        QuestionSettingsDateInput instance) =>
    <String, dynamic>{
      'outdated': instance.outdated,
      'interval': instance.interval,
    };

QuestionSettingsNumberInput _$QuestionSettingsNumberInputFromJson(
        Map<String, dynamic> json) =>
    QuestionSettingsNumberInput(
      minValue: (json['minValue'] as num).toDouble(),
      maxValue: (json['maxValue'] as num).toDouble(),
      interval: json['interval'] as bool,
    );

Map<String, dynamic> _$QuestionSettingsNumberInputToJson(
        QuestionSettingsNumberInput instance) =>
    <String, dynamic>{
      'minValue': instance.minValue,
      'maxValue': instance.maxValue,
      'interval': instance.interval,
    };

QuestionSettingsToggleInput _$QuestionSettingsToggleInputFromJson(
        Map<String, dynamic> json) =>
    QuestionSettingsToggleInput(
      leftLabel: json['leftLabel'] as String,
      rightLabel: json['rightLabel'] as String,
    );

Map<String, dynamic> _$QuestionSettingsToggleInputToJson(
        QuestionSettingsToggleInput instance) =>
    <String, dynamic>{
      'leftLabel': instance.leftLabel,
      'rightLabel': instance.rightLabel,
    };

QuestionSettingsSmileyInput _$QuestionSettingsSmileyInputFromJson(
        Map<String, dynamic> json) =>
    QuestionSettingsSmileyInput(
      levels: QuestionSettingsSmileyObjInput.fromJson(
          json['levels'] as Map<String, dynamic>),
    );

Map<String, dynamic> _$QuestionSettingsSmileyInputToJson(
        QuestionSettingsSmileyInput instance) =>
    <String, dynamic>{
      'levels': instance.levels.toJson(),
    };

QuestionSettingsSmileyObjInput _$QuestionSettingsSmileyObjInputFromJson(
        Map<String, dynamic> json) =>
    QuestionSettingsSmileyObjInput(
      rank: (json['rank'] as num).toDouble(),
      icon: json['icon'] as String?,
      picture: json['picture'] == null
          ? null
          : PictureInput.fromJson(json['picture'] as Map<String, dynamic>),
    );

Map<String, dynamic> _$QuestionSettingsSmileyObjInputToJson(
    QuestionSettingsSmileyObjInput instance) {
  final val = <String, dynamic>{
    'rank': instance.rank,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('icon', instance.icon);
  writeNotNull('picture', instance.picture?.toJson());
  return val;
}

PictureInput _$PictureInputFromJson(Map<String, dynamic> json) => PictureInput(
      width: json['width'] as int?,
      height: json['height'] as int?,
      x: json['x'] as int?,
      y: json['y'] as int?,
      alt: json['alt'] as String?,
      baseUrl: json['baseUrl'] as String,
      path: json['path'] as String,
    );

Map<String, dynamic> _$PictureInputToJson(PictureInput instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  val['baseUrl'] = instance.baseUrl;
  val['path'] = instance.path;
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$QuestionChoiceDtoType
    _$UpdateQuestion$Mutation$QuestionDtoType$QuestionChoiceDtoTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$QuestionChoiceDtoType()
          ..item = json['item'] as String
          ..enable = json['enable'] as bool?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$QuestionChoiceDtoTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$QuestionChoiceDtoType
            instance) {
  final val = <String, dynamic>{
    'item': instance.item,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('enable', instance.enable);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType()
          ..currency = json['currency'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType
                  .fromJson(json['currency'] as Map<String, dynamic>)
          ..kw$default = json['default'] as bool?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('currency', instance.currency?.toJson());
  writeNotNull('default', instance.kw$default);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType()
          ..day = $enumDecodeNullable(_$DaysEnumMap, json['day'],
              unknownValue: Days.artemisUnknown)
          ..from = json['from'] as String?
          ..to = json['to'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('day', _$DaysEnumMap[instance.day]);
  writeNotNull('from', instance.from);
  writeNotNull('to', instance.to);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType()
          ..status = $enumDecodeNullable(_$OpeningStatusEnumMap, json['status'],
              unknownValue: OpeningStatus.artemisUnknown)
          ..hours = (json['hours'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', _$OpeningStatusEnumMap[instance.status]);
  writeNotNull('hours', instance.hours?.map((e) => e.toJson()).toList());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType()
          ..day = $enumDecodeNullable(_$DaysEnumMap, json['day'],
              unknownValue: Days.artemisUnknown)
          ..from = json['from'] as String?
          ..to = json['to'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('day', _$DaysEnumMap[instance.day]);
  writeNotNull('from', instance.from);
  writeNotNull('to', instance.to);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType()
          ..offerType = $enumDecodeNullable(
              _$SpecialOffersTypeEnumMap, json['offerType'],
              unknownValue: SpecialOffersType.artemisUnknown)
          ..hours = (json['hours'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('offerType', _$SpecialOffersTypeEnumMap[instance.offerType]);
  writeNotNull('hours', instance.hours?.map((e) => e.toJson()).toList());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType()
          ..size48 = json['size48'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size96 = json['size96'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size96'] as Map<String, dynamic>)
          ..size144 = json['size144'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size144'] as Map<String, dynamic>)
          ..size240 = json['size240'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size240'] as Map<String, dynamic>)
          ..size480 = json['size480'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size480'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size96', instance.size96?.toJson());
  writeNotNull('size144', instance.size144?.toJson());
  writeNotNull('size240', instance.size240?.toJson());
  writeNotNull('size480', instance.size480?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType()
          ..svg = json['svg'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
                  .fromJson(json['png'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType()
          ..style = $enumDecode(_$SocialImageStyleEnumEnumMap, json['style'],
              unknownValue: SocialImageStyleEnum.artemisUnknown)
          ..images = (json['images'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType
            instance) {
  final val = <String, dynamic>{
    'style': _$SocialImageStyleEnumEnumMap[instance.style]!,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('images', instance.images?.map((e) => e.toJson()).toList());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..fontIcon = json['fontIcon'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..images = (json['images'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('fontIcon', instance.fontIcon);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('images', instance.images?.map((e) => e.toJson()).toList());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType()
          ..name = json['name'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType
                  .fromJson(json['name'] as Map<String, dynamic>)
          ..value = json['value'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name?.toJson());
  writeNotNull('value', instance.value);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..mapPicture = json['mapPicture'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..picture = json['picture'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('mapPicture', instance.mapPicture);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('picture', instance.picture?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesType()
          ..id = json['id'] as String?
          ..index = json['index'] as int?
          ..name = json['name'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('id', instance.id);
  writeNotNull('index', instance.index);
  writeNotNull('name', instance.name);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType()
          ..alt = json['alt'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt'] as Map<String, dynamic>)
          ..alt2x = json['alt2x'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt2x'] as Map<String, dynamic>)
          ..alt128 = json['alt_128'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt_128'] as Map<String, dynamic>)
          ..alt256 = json['alt_256'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt_256'] as Map<String, dynamic>)
          ..alt512 = json['alt_512'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt_512'] as Map<String, dynamic>)
          ..cardFlat = json['card_flat'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat'] as Map<String, dynamic>)
          ..cardFlat2x = json['card_flat2x'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat2x'] as Map<String, dynamic>)
          ..cardFlat128 = json['card_flat_128'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat_128'] as Map<String, dynamic>)
          ..cardFlat256 = json['card_flat_256'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat_256'] as Map<String, dynamic>)
          ..cardFlat512 = json['card_flat_512'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat_512'] as Map<String, dynamic>)
          ..dark = json['dark'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark'] as Map<String, dynamic>)
          ..dark2x = json['dark2x'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark2x'] as Map<String, dynamic>)
          ..dark128 = json['dark_128'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark_128'] as Map<String, dynamic>)
          ..dark256 = json['dark_256'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark_256'] as Map<String, dynamic>)
          ..dark512 = json['dark_512'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark_512'] as Map<String, dynamic>)
          ..flat = json['flat'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat'] as Map<String, dynamic>)
          ..flat2x = json['flat2x'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat2x'] as Map<String, dynamic>)
          ..flat128 = json['flat_128'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat_128'] as Map<String, dynamic>)
          ..flat256 = json['flat_256'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat_256'] as Map<String, dynamic>)
          ..flat512 = json['flat_512'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat_512'] as Map<String, dynamic>)
          ..light = json['light'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light'] as Map<String, dynamic>)
          ..light2x = json['light2x'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light2x'] as Map<String, dynamic>)
          ..light128 = json['light_128'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light_128'] as Map<String, dynamic>)
          ..light256 = json['light_256'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light_256'] as Map<String, dynamic>)
          ..light512 = json['light_512'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light_512'] as Map<String, dynamic>)
          ..kw$default = json['default'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..default2x = json['default2x'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default2x'] as Map<String, dynamic>)
          ..default128 = json['default_128'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default_128'] as Map<String, dynamic>)
          ..default256 = json['default_256'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default_256'] as Map<String, dynamic>)
          ..default512 = json['default_512'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default_512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('alt', instance.alt?.toJson());
  writeNotNull('alt2x', instance.alt2x?.toJson());
  writeNotNull('alt_128', instance.alt128?.toJson());
  writeNotNull('alt_256', instance.alt256?.toJson());
  writeNotNull('alt_512', instance.alt512?.toJson());
  writeNotNull('card_flat', instance.cardFlat?.toJson());
  writeNotNull('card_flat2x', instance.cardFlat2x?.toJson());
  writeNotNull('card_flat_128', instance.cardFlat128?.toJson());
  writeNotNull('card_flat_256', instance.cardFlat256?.toJson());
  writeNotNull('card_flat_512', instance.cardFlat512?.toJson());
  writeNotNull('dark', instance.dark?.toJson());
  writeNotNull('dark2x', instance.dark2x?.toJson());
  writeNotNull('dark_128', instance.dark128?.toJson());
  writeNotNull('dark_256', instance.dark256?.toJson());
  writeNotNull('dark_512', instance.dark512?.toJson());
  writeNotNull('flat', instance.flat?.toJson());
  writeNotNull('flat2x', instance.flat2x?.toJson());
  writeNotNull('flat_128', instance.flat128?.toJson());
  writeNotNull('flat_256', instance.flat256?.toJson());
  writeNotNull('flat_512', instance.flat512?.toJson());
  writeNotNull('light', instance.light?.toJson());
  writeNotNull('light2x', instance.light2x?.toJson());
  writeNotNull('light_128', instance.light128?.toJson());
  writeNotNull('light_256', instance.light256?.toJson());
  writeNotNull('light_512', instance.light512?.toJson());
  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('default2x', instance.default2x?.toJson());
  writeNotNull('default_128', instance.default128?.toJson());
  writeNotNull('default_256', instance.default256?.toJson());
  writeNotNull('default_512', instance.default512?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType()
          ..alt = json['alt'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['alt'] as Map<String, dynamic>)
          ..cardFlat = json['card_flat'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['card_flat'] as Map<String, dynamic>)
          ..dark = json['dark'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['dark'] as Map<String, dynamic>)
          ..flat = json['flat'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['flat'] as Map<String, dynamic>)
          ..light = json['light'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['light'] as Map<String, dynamic>)
          ..kw$default = json['default'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('alt', instance.alt?.toJson());
  writeNotNull('card_flat', instance.cardFlat?.toJson());
  writeNotNull('dark', instance.dark?.toJson());
  writeNotNull('flat', instance.flat?.toJson());
  writeNotNull('light', instance.light?.toJson());
  writeNotNull('default', instance.kw$default?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType()
          ..png = json['png'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..svg = json['svg'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType
                  .fromJson(json['svg'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('png', instance.png?.toJson());
  writeNotNull('svg', instance.svg?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..paymentType = $enumDecodeNullable(
              _$PaymentTypeEnumEnumMap, json['paymentType'],
              unknownValue: PaymentTypeEnum.artemisUnknown)
          ..materialIcon = json['materialIcon'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..images = json['images'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType
                  .fromJson(json['images'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('paymentType', _$PaymentTypeEnumEnumMap[instance.paymentType]);
  writeNotNull('materialIcon', instance.materialIcon);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('images', instance.images?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType()
          ..id = json['id'] as String
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..programName = json['programName'] as String?
          ..picture = json['picture'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..company = json['company'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'createdAt': instance.createdAt.toIso8601String(),
    'updatedAt': instance.updatedAt.toIso8601String(),
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('programName', instance.programName);
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('company', instance.company?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType()
          ..to = DateTime.parse(json['to'] as String)
          ..from = DateTime.parse(json['from'] as String)
          ..loyaltyProgram = json['loyaltyProgram'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType
                  .fromJson(json['loyaltyProgram'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType
            instance) {
  final val = <String, dynamic>{
    'to': instance.to.toIso8601String(),
    'from': instance.from.toIso8601String(),
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('loyaltyProgram', instance.loyaltyProgram?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType()
          ..id = json['id'] as String
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..name = json['name'] as String?
          ..title = json['title'] as String?
          ..email = (json['email'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..phone = (json['phone'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..website = json['website'] as String?
          ..subtitle = json['subtitle'] as String?
          ..currencies = (json['currencies'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..turnover = json['turnover'] as String?
          ..reference = json['reference'] as String?
          ..published = json['published'] as bool?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..brandColor = json['brandColor'] as String?
          ..isFollowed = json['isFollowed'] as bool?
          ..description = json['description'] as String?
          ..contactEmails = (json['contactEmails'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..averageCustomers = (json['averageCustomers'] as num?)?.toDouble()
          ..languages = (json['languages'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..picture = json['picture'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..outsidePictures = (json['outsidePictures'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..insidePictures = (json['insidePictures'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..openingHours = json['openingHours'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType
                  .fromJson(json['openingHours'] as Map<String, dynamic>)
          ..specialOffers = (json['specialOffers'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..locations = (json['locations'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..chatContact = (json['chatContact'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..socialMedia = (json['socialMedia'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..company = json['company'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>)
          ..posCategory = (json['posCategory'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..services = (json['services'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..paymentMethods = (json['paymentMethods'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..loyaltyPrograms = (json['loyaltyPrograms'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('tags', instance.tags);
  writeNotNull('name', instance.name);
  writeNotNull('title', instance.title);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone);
  writeNotNull('website', instance.website);
  writeNotNull('subtitle', instance.subtitle);
  writeNotNull(
      'currencies', instance.currencies?.map((e) => e.toJson()).toList());
  writeNotNull('turnover', instance.turnover);
  writeNotNull('reference', instance.reference);
  writeNotNull('published', instance.published);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('brandColor', instance.brandColor);
  writeNotNull('isFollowed', instance.isFollowed);
  writeNotNull('description', instance.description);
  writeNotNull('contactEmails', instance.contactEmails);
  writeNotNull('averageCustomers', instance.averageCustomers);
  writeNotNull(
      'languages', instance.languages?.map((e) => e.toJson()).toList());
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('outsidePictures',
      instance.outsidePictures?.map((e) => e.toJson()).toList());
  writeNotNull('insidePictures',
      instance.insidePictures?.map((e) => e.toJson()).toList());
  writeNotNull('openingHours', instance.openingHours?.toJson());
  writeNotNull(
      'specialOffers', instance.specialOffers?.map((e) => e.toJson()).toList());
  writeNotNull(
      'locations', instance.locations?.map((e) => e.toJson()).toList());
  writeNotNull(
      'chatContact', instance.chatContact?.map((e) => e.toJson()).toList());
  writeNotNull(
      'socialMedia', instance.socialMedia?.map((e) => e.toJson()).toList());
  writeNotNull('company', instance.company?.toJson());
  writeNotNull(
      'posCategory', instance.posCategory?.map((e) => e.toJson()).toList());
  writeNotNull('services', instance.services?.map((e) => e.toJson()).toList());
  writeNotNull('paymentMethods',
      instance.paymentMethods?.map((e) => e.toJson()).toList());
  writeNotNull('loyaltyPrograms',
      instance.loyaltyPrograms?.map((e) => e.toJson()).toList());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType()
          ..currency = json['currency'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType
                  .fromJson(json['currency'] as Map<String, dynamic>)
          ..kw$default = json['default'] as bool?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('currency', instance.currency?.toJson());
  writeNotNull('default', instance.kw$default);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..email = json['email'] as String?
          ..website = json['website'] as String?
          ..currencies = (json['currencies'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..phone = json['phone'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>)
          ..fax = json['fax'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType
                  .fromJson(json['fax'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..description = json['description'] as String?
          ..contactEmails = (json['contactEmails'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..address = json['address'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..company = json['company'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>)
          ..picture = json['picture'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('email', instance.email);
  writeNotNull('website', instance.website);
  writeNotNull(
      'currencies', instance.currencies?.map((e) => e.toJson()).toList());
  writeNotNull('phone', instance.phone?.toJson());
  writeNotNull('fax', instance.fax?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('description', instance.description);
  writeNotNull('contactEmails', instance.contactEmails);
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('company', instance.company?.toJson());
  writeNotNull('picture', instance.picture?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType()
          ..currency = json['currency'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType
                  .fromJson(json['currency'] as Map<String, dynamic>)
          ..kw$default = json['default'] as bool?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('currency', instance.currency?.toJson());
  writeNotNull('default', instance.kw$default);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType()
          ..id = json['id'] as String
          ..email = json['email'] as String?
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..website = json['website'] as String?
          ..contactEmails = (json['contactEmails'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..currencies = (json['currencies'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..picture = json['picture'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..company = json['company'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('email', instance.email);
  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('website', instance.website);
  writeNotNull('contactEmails', instance.contactEmails);
  writeNotNull(
      'currencies', instance.currencies?.map((e) => e.toJson()).toList());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('company', instance.company?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType()
          ..pos = json['pos'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType
                  .fromJson(json['pos'] as Map<String, dynamic>)
          ..wholesaler = json['wholesaler'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType
                  .fromJson(json['wholesaler'] as Map<String, dynamic>)
          ..manufacturer = json['manufacturer'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType
                  .fromJson(json['manufacturer'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('pos', instance.pos?.toJson());
  writeNotNull('wholesaler', instance.wholesaler?.toJson());
  writeNotNull('manufacturer', instance.manufacturer?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$FormDtoType
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType()
          ..id = json['id'] as String
          ..title = json['title'] as String
          ..type = $enumDecodeNullable(_$FormTypeEnumMap, json['type'],
              unknownValue: FormType.artemisUnknown)
          ..status = $enumDecodeNullable(_$FormStatusEnumMap, json['status'],
              unknownValue: FormStatus.artemisUnknown)
          ..description = json['description'] as String
          ..owner =
              UpdateQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType
                  .fromJson(json['owner'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$FormDtoTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$FormDtoType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'title': instance.title,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$FormTypeEnumMap[instance.type]);
  writeNotNull('status', _$FormStatusEnumMap[instance.status]);
  val['description'] = instance.description;
  val['owner'] = instance.owner.toJson();
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType
    _$UpdateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$ChallengeStepType
    _$UpdateQuestion$Mutation$QuestionDtoType$ChallengeStepTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$ChallengeStepType()
          ..id = json['id'] as String
          ..title = json['title'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$ChallengeStepTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$ChallengeStepType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextType
    _$UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextType()
          ..max = (json['max'] as num).toDouble()
          ..min = (json['min'] as num).toDouble();

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextTypeToJson(
            UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextType
                instance) =>
        <String, dynamic>{
          'max': instance.max,
          'min': instance.min,
        };

UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateType
    _$UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateType()
          ..outdated = json['outdated'] as bool
          ..interval = json['interval'] as bool;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateTypeToJson(
            UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateType
                instance) =>
        <String, dynamic>{
          'outdated': instance.outdated,
          'interval': instance.interval,
        };

UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberType
    _$UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberType()
          ..minValue = (json['minValue'] as num).toDouble()
          ..maxValue = (json['maxValue'] as num).toDouble()
          ..interval = json['interval'] as bool;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberTypeToJson(
            UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberType
                instance) =>
        <String, dynamic>{
          'minValue': instance.minValue,
          'maxValue': instance.maxValue,
          'interval': instance.interval,
        };

UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleType
    _$UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleType()
          ..leftLabel = json['leftLabel'] as String
          ..rightLabel = json['rightLabel'] as String;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleTypeToJson(
            UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleType
                instance) =>
        <String, dynamic>{
          'leftLabel': instance.leftLabel,
          'rightLabel': instance.rightLabel,
        };

UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureType
    _$UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType
    _$UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType()
          ..rank = (json['rank'] as num).toDouble()
          ..icon = json['icon'] as String?
          ..picture = json['picture'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType
            instance) {
  final val = <String, dynamic>{
    'rank': instance.rank,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('icon', instance.icon);
  writeNotNull('picture', instance.picture?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType
    _$UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType()
          ..levels = (json['levels'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('levels', instance.levels?.map((e) => e.toJson()).toList());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType
    _$UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType()
          ..text = json['text'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextType
                  .fromJson(json['text'] as Map<String, dynamic>)
          ..date = json['date'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateType
                  .fromJson(json['date'] as Map<String, dynamic>)
          ..number = json['number'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberType
                  .fromJson(json['number'] as Map<String, dynamic>)
          ..toggle = json['toggle'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleType
                  .fromJson(json['toggle'] as Map<String, dynamic>)
          ..smiley = json['smiley'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType
                  .fromJson(json['smiley'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsTypeToJson(
        UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('text', instance.text?.toJson());
  writeNotNull('date', instance.date?.toJson());
  writeNotNull('number', instance.number?.toJson());
  writeNotNull('toggle', instance.toggle?.toJson());
  writeNotNull('smiley', instance.smiley?.toJson());
  return val;
}

UpdateQuestion$Mutation$QuestionDtoType
    _$UpdateQuestion$Mutation$QuestionDtoTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateQuestion$Mutation$QuestionDtoType()
          ..id = json['id'] as String
          ..order = json['order'] as int?
          ..title = json['title'] as String?
          ..description = json['description'] as String?
          ..choices = (json['choices'] as List<dynamic>)
              .map((e) =>
                  UpdateQuestion$Mutation$QuestionDtoType$QuestionChoiceDtoType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..type = $enumDecodeNullable(_$QuestionTypeEnumEnumMap, json['type'],
              unknownValue: QuestionTypeEnum.artemisUnknown)
          ..form = json['form'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$FormDtoType.fromJson(
                  json['form'] as Map<String, dynamic>)
          ..challengeStep = json['challengeStep'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$ChallengeStepType
                  .fromJson(json['challengeStep'] as Map<String, dynamic>)
          ..settings = json['settings'] == null
              ? null
              : UpdateQuestion$Mutation$QuestionDtoType$QuestionSettingsType
                  .fromJson(json['settings'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic> _$UpdateQuestion$Mutation$QuestionDtoTypeToJson(
    UpdateQuestion$Mutation$QuestionDtoType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('order', instance.order);
  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  val['choices'] = instance.choices.map((e) => e.toJson()).toList();
  writeNotNull('type', _$QuestionTypeEnumEnumMap[instance.type]);
  writeNotNull('form', instance.form?.toJson());
  writeNotNull('challengeStep', instance.challengeStep?.toJson());
  writeNotNull('settings', instance.settings?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

UpdateQuestion$Mutation _$UpdateQuestion$MutationFromJson(
        Map<String, dynamic> json) =>
    UpdateQuestion$Mutation()
      ..updateQuestion = UpdateQuestion$Mutation$QuestionDtoType.fromJson(
          json['updateQuestion'] as Map<String, dynamic>);

Map<String, dynamic> _$UpdateQuestion$MutationToJson(
        UpdateQuestion$Mutation instance) =>
    <String, dynamic>{
      'updateQuestion': instance.updateQuestion.toJson(),
    };

ReorderQuestion$Mutation$QuestionDtoType$QuestionChoiceDtoType
    _$ReorderQuestion$Mutation$QuestionDtoType$QuestionChoiceDtoTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$QuestionChoiceDtoType()
          ..item = json['item'] as String
          ..enable = json['enable'] as bool?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$QuestionChoiceDtoTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$QuestionChoiceDtoType
            instance) {
  final val = <String, dynamic>{
    'item': instance.item,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('enable', instance.enable);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType()
          ..currency = json['currency'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType$CurrencyType
                  .fromJson(json['currency'] as Map<String, dynamic>)
          ..kw$default = json['default'] as bool?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('currency', instance.currency?.toJson());
  writeNotNull('default', instance.kw$default);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType()
          ..day = $enumDecodeNullable(_$DaysEnumMap, json['day'],
              unknownValue: Days.artemisUnknown)
          ..from = json['from'] as String?
          ..to = json['to'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('day', _$DaysEnumMap[instance.day]);
  writeNotNull('from', instance.from);
  writeNotNull('to', instance.to);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType()
          ..status = $enumDecodeNullable(_$OpeningStatusEnumMap, json['status'],
              unknownValue: OpeningStatus.artemisUnknown)
          ..hours = (json['hours'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType$OpeningHoursDayType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', _$OpeningStatusEnumMap[instance.status]);
  writeNotNull('hours', instance.hours?.map((e) => e.toJson()).toList());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType()
          ..day = $enumDecodeNullable(_$DaysEnumMap, json['day'],
              unknownValue: Days.artemisUnknown)
          ..from = json['from'] as String?
          ..to = json['to'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('day', _$DaysEnumMap[instance.day]);
  writeNotNull('from', instance.from);
  writeNotNull('to', instance.to);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType()
          ..offerType = $enumDecodeNullable(
              _$SpecialOffersTypeEnumMap, json['offerType'],
              unknownValue: SpecialOffersType.artemisUnknown)
          ..hours = (json['hours'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType$OpeningHoursDayType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('offerType', _$SpecialOffersTypeEnumMap[instance.offerType]);
  writeNotNull('hours', instance.hours?.map((e) => e.toJson()).toList());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType()
          ..size48 = json['size48'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size96 = json['size96'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size96'] as Map<String, dynamic>)
          ..size144 = json['size144'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size144'] as Map<String, dynamic>)
          ..size240 = json['size240'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size240'] as Map<String, dynamic>)
          ..size480 = json['size480'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType$PictureType
                  .fromJson(json['size480'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size96', instance.size96?.toJson());
  writeNotNull('size144', instance.size144?.toJson());
  writeNotNull('size240', instance.size240?.toJson());
  writeNotNull('size480', instance.size480?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType()
          ..svg = json['svg'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType$SocialImagesImagesSetType
                  .fromJson(json['png'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType()
          ..style = $enumDecode(_$SocialImageStyleEnumEnumMap, json['style'],
              unknownValue: SocialImageStyleEnum.artemisUnknown)
          ..images = (json['images'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType$SocialImagesImagesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType
            instance) {
  final val = <String, dynamic>{
    'style': _$SocialImageStyleEnumEnumMap[instance.style]!,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('images', instance.images?.map((e) => e.toJson()).toList());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..fontIcon = json['fontIcon'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..images = (json['images'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType$SocialImagesType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('fontIcon', instance.fontIcon);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('images', instance.images?.map((e) => e.toJson()).toList());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType()
          ..name = json['name'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType$SocialType
                  .fromJson(json['name'] as Map<String, dynamic>)
          ..value = json['value'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name?.toJson());
  writeNotNull('value', instance.value);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..mapPicture = json['mapPicture'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..picture = json['picture'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('mapPicture', instance.mapPicture);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('picture', instance.picture?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesType()
          ..id = json['id'] as String?
          ..index = json['index'] as int?
          ..name = json['name'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('id', instance.id);
  writeNotNull('index', instance.index);
  writeNotNull('name', instance.name);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType()
          ..alt = json['alt'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt'] as Map<String, dynamic>)
          ..alt2x = json['alt2x'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt2x'] as Map<String, dynamic>)
          ..alt128 = json['alt_128'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt_128'] as Map<String, dynamic>)
          ..alt256 = json['alt_256'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt_256'] as Map<String, dynamic>)
          ..alt512 = json['alt_512'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['alt_512'] as Map<String, dynamic>)
          ..cardFlat = json['card_flat'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat'] as Map<String, dynamic>)
          ..cardFlat2x = json['card_flat2x'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat2x'] as Map<String, dynamic>)
          ..cardFlat128 = json['card_flat_128'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat_128'] as Map<String, dynamic>)
          ..cardFlat256 = json['card_flat_256'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat_256'] as Map<String, dynamic>)
          ..cardFlat512 = json['card_flat_512'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['card_flat_512'] as Map<String, dynamic>)
          ..dark = json['dark'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark'] as Map<String, dynamic>)
          ..dark2x = json['dark2x'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark2x'] as Map<String, dynamic>)
          ..dark128 = json['dark_128'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark_128'] as Map<String, dynamic>)
          ..dark256 = json['dark_256'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark_256'] as Map<String, dynamic>)
          ..dark512 = json['dark_512'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['dark_512'] as Map<String, dynamic>)
          ..flat = json['flat'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat'] as Map<String, dynamic>)
          ..flat2x = json['flat2x'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat2x'] as Map<String, dynamic>)
          ..flat128 = json['flat_128'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat_128'] as Map<String, dynamic>)
          ..flat256 = json['flat_256'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat_256'] as Map<String, dynamic>)
          ..flat512 = json['flat_512'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['flat_512'] as Map<String, dynamic>)
          ..light = json['light'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light'] as Map<String, dynamic>)
          ..light2x = json['light2x'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light2x'] as Map<String, dynamic>)
          ..light128 = json['light_128'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light_128'] as Map<String, dynamic>)
          ..light256 = json['light_256'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light_256'] as Map<String, dynamic>)
          ..light512 = json['light_512'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['light_512'] as Map<String, dynamic>)
          ..kw$default = json['default'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..default2x = json['default2x'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default2x'] as Map<String, dynamic>)
          ..default128 = json['default_128'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default_128'] as Map<String, dynamic>)
          ..default256 = json['default_256'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default_256'] as Map<String, dynamic>)
          ..default512 = json['default_512'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType$PictureType
                  .fromJson(json['default_512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('alt', instance.alt?.toJson());
  writeNotNull('alt2x', instance.alt2x?.toJson());
  writeNotNull('alt_128', instance.alt128?.toJson());
  writeNotNull('alt_256', instance.alt256?.toJson());
  writeNotNull('alt_512', instance.alt512?.toJson());
  writeNotNull('card_flat', instance.cardFlat?.toJson());
  writeNotNull('card_flat2x', instance.cardFlat2x?.toJson());
  writeNotNull('card_flat_128', instance.cardFlat128?.toJson());
  writeNotNull('card_flat_256', instance.cardFlat256?.toJson());
  writeNotNull('card_flat_512', instance.cardFlat512?.toJson());
  writeNotNull('dark', instance.dark?.toJson());
  writeNotNull('dark2x', instance.dark2x?.toJson());
  writeNotNull('dark_128', instance.dark128?.toJson());
  writeNotNull('dark_256', instance.dark256?.toJson());
  writeNotNull('dark_512', instance.dark512?.toJson());
  writeNotNull('flat', instance.flat?.toJson());
  writeNotNull('flat2x', instance.flat2x?.toJson());
  writeNotNull('flat_128', instance.flat128?.toJson());
  writeNotNull('flat_256', instance.flat256?.toJson());
  writeNotNull('flat_512', instance.flat512?.toJson());
  writeNotNull('light', instance.light?.toJson());
  writeNotNull('light2x', instance.light2x?.toJson());
  writeNotNull('light_128', instance.light128?.toJson());
  writeNotNull('light_256', instance.light256?.toJson());
  writeNotNull('light_512', instance.light512?.toJson());
  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('default2x', instance.default2x?.toJson());
  writeNotNull('default_128', instance.default128?.toJson());
  writeNotNull('default_256', instance.default256?.toJson());
  writeNotNull('default_512', instance.default512?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType()
          ..alt = json['alt'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['alt'] as Map<String, dynamic>)
          ..cardFlat = json['card_flat'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['card_flat'] as Map<String, dynamic>)
          ..dark = json['dark'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['dark'] as Map<String, dynamic>)
          ..flat = json['flat'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['flat'] as Map<String, dynamic>)
          ..light = json['light'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['light'] as Map<String, dynamic>)
          ..kw$default = json['default'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('alt', instance.alt?.toJson());
  writeNotNull('card_flat', instance.cardFlat?.toJson());
  writeNotNull('dark', instance.dark?.toJson());
  writeNotNull('flat', instance.flat?.toJson());
  writeNotNull('light', instance.light?.toJson());
  writeNotNull('default', instance.kw$default?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType()
          ..png = json['png'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..svg = json['svg'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType$PaymentImagesSvgType
                  .fromJson(json['svg'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('png', instance.png?.toJson());
  writeNotNull('svg', instance.svg?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..paymentType = $enumDecodeNullable(
              _$PaymentTypeEnumEnumMap, json['paymentType'],
              unknownValue: PaymentTypeEnum.artemisUnknown)
          ..materialIcon = json['materialIcon'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..images = json['images'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType$PaymentImagesType
                  .fromJson(json['images'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('paymentType', _$PaymentTypeEnumEnumMap[instance.paymentType]);
  writeNotNull('materialIcon', instance.materialIcon);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('images', instance.images?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType()
          ..id = json['id'] as String
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..programName = json['programName'] as String?
          ..picture = json['picture'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..company = json['company'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'createdAt': instance.createdAt.toIso8601String(),
    'updatedAt': instance.updatedAt.toIso8601String(),
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('programName', instance.programName);
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('company', instance.company?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType()
          ..to = DateTime.parse(json['to'] as String)
          ..from = DateTime.parse(json['from'] as String)
          ..loyaltyProgram = json['loyaltyProgram'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType$LoyaltyProgramType
                  .fromJson(json['loyaltyProgram'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType
            instance) {
  final val = <String, dynamic>{
    'to': instance.to.toIso8601String(),
    'from': instance.from.toIso8601String(),
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('loyaltyProgram', instance.loyaltyProgram?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType()
          ..id = json['id'] as String
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..name = json['name'] as String?
          ..title = json['title'] as String?
          ..email = (json['email'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..phone = (json['phone'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..website = json['website'] as String?
          ..subtitle = json['subtitle'] as String?
          ..currencies = (json['currencies'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$TargetCurrencyType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..turnover = json['turnover'] as String?
          ..reference = json['reference'] as String?
          ..published = json['published'] as bool?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..brandColor = json['brandColor'] as String?
          ..isFollowed = json['isFollowed'] as bool?
          ..description = json['description'] as String?
          ..contactEmails = (json['contactEmails'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..averageCustomers = (json['averageCustomers'] as num?)?.toDouble()
          ..languages = (json['languages'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$LanguageType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..picture = json['picture'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..outsidePictures = (json['outsidePictures'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..insidePictures = (json['insidePictures'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..openingHours = json['openingHours'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$OpeningHoursType
                  .fromJson(json['openingHours'] as Map<String, dynamic>)
          ..specialOffers = (json['specialOffers'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SpecialOfferType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..locations = (json['locations'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$FullAddressType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..chatContact = (json['chatContact'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..socialMedia = (json['socialMedia'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$SocialValueType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..company = json['company'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>)
          ..posCategory = (json['posCategory'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSCategoryType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..services = (json['services'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSServicesType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..paymentMethods = (json['paymentMethods'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$PaymentType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..loyaltyPrograms = (json['loyaltyPrograms'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType$POSLoyaltyType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('tags', instance.tags);
  writeNotNull('name', instance.name);
  writeNotNull('title', instance.title);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone);
  writeNotNull('website', instance.website);
  writeNotNull('subtitle', instance.subtitle);
  writeNotNull(
      'currencies', instance.currencies?.map((e) => e.toJson()).toList());
  writeNotNull('turnover', instance.turnover);
  writeNotNull('reference', instance.reference);
  writeNotNull('published', instance.published);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('brandColor', instance.brandColor);
  writeNotNull('isFollowed', instance.isFollowed);
  writeNotNull('description', instance.description);
  writeNotNull('contactEmails', instance.contactEmails);
  writeNotNull('averageCustomers', instance.averageCustomers);
  writeNotNull(
      'languages', instance.languages?.map((e) => e.toJson()).toList());
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('outsidePictures',
      instance.outsidePictures?.map((e) => e.toJson()).toList());
  writeNotNull('insidePictures',
      instance.insidePictures?.map((e) => e.toJson()).toList());
  writeNotNull('openingHours', instance.openingHours?.toJson());
  writeNotNull(
      'specialOffers', instance.specialOffers?.map((e) => e.toJson()).toList());
  writeNotNull(
      'locations', instance.locations?.map((e) => e.toJson()).toList());
  writeNotNull(
      'chatContact', instance.chatContact?.map((e) => e.toJson()).toList());
  writeNotNull(
      'socialMedia', instance.socialMedia?.map((e) => e.toJson()).toList());
  writeNotNull('company', instance.company?.toJson());
  writeNotNull(
      'posCategory', instance.posCategory?.map((e) => e.toJson()).toList());
  writeNotNull('services', instance.services?.map((e) => e.toJson()).toList());
  writeNotNull('paymentMethods',
      instance.paymentMethods?.map((e) => e.toJson()).toList());
  writeNotNull('loyaltyPrograms',
      instance.loyaltyPrograms?.map((e) => e.toJson()).toList());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType()
          ..currency = json['currency'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType$CurrencyType
                  .fromJson(json['currency'] as Map<String, dynamic>)
          ..kw$default = json['default'] as bool?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('currency', instance.currency?.toJson());
  writeNotNull('default', instance.kw$default);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..email = json['email'] as String?
          ..website = json['website'] as String?
          ..currencies = (json['currencies'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$TargetCurrencyType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..phone = json['phone'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>)
          ..fax = json['fax'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$IPhoneType
                  .fromJson(json['fax'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..description = json['description'] as String?
          ..contactEmails = (json['contactEmails'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..address = json['address'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..company = json['company'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>)
          ..picture = json['picture'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('email', instance.email);
  writeNotNull('website', instance.website);
  writeNotNull(
      'currencies', instance.currencies?.map((e) => e.toJson()).toList());
  writeNotNull('phone', instance.phone?.toJson());
  writeNotNull('fax', instance.fax?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('description', instance.description);
  writeNotNull('contactEmails', instance.contactEmails);
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('company', instance.company?.toJson());
  writeNotNull('picture', instance.picture?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType()
          ..currency = json['currency'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType$CurrencyType
                  .fromJson(json['currency'] as Map<String, dynamic>)
          ..kw$default = json['default'] as bool?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('currency', instance.currency?.toJson());
  writeNotNull('default', instance.kw$default);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType()
          ..vat = json['vat'] as String?
          ..register = json['register'] as String?
          ..licence = json['licence'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('vat', instance.vat);
  writeNotNull('register', instance.register);
  writeNotNull('licence', instance.licence);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType()
          ..type = $enumDecodeNullable(_$ZoneTypesEnumEnumMap, json['type'],
              unknownValue: ZoneTypesEnum.artemisUnknown)
          ..coordinates = (json['coordinates'] as List<dynamic>?)
              ?.map((e) => (e as num).toDouble())
              .toList();

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$ZoneTypesEnumEnumMap[instance.type]);
  writeNotNull('coordinates', instance.coordinates);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType()
          ..number = json['number'] as String?
          ..countryCode = json['countryCode'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('countryCode', instance.countryCode);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType()
          ..name = json['name'] as String?
          ..phone = json['phone'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType$FullAddressOwnerPhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType()
          ..city = json['city'] as String?
          ..address = json['address'] as String?
          ..postCode = json['postCode'] as String?
          ..location = json['location'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$LonLatType
                  .fromJson(json['location'] as Map<String, dynamic>)
          ..country = json['country'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..state = json['state'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$StateType
                  .fromJson(json['state'] as Map<String, dynamic>)
          ..owner = json['owner'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType$FullAddressOwnerType
                  .fromJson(json['owner'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('city', instance.city);
  writeNotNull('address', instance.address);
  writeNotNull('postCode', instance.postCode);
  writeNotNull('location', instance.location?.toJson());
  writeNotNull('country', instance.country?.toJson());
  writeNotNull('state', instance.state?.toJson());
  writeNotNull('owner', instance.owner?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType()
          ..name = json['name'] as String
          ..type = $enumDecodeNullable(
              _$BankDetailsHolderTypeEnumEnumMap, json['type'],
              unknownValue: BankDetailsHolderTypeEnum.artemisUnknown)
          ..address =
              ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType
            instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$BankDetailsHolderTypeEnumEnumMap[instance.type]);
  val['address'] = instance.address.toJson();
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType()
          ..kw$default = json['default'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['default'] as Map<String, dynamic>)
          ..size16 = json['size16'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size16'] as Map<String, dynamic>)
          ..size24 = json['size24'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size24'] as Map<String, dynamic>)
          ..size32 = json['size32'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size32'] as Map<String, dynamic>)
          ..size48 = json['size48'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size48'] as Map<String, dynamic>)
          ..size64 = json['size64'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size64'] as Map<String, dynamic>)
          ..size128 = json['size128'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size128'] as Map<String, dynamic>)
          ..size256 = json['size256'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size256'] as Map<String, dynamic>)
          ..size512 = json['size512'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType$PictureType
                  .fromJson(json['size512'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('default', instance.kw$default?.toJson());
  writeNotNull('size16', instance.size16?.toJson());
  writeNotNull('size24', instance.size24?.toJson());
  writeNotNull('size32', instance.size32?.toJson());
  writeNotNull('size48', instance.size48?.toJson());
  writeNotNull('size64', instance.size64?.toJson());
  writeNotNull('size128', instance.size128?.toJson());
  writeNotNull('size256', instance.size256?.toJson());
  writeNotNull('size512', instance.size512?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType()
          ..svg = json['svg'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$PictureType
                  .fromJson(json['svg'] as Map<String, dynamic>)
          ..png = json['png'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType$BrowserLogoPngType
                  .fromJson(json['png'] as Map<String, dynamic>)
          ..icon = json['icon'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('svg', instance.svg?.toJson());
  writeNotNull('png', instance.png?.toJson());
  writeNotNull('icon', instance.icon);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..bic = json['bic'] as String?
          ..logo = json['logo'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType$BrowserLogoType
                  .fromJson(json['logo'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('bic', instance.bic);
  writeNotNull('logo', instance.logo?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType()
          ..id = json['id'] as String
          ..holder =
              ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankDetailsHolderType
                  .fromJson(json['holder'] as Map<String, dynamic>)
          ..account = json['account'] as String
          ..iban = json['iban'] as String?
          ..bank =
              ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType$BankType
                  .fromJson(json['bank'] as Map<String, dynamic>)
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'holder': instance.holder.toJson(),
    'account': instance.account,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('iban', instance.iban);
  val['bank'] = instance.bank.toJson();
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType()
          ..number = json['number'] as String?
          ..isValid = json['isValid'] as bool?
          ..countryCode = json['countryCode'] as String?
          ..validationNumber = json['validationNumber'] as int?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('number', instance.number);
  writeNotNull('isValid', instance.isValid);
  writeNotNull('countryCode', instance.countryCode);
  writeNotNull('validationNumber', instance.validationNumber);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType()
          ..website = json['website'] as String?
          ..email = json['email'] as String?
          ..phone = json['phone'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType$PhoneType
                  .fromJson(json['phone'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('website', instance.website);
  writeNotNull('email', instance.email);
  writeNotNull('phone', instance.phone?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType()
          ..id = json['id'] as String
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..legal = json['legal'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyLegalType
                  .fromJson(json['legal'] as Map<String, dynamic>)
          ..banks = (json['banks'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$BankDetailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..contact = json['contact'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType$CompanyContactDetailsType
                  .fromJson(json['contact'] as Map<String, dynamic>)
          ..logistic = json['logistic'] as bool?
          ..tags =
              (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList()
          ..externalId = json['externalId'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('legal', instance.legal?.toJson());
  writeNotNull('banks', instance.banks?.map((e) => e.toJson()).toList());
  writeNotNull('contact', instance.contact?.toJson());
  writeNotNull('logistic', instance.logistic);
  writeNotNull('tags', instance.tags);
  writeNotNull('externalId', instance.externalId);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType()
          ..id = json['id'] as String
          ..email = json['email'] as String?
          ..name = json['name'] as String?
          ..description = json['description'] as String?
          ..website = json['website'] as String?
          ..contactEmails = (json['contactEmails'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..currencies = (json['currencies'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$TargetCurrencyType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..picture = json['picture'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>)
          ..address = json['address'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$FullAddressType
                  .fromJson(json['address'] as Map<String, dynamic>)
          ..company = json['company'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType$CompanyType
                  .fromJson(json['company'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('email', instance.email);
  writeNotNull('name', instance.name);
  writeNotNull('description', instance.description);
  writeNotNull('website', instance.website);
  writeNotNull('contactEmails', instance.contactEmails);
  writeNotNull(
      'currencies', instance.currencies?.map((e) => e.toJson()).toList());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('picture', instance.picture?.toJson());
  writeNotNull('address', instance.address?.toJson());
  writeNotNull('company', instance.company?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType()
          ..pos = json['pos'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$PointOfSaleType
                  .fromJson(json['pos'] as Map<String, dynamic>)
          ..wholesaler = json['wholesaler'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$WholesalerType
                  .fromJson(json['wholesaler'] as Map<String, dynamic>)
          ..manufacturer = json['manufacturer'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType$ManufacturerType
                  .fromJson(json['manufacturer'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('pos', instance.pos?.toJson());
  writeNotNull('wholesaler', instance.wholesaler?.toJson());
  writeNotNull('manufacturer', instance.manufacturer?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$FormDtoType
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType()
          ..id = json['id'] as String
          ..title = json['title'] as String
          ..type = $enumDecodeNullable(_$FormTypeEnumMap, json['type'],
              unknownValue: FormType.artemisUnknown)
          ..status = $enumDecodeNullable(_$FormStatusEnumMap, json['status'],
              unknownValue: FormStatus.artemisUnknown)
          ..description = json['description'] as String
          ..owner =
              ReorderQuestion$Mutation$QuestionDtoType$FormDtoType$FormOwnerDtoType
                  .fromJson(json['owner'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$FormDtoTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$FormDtoType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'title': instance.title,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('type', _$FormTypeEnumMap[instance.type]);
  writeNotNull('status', _$FormStatusEnumMap[instance.status]);
  val['description'] = instance.description;
  val['owner'] = instance.owner.toJson();
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType
    _$ReorderQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType()
          ..videos = (json['videos'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList()
          ..deg360 = (json['deg360'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..pictures = (json['pictures'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType$PictureType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('videos', instance.videos);
  writeNotNull('deg360', instance.deg360?.map((e) => e.toJson()).toList());
  writeNotNull('pictures', instance.pictures?.map((e) => e.toJson()).toList());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$ChallengeStepType
    _$ReorderQuestion$Mutation$QuestionDtoType$ChallengeStepTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$ChallengeStepType()
          ..id = json['id'] as String
          ..title = json['title'] as String?
          ..description = json['description'] as String?
          ..media = json['media'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$ChallengeStepType$MediaType
                  .fromJson(json['media'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$ChallengeStepTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$ChallengeStepType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  writeNotNull('media', instance.media?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextType
    _$ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextType()
          ..max = (json['max'] as num).toDouble()
          ..min = (json['min'] as num).toDouble();

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextTypeToJson(
            ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextType
                instance) =>
        <String, dynamic>{
          'max': instance.max,
          'min': instance.min,
        };

ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateType
    _$ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateType()
          ..outdated = json['outdated'] as bool
          ..interval = json['interval'] as bool;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateTypeToJson(
            ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateType
                instance) =>
        <String, dynamic>{
          'outdated': instance.outdated,
          'interval': instance.interval,
        };

ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberType
    _$ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberType()
          ..minValue = (json['minValue'] as num).toDouble()
          ..maxValue = (json['maxValue'] as num).toDouble()
          ..interval = json['interval'] as bool;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberTypeToJson(
            ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberType
                instance) =>
        <String, dynamic>{
          'minValue': instance.minValue,
          'maxValue': instance.maxValue,
          'interval': instance.interval,
        };

ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleType
    _$ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleType()
          ..leftLabel = json['leftLabel'] as String
          ..rightLabel = json['rightLabel'] as String;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleTypeToJson(
            ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleType
                instance) =>
        <String, dynamic>{
          'leftLabel': instance.leftLabel,
          'rightLabel': instance.rightLabel,
        };

ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureType
    _$ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType
    _$ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType()
          ..rank = (json['rank'] as num).toDouble()
          ..icon = json['icon'] as String?
          ..picture = json['picture'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType$PictureType
                  .fromJson(json['picture'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType
            instance) {
  final val = <String, dynamic>{
    'rank': instance.rank,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('icon', instance.icon);
  writeNotNull('picture', instance.picture?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType
    _$ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType()
          ..levels = (json['levels'] as List<dynamic>?)
              ?.map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType$QuestionSettingsSmileyObjType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('levels', instance.levels?.map((e) => e.toJson()).toList());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType
    _$ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType()
          ..text = json['text'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsTextType
                  .fromJson(json['text'] as Map<String, dynamic>)
          ..date = json['date'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsDateType
                  .fromJson(json['date'] as Map<String, dynamic>)
          ..number = json['number'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsNumberType
                  .fromJson(json['number'] as Map<String, dynamic>)
          ..toggle = json['toggle'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsToggleType
                  .fromJson(json['toggle'] as Map<String, dynamic>)
          ..smiley = json['smiley'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType$QuestionSettingsSmileyType
                  .fromJson(json['smiley'] as Map<String, dynamic>);

Map<String, dynamic>
    _$ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsTypeToJson(
        ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('text', instance.text?.toJson());
  writeNotNull('date', instance.date?.toJson());
  writeNotNull('number', instance.number?.toJson());
  writeNotNull('toggle', instance.toggle?.toJson());
  writeNotNull('smiley', instance.smiley?.toJson());
  return val;
}

ReorderQuestion$Mutation$QuestionDtoType
    _$ReorderQuestion$Mutation$QuestionDtoTypeFromJson(
            Map<String, dynamic> json) =>
        ReorderQuestion$Mutation$QuestionDtoType()
          ..id = json['id'] as String
          ..order = json['order'] as int?
          ..title = json['title'] as String?
          ..description = json['description'] as String?
          ..choices = (json['choices'] as List<dynamic>)
              .map((e) =>
                  ReorderQuestion$Mutation$QuestionDtoType$QuestionChoiceDtoType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..type = $enumDecodeNullable(_$QuestionTypeEnumEnumMap, json['type'],
              unknownValue: QuestionTypeEnum.artemisUnknown)
          ..form = json['form'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$FormDtoType.fromJson(
                  json['form'] as Map<String, dynamic>)
          ..challengeStep = json['challengeStep'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$ChallengeStepType
                  .fromJson(json['challengeStep'] as Map<String, dynamic>)
          ..settings = json['settings'] == null
              ? null
              : ReorderQuestion$Mutation$QuestionDtoType$QuestionSettingsType
                  .fromJson(json['settings'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic> _$ReorderQuestion$Mutation$QuestionDtoTypeToJson(
    ReorderQuestion$Mutation$QuestionDtoType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('order', instance.order);
  writeNotNull('title', instance.title);
  writeNotNull('description', instance.description);
  val['choices'] = instance.choices.map((e) => e.toJson()).toList();
  writeNotNull('type', _$QuestionTypeEnumEnumMap[instance.type]);
  writeNotNull('form', instance.form?.toJson());
  writeNotNull('challengeStep', instance.challengeStep?.toJson());
  writeNotNull('settings', instance.settings?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

ReorderQuestion$Mutation _$ReorderQuestion$MutationFromJson(
        Map<String, dynamic> json) =>
    ReorderQuestion$Mutation()
      ..reorderQuestion = ReorderQuestion$Mutation$QuestionDtoType.fromJson(
          json['reorderQuestion'] as Map<String, dynamic>);

Map<String, dynamic> _$ReorderQuestion$MutationToJson(
        ReorderQuestion$Mutation instance) =>
    <String, dynamic>{
      'reorderQuestion': instance.reorderQuestion.toJson(),
    };

DeleteQuestion$Mutation$DeleteResponseDtoType
    _$DeleteQuestion$Mutation$DeleteResponseDtoTypeFromJson(
            Map<String, dynamic> json) =>
        DeleteQuestion$Mutation$DeleteResponseDtoType()
          ..success = json['success'] as bool
          ..message = json['message'] as String;

Map<String, dynamic> _$DeleteQuestion$Mutation$DeleteResponseDtoTypeToJson(
        DeleteQuestion$Mutation$DeleteResponseDtoType instance) =>
    <String, dynamic>{
      'success': instance.success,
      'message': instance.message,
    };

DeleteQuestion$Mutation _$DeleteQuestion$MutationFromJson(
        Map<String, dynamic> json) =>
    DeleteQuestion$Mutation()
      ..deleteQuestion = DeleteQuestion$Mutation$DeleteResponseDtoType.fromJson(
          json['deleteQuestion'] as Map<String, dynamic>);

Map<String, dynamic> _$DeleteQuestion$MutationToJson(
        DeleteQuestion$Mutation instance) =>
    <String, dynamic>{
      'deleteQuestion': instance.deleteQuestion.toJson(),
    };

QuestionArguments _$QuestionArgumentsFromJson(Map<String, dynamic> json) =>
    QuestionArguments(
      id: json['id'] as String,
    );

Map<String, dynamic> _$QuestionArgumentsToJson(QuestionArguments instance) =>
    <String, dynamic>{
      'id': instance.id,
    };

GetQuestionsByChallengeStepArguments
    _$GetQuestionsByChallengeStepArgumentsFromJson(Map<String, dynamic> json) =>
        GetQuestionsByChallengeStepArguments(
          id: json['id'] as String,
          pagination: json['pagination'] == null
              ? null
              : PaginationInput.fromJson(
                  json['pagination'] as Map<String, dynamic>),
        );

Map<String, dynamic> _$GetQuestionsByChallengeStepArgumentsToJson(
    GetQuestionsByChallengeStepArguments instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('pagination', instance.pagination?.toJson());
  return val;
}

CreateQuestionArguments _$CreateQuestionArgumentsFromJson(
        Map<String, dynamic> json) =>
    CreateQuestionArguments(
      input: QuestionInput.fromJson(json['input'] as Map<String, dynamic>),
    );

Map<String, dynamic> _$CreateQuestionArgumentsToJson(
        CreateQuestionArguments instance) =>
    <String, dynamic>{
      'input': instance.input.toJson(),
    };

UpdateQuestionArguments _$UpdateQuestionArgumentsFromJson(
        Map<String, dynamic> json) =>
    UpdateQuestionArguments(
      id: json['id'] as String,
      input: QuestionInput.fromJson(json['input'] as Map<String, dynamic>),
    );

Map<String, dynamic> _$UpdateQuestionArgumentsToJson(
        UpdateQuestionArguments instance) =>
    <String, dynamic>{
      'id': instance.id,
      'input': instance.input.toJson(),
    };

ReorderQuestionArguments _$ReorderQuestionArgumentsFromJson(
        Map<String, dynamic> json) =>
    ReorderQuestionArguments(
      id: json['id'] as String,
      order: json['order'] as int,
    );

Map<String, dynamic> _$ReorderQuestionArgumentsToJson(
        ReorderQuestionArguments instance) =>
    <String, dynamic>{
      'id': instance.id,
      'order': instance.order,
    };

DeleteQuestionArguments _$DeleteQuestionArgumentsFromJson(
        Map<String, dynamic> json) =>
    DeleteQuestionArguments(
      id: json['id'] as String,
    );

Map<String, dynamic> _$DeleteQuestionArgumentsToJson(
        DeleteQuestionArguments instance) =>
    <String, dynamic>{
      'id': instance.id,
    };
