// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

GetOrderSettingsByTarget$Query$OrderSettingsFullType$TimeFromToType
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$TimeFromToTypeFromJson(
            Map<String, dynamic> json) =>
        GetOrderSettingsByTarget$Query$OrderSettingsFullType$TimeFromToType()
          ..from = json['from'] as String?
          ..to = json['to'] as String?;

Map<String, dynamic>
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$TimeFromToTypeToJson(
        GetOrderSettingsByTarget$Query$OrderSettingsFullType$TimeFromToType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('from', instance.from);
  writeNotNull('to', instance.to);
  return val;
}

GetOrderSettingsByTarget$Query$OrderSettingsFullType$MonthDaysType
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$MonthDaysTypeFromJson(
            Map<String, dynamic> json) =>
        GetOrderSettingsByTarget$Query$OrderSettingsFullType$MonthDaysType()
          ..month = json['month'] as int
          ..days =
              (json['days'] as List<dynamic>?)?.map((e) => e as int).toList();

Map<String, dynamic>
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$MonthDaysTypeToJson(
        GetOrderSettingsByTarget$Query$OrderSettingsFullType$MonthDaysType
            instance) {
  final val = <String, dynamic>{
    'month': instance.month,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('days', instance.days);
  return val;
}

GetOrderSettingsByTarget$Query$OrderSettingsFullType$CountryType$PictureType
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetOrderSettingsByTarget$Query$OrderSettingsFullType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$CountryType$PictureTypeToJson(
        GetOrderSettingsByTarget$Query$OrderSettingsFullType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetOrderSettingsByTarget$Query$OrderSettingsFullType$CountryType
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetOrderSettingsByTarget$Query$OrderSettingsFullType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetOrderSettingsByTarget$Query$OrderSettingsFullType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetOrderSettingsByTarget$Query$OrderSettingsFullType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$CountryTypeToJson(
        GetOrderSettingsByTarget$Query$OrderSettingsFullType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateType$CountryType$PictureType
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateType$CountryType$PictureTypeToJson(
        GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateType$CountryType
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateType$CountryTypeToJson(
        GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateType$PictureType
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateType$PictureTypeToJson(
        GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateType
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateTypeToJson(
        GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

const _$StateCapitalEnumEnumMap = {
  StateCapitalEnum.primary: 'PRIMARY',
  StateCapitalEnum.admin: 'ADMIN',
  StateCapitalEnum.minor: 'MINOR',
  StateCapitalEnum.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

GetOrderSettingsByTarget$Query$OrderSettingsFullType$OrderSettingsExtraFeesType
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$OrderSettingsExtraFeesTypeFromJson(
            Map<String, dynamic> json) =>
        GetOrderSettingsByTarget$Query$OrderSettingsFullType$OrderSettingsExtraFeesType()
          ..key = json['key'] as String?
          ..value = json['value'] as String?;

Map<String, dynamic>
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$OrderSettingsExtraFeesTypeToJson(
        GetOrderSettingsByTarget$Query$OrderSettingsFullType$OrderSettingsExtraFeesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('key', instance.key);
  writeNotNull('value', instance.value);
  return val;
}

GetOrderSettingsByTarget$Query$OrderSettingsFullType$OrderSettingsEmailsType
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$OrderSettingsEmailsTypeFromJson(
            Map<String, dynamic> json) =>
        GetOrderSettingsByTarget$Query$OrderSettingsFullType$OrderSettingsEmailsType()
          ..definition = $enumDecodeNullable(
              _$OrderEmailActionEnumEnumMap, json['definition'],
              unknownValue: OrderEmailActionEnum.artemisUnknown)
          ..enabled = json['enabled'] as bool?;

Map<String, dynamic>
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$OrderSettingsEmailsTypeToJson(
        GetOrderSettingsByTarget$Query$OrderSettingsFullType$OrderSettingsEmailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull(
      'definition', _$OrderEmailActionEnumEnumMap[instance.definition]);
  writeNotNull('enabled', instance.enabled);
  return val;
}

const _$OrderEmailActionEnumEnumMap = {
  OrderEmailActionEnum.orderCreated: 'ORDER_CREATED',
  OrderEmailActionEnum.productConfirmed: 'PRODUCT_CONFIRMED',
  OrderEmailActionEnum.productDelivered: 'PRODUCT_DELIVERED',
  OrderEmailActionEnum.productCanceled: 'PRODUCT_CANCELED',
  OrderEmailActionEnum.productPickupReady: 'PRODUCT_PICKUP_READY',
  OrderEmailActionEnum.artemisUnknown: 'ARTEMIS_UNKNOWN',
};

GetOrderSettingsByTarget$Query$OrderSettingsFullType$TargetType$PointOfSaleType
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$TargetType$PointOfSaleTypeFromJson(
            Map<String, dynamic> json) =>
        GetOrderSettingsByTarget$Query$OrderSettingsFullType$TargetType$PointOfSaleType()
          ..id = json['id'] as String;

Map<String, dynamic>
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$TargetType$PointOfSaleTypeToJson(
            GetOrderSettingsByTarget$Query$OrderSettingsFullType$TargetType$PointOfSaleType
                instance) =>
        <String, dynamic>{
          'id': instance.id,
        };

GetOrderSettingsByTarget$Query$OrderSettingsFullType$TargetType$WholesalerType
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$TargetType$WholesalerTypeFromJson(
            Map<String, dynamic> json) =>
        GetOrderSettingsByTarget$Query$OrderSettingsFullType$TargetType$WholesalerType()
          ..id = json['id'] as String;

Map<String, dynamic>
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$TargetType$WholesalerTypeToJson(
            GetOrderSettingsByTarget$Query$OrderSettingsFullType$TargetType$WholesalerType
                instance) =>
        <String, dynamic>{
          'id': instance.id,
        };

GetOrderSettingsByTarget$Query$OrderSettingsFullType$TargetType$ManufacturerType
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$TargetType$ManufacturerTypeFromJson(
            Map<String, dynamic> json) =>
        GetOrderSettingsByTarget$Query$OrderSettingsFullType$TargetType$ManufacturerType()
          ..id = json['id'] as String;

Map<String, dynamic>
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$TargetType$ManufacturerTypeToJson(
            GetOrderSettingsByTarget$Query$OrderSettingsFullType$TargetType$ManufacturerType
                instance) =>
        <String, dynamic>{
          'id': instance.id,
        };

GetOrderSettingsByTarget$Query$OrderSettingsFullType$TargetType
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$TargetTypeFromJson(
            Map<String, dynamic> json) =>
        GetOrderSettingsByTarget$Query$OrderSettingsFullType$TargetType()
          ..pos = json['pos'] == null
              ? null
              : GetOrderSettingsByTarget$Query$OrderSettingsFullType$TargetType$PointOfSaleType
                  .fromJson(json['pos'] as Map<String, dynamic>)
          ..wholesaler = json['wholesaler'] == null
              ? null
              : GetOrderSettingsByTarget$Query$OrderSettingsFullType$TargetType$WholesalerType
                  .fromJson(json['wholesaler'] as Map<String, dynamic>)
          ..manufacturer = json['manufacturer'] == null
              ? null
              : GetOrderSettingsByTarget$Query$OrderSettingsFullType$TargetType$ManufacturerType
                  .fromJson(json['manufacturer'] as Map<String, dynamic>);

Map<String, dynamic>
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullType$TargetTypeToJson(
        GetOrderSettingsByTarget$Query$OrderSettingsFullType$TargetType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('pos', instance.pos?.toJson());
  writeNotNull('wholesaler', instance.wholesaler?.toJson());
  writeNotNull('manufacturer', instance.manufacturer?.toJson());
  return val;
}

GetOrderSettingsByTarget$Query$OrderSettingsFullType
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullTypeFromJson(
            Map<String, dynamic> json) =>
        GetOrderSettingsByTarget$Query$OrderSettingsFullType()
          ..id = json['id'] as String
          ..pickup = json['pickup'] as bool?
          ..delivery = json['delivery'] as bool?
          ..mobilePickup = json['mobilePickup'] as bool?
          ..portalPickup = json['portalPickup'] as bool?
          ..pickupTime = json['pickupTime'] == null
              ? null
              : GetOrderSettingsByTarget$Query$OrderSettingsFullType$TimeFromToType
                  .fromJson(json['pickupTime'] as Map<String, dynamic>)
          ..facebookPickup = json['facebookPickup'] as bool?
          ..mobileDelivery = json['mobileDelivery'] as bool?
          ..portalDelivery = json['portalDelivery'] as bool?
          ..showMenuInPortal = json['showMenuInPortal'] as bool?
          ..deliveryTime = json['deliveryTime'] == null
              ? null
              : GetOrderSettingsByTarget$Query$OrderSettingsFullType$TimeFromToType
                  .fromJson(json['deliveryTime'] as Map<String, dynamic>)
          ..facebookDelivery = json['facebookDelivery'] as bool?
          ..nonPickupDays = (json['nonPickupDays'] as List<dynamic>?)
              ?.map((e) =>
                  GetOrderSettingsByTarget$Query$OrderSettingsFullType$MonthDaysType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..nonDeliveryDays = (json['nonDeliveryDays'] as List<dynamic>?)
              ?.map((e) =>
                  GetOrderSettingsByTarget$Query$OrderSettingsFullType$MonthDaysType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..deliveryCountries = (json['deliveryCountries'] as List<dynamic>?)
              ?.map((e) =>
                  GetOrderSettingsByTarget$Query$OrderSettingsFullType$CountryType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..deliveryStates = (json['deliveryStates'] as List<dynamic>?)
              ?.map((e) =>
                  GetOrderSettingsByTarget$Query$OrderSettingsFullType$StateType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..extraFees = (json['extraFees'] as List<dynamic>?)
              ?.map((e) =>
                  GetOrderSettingsByTarget$Query$OrderSettingsFullType$OrderSettingsExtraFeesType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..emails = (json['emails'] as List<dynamic>?)
              ?.map((e) =>
                  GetOrderSettingsByTarget$Query$OrderSettingsFullType$OrderSettingsEmailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..target =
              GetOrderSettingsByTarget$Query$OrderSettingsFullType$TargetType
                  .fromJson(json['target'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic>
    _$GetOrderSettingsByTarget$Query$OrderSettingsFullTypeToJson(
        GetOrderSettingsByTarget$Query$OrderSettingsFullType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('pickup', instance.pickup);
  writeNotNull('delivery', instance.delivery);
  writeNotNull('mobilePickup', instance.mobilePickup);
  writeNotNull('portalPickup', instance.portalPickup);
  writeNotNull('pickupTime', instance.pickupTime?.toJson());
  writeNotNull('facebookPickup', instance.facebookPickup);
  writeNotNull('mobileDelivery', instance.mobileDelivery);
  writeNotNull('portalDelivery', instance.portalDelivery);
  writeNotNull('showMenuInPortal', instance.showMenuInPortal);
  writeNotNull('deliveryTime', instance.deliveryTime?.toJson());
  writeNotNull('facebookDelivery', instance.facebookDelivery);
  writeNotNull(
      'nonPickupDays', instance.nonPickupDays?.map((e) => e.toJson()).toList());
  writeNotNull('nonDeliveryDays',
      instance.nonDeliveryDays?.map((e) => e.toJson()).toList());
  writeNotNull('deliveryCountries',
      instance.deliveryCountries?.map((e) => e.toJson()).toList());
  writeNotNull('deliveryStates',
      instance.deliveryStates?.map((e) => e.toJson()).toList());
  writeNotNull(
      'extraFees', instance.extraFees?.map((e) => e.toJson()).toList());
  writeNotNull('emails', instance.emails?.map((e) => e.toJson()).toList());
  val['target'] = instance.target.toJson();
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

GetOrderSettingsByTarget$Query _$GetOrderSettingsByTarget$QueryFromJson(
        Map<String, dynamic> json) =>
    GetOrderSettingsByTarget$Query()
      ..getOrderSettingsByTarget =
          GetOrderSettingsByTarget$Query$OrderSettingsFullType.fromJson(
              json['getOrderSettingsByTarget'] as Map<String, dynamic>);

Map<String, dynamic> _$GetOrderSettingsByTarget$QueryToJson(
        GetOrderSettingsByTarget$Query instance) =>
    <String, dynamic>{
      'getOrderSettingsByTarget': instance.getOrderSettingsByTarget.toJson(),
    };

TargetACIInput _$TargetACIInputFromJson(Map<String, dynamic> json) =>
    TargetACIInput(
      pos: json['pos'] as String?,
      wholesaler: json['wholesaler'] as String?,
      manufacturer: json['manufacturer'] as String?,
      user: json['user'] as String?,
    );

Map<String, dynamic> _$TargetACIInputToJson(TargetACIInput instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('pos', instance.pos);
  writeNotNull('wholesaler', instance.wholesaler);
  writeNotNull('manufacturer', instance.manufacturer);
  writeNotNull('user', instance.user);
  return val;
}

CreateOrderSettings$Mutation$OrderSettingsFullType$TimeFromToType
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$TimeFromToTypeFromJson(
            Map<String, dynamic> json) =>
        CreateOrderSettings$Mutation$OrderSettingsFullType$TimeFromToType()
          ..from = json['from'] as String?
          ..to = json['to'] as String?;

Map<String, dynamic>
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$TimeFromToTypeToJson(
        CreateOrderSettings$Mutation$OrderSettingsFullType$TimeFromToType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('from', instance.from);
  writeNotNull('to', instance.to);
  return val;
}

CreateOrderSettings$Mutation$OrderSettingsFullType$MonthDaysType
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$MonthDaysTypeFromJson(
            Map<String, dynamic> json) =>
        CreateOrderSettings$Mutation$OrderSettingsFullType$MonthDaysType()
          ..month = json['month'] as int
          ..days =
              (json['days'] as List<dynamic>?)?.map((e) => e as int).toList();

Map<String, dynamic>
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$MonthDaysTypeToJson(
        CreateOrderSettings$Mutation$OrderSettingsFullType$MonthDaysType
            instance) {
  final val = <String, dynamic>{
    'month': instance.month,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('days', instance.days);
  return val;
}

CreateOrderSettings$Mutation$OrderSettingsFullType$CountryType$PictureType
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateOrderSettings$Mutation$OrderSettingsFullType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$CountryType$PictureTypeToJson(
        CreateOrderSettings$Mutation$OrderSettingsFullType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateOrderSettings$Mutation$OrderSettingsFullType$CountryType
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        CreateOrderSettings$Mutation$OrderSettingsFullType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateOrderSettings$Mutation$OrderSettingsFullType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateOrderSettings$Mutation$OrderSettingsFullType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$CountryTypeToJson(
        CreateOrderSettings$Mutation$OrderSettingsFullType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryType$PictureType
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryType$PictureTypeToJson(
        CreateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryType
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        CreateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryTypeToJson(
        CreateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateOrderSettings$Mutation$OrderSettingsFullType$StateType$PictureType
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateOrderSettings$Mutation$OrderSettingsFullType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$StateType$PictureTypeToJson(
        CreateOrderSettings$Mutation$OrderSettingsFullType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateOrderSettings$Mutation$OrderSettingsFullType$StateType
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        CreateOrderSettings$Mutation$OrderSettingsFullType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : CreateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateOrderSettings$Mutation$OrderSettingsFullType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateOrderSettings$Mutation$OrderSettingsFullType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$StateTypeToJson(
        CreateOrderSettings$Mutation$OrderSettingsFullType$StateType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateOrderSettings$Mutation$OrderSettingsFullType$OrderSettingsExtraFeesType
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$OrderSettingsExtraFeesTypeFromJson(
            Map<String, dynamic> json) =>
        CreateOrderSettings$Mutation$OrderSettingsFullType$OrderSettingsExtraFeesType()
          ..key = json['key'] as String?
          ..value = json['value'] as String?;

Map<String, dynamic>
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$OrderSettingsExtraFeesTypeToJson(
        CreateOrderSettings$Mutation$OrderSettingsFullType$OrderSettingsExtraFeesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('key', instance.key);
  writeNotNull('value', instance.value);
  return val;
}

CreateOrderSettings$Mutation$OrderSettingsFullType$OrderSettingsEmailsType
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$OrderSettingsEmailsTypeFromJson(
            Map<String, dynamic> json) =>
        CreateOrderSettings$Mutation$OrderSettingsFullType$OrderSettingsEmailsType()
          ..definition = $enumDecodeNullable(
              _$OrderEmailActionEnumEnumMap, json['definition'],
              unknownValue: OrderEmailActionEnum.artemisUnknown)
          ..enabled = json['enabled'] as bool?;

Map<String, dynamic>
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$OrderSettingsEmailsTypeToJson(
        CreateOrderSettings$Mutation$OrderSettingsFullType$OrderSettingsEmailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull(
      'definition', _$OrderEmailActionEnumEnumMap[instance.definition]);
  writeNotNull('enabled', instance.enabled);
  return val;
}

CreateOrderSettings$Mutation$OrderSettingsFullType$TargetType$PointOfSaleType
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$TargetType$PointOfSaleTypeFromJson(
            Map<String, dynamic> json) =>
        CreateOrderSettings$Mutation$OrderSettingsFullType$TargetType$PointOfSaleType()
          ..id = json['id'] as String;

Map<String, dynamic>
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$TargetType$PointOfSaleTypeToJson(
            CreateOrderSettings$Mutation$OrderSettingsFullType$TargetType$PointOfSaleType
                instance) =>
        <String, dynamic>{
          'id': instance.id,
        };

CreateOrderSettings$Mutation$OrderSettingsFullType$TargetType$WholesalerType
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$TargetType$WholesalerTypeFromJson(
            Map<String, dynamic> json) =>
        CreateOrderSettings$Mutation$OrderSettingsFullType$TargetType$WholesalerType()
          ..id = json['id'] as String;

Map<String, dynamic>
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$TargetType$WholesalerTypeToJson(
            CreateOrderSettings$Mutation$OrderSettingsFullType$TargetType$WholesalerType
                instance) =>
        <String, dynamic>{
          'id': instance.id,
        };

CreateOrderSettings$Mutation$OrderSettingsFullType$TargetType$ManufacturerType
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$TargetType$ManufacturerTypeFromJson(
            Map<String, dynamic> json) =>
        CreateOrderSettings$Mutation$OrderSettingsFullType$TargetType$ManufacturerType()
          ..id = json['id'] as String;

Map<String, dynamic>
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$TargetType$ManufacturerTypeToJson(
            CreateOrderSettings$Mutation$OrderSettingsFullType$TargetType$ManufacturerType
                instance) =>
        <String, dynamic>{
          'id': instance.id,
        };

CreateOrderSettings$Mutation$OrderSettingsFullType$TargetType
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$TargetTypeFromJson(
            Map<String, dynamic> json) =>
        CreateOrderSettings$Mutation$OrderSettingsFullType$TargetType()
          ..pos = json['pos'] == null
              ? null
              : CreateOrderSettings$Mutation$OrderSettingsFullType$TargetType$PointOfSaleType
                  .fromJson(json['pos'] as Map<String, dynamic>)
          ..wholesaler = json['wholesaler'] == null
              ? null
              : CreateOrderSettings$Mutation$OrderSettingsFullType$TargetType$WholesalerType
                  .fromJson(json['wholesaler'] as Map<String, dynamic>)
          ..manufacturer = json['manufacturer'] == null
              ? null
              : CreateOrderSettings$Mutation$OrderSettingsFullType$TargetType$ManufacturerType
                  .fromJson(json['manufacturer'] as Map<String, dynamic>);

Map<String, dynamic>
    _$CreateOrderSettings$Mutation$OrderSettingsFullType$TargetTypeToJson(
        CreateOrderSettings$Mutation$OrderSettingsFullType$TargetType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('pos', instance.pos?.toJson());
  writeNotNull('wholesaler', instance.wholesaler?.toJson());
  writeNotNull('manufacturer', instance.manufacturer?.toJson());
  return val;
}

CreateOrderSettings$Mutation$OrderSettingsFullType
    _$CreateOrderSettings$Mutation$OrderSettingsFullTypeFromJson(
            Map<String, dynamic> json) =>
        CreateOrderSettings$Mutation$OrderSettingsFullType()
          ..id = json['id'] as String
          ..pickup = json['pickup'] as bool?
          ..delivery = json['delivery'] as bool?
          ..mobilePickup = json['mobilePickup'] as bool?
          ..portalPickup = json['portalPickup'] as bool?
          ..pickupTime = json['pickupTime'] == null
              ? null
              : CreateOrderSettings$Mutation$OrderSettingsFullType$TimeFromToType
                  .fromJson(json['pickupTime'] as Map<String, dynamic>)
          ..facebookPickup = json['facebookPickup'] as bool?
          ..mobileDelivery = json['mobileDelivery'] as bool?
          ..portalDelivery = json['portalDelivery'] as bool?
          ..showMenuInPortal = json['showMenuInPortal'] as bool?
          ..deliveryTime = json['deliveryTime'] == null
              ? null
              : CreateOrderSettings$Mutation$OrderSettingsFullType$TimeFromToType
                  .fromJson(json['deliveryTime'] as Map<String, dynamic>)
          ..facebookDelivery = json['facebookDelivery'] as bool?
          ..nonPickupDays = (json['nonPickupDays'] as List<dynamic>?)
              ?.map((e) =>
                  CreateOrderSettings$Mutation$OrderSettingsFullType$MonthDaysType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..nonDeliveryDays = (json['nonDeliveryDays'] as List<dynamic>?)
              ?.map((e) =>
                  CreateOrderSettings$Mutation$OrderSettingsFullType$MonthDaysType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..deliveryCountries = (json['deliveryCountries'] as List<dynamic>?)
              ?.map((e) =>
                  CreateOrderSettings$Mutation$OrderSettingsFullType$CountryType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..deliveryStates = (json['deliveryStates'] as List<dynamic>?)
              ?.map((e) =>
                  CreateOrderSettings$Mutation$OrderSettingsFullType$StateType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..extraFees = (json['extraFees'] as List<dynamic>?)
              ?.map((e) =>
                  CreateOrderSettings$Mutation$OrderSettingsFullType$OrderSettingsExtraFeesType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..emails = (json['emails'] as List<dynamic>?)
              ?.map((e) =>
                  CreateOrderSettings$Mutation$OrderSettingsFullType$OrderSettingsEmailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..target =
              CreateOrderSettings$Mutation$OrderSettingsFullType$TargetType
                  .fromJson(json['target'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic> _$CreateOrderSettings$Mutation$OrderSettingsFullTypeToJson(
    CreateOrderSettings$Mutation$OrderSettingsFullType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('pickup', instance.pickup);
  writeNotNull('delivery', instance.delivery);
  writeNotNull('mobilePickup', instance.mobilePickup);
  writeNotNull('portalPickup', instance.portalPickup);
  writeNotNull('pickupTime', instance.pickupTime?.toJson());
  writeNotNull('facebookPickup', instance.facebookPickup);
  writeNotNull('mobileDelivery', instance.mobileDelivery);
  writeNotNull('portalDelivery', instance.portalDelivery);
  writeNotNull('showMenuInPortal', instance.showMenuInPortal);
  writeNotNull('deliveryTime', instance.deliveryTime?.toJson());
  writeNotNull('facebookDelivery', instance.facebookDelivery);
  writeNotNull(
      'nonPickupDays', instance.nonPickupDays?.map((e) => e.toJson()).toList());
  writeNotNull('nonDeliveryDays',
      instance.nonDeliveryDays?.map((e) => e.toJson()).toList());
  writeNotNull('deliveryCountries',
      instance.deliveryCountries?.map((e) => e.toJson()).toList());
  writeNotNull('deliveryStates',
      instance.deliveryStates?.map((e) => e.toJson()).toList());
  writeNotNull(
      'extraFees', instance.extraFees?.map((e) => e.toJson()).toList());
  writeNotNull('emails', instance.emails?.map((e) => e.toJson()).toList());
  val['target'] = instance.target.toJson();
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

CreateOrderSettings$Mutation _$CreateOrderSettings$MutationFromJson(
        Map<String, dynamic> json) =>
    CreateOrderSettings$Mutation()
      ..createOrderSettings =
          CreateOrderSettings$Mutation$OrderSettingsFullType.fromJson(
              json['createOrderSettings'] as Map<String, dynamic>);

Map<String, dynamic> _$CreateOrderSettings$MutationToJson(
        CreateOrderSettings$Mutation instance) =>
    <String, dynamic>{
      'createOrderSettings': instance.createOrderSettings.toJson(),
    };

OrderSettingsInput _$OrderSettingsInputFromJson(Map<String, dynamic> json) =>
    OrderSettingsInput(
      target: TargetACIInput.fromJson(json['target'] as Map<String, dynamic>),
      pickupTime: json['pickupTime'] == null
          ? null
          : TimeFromToInput.fromJson(
              json['pickupTime'] as Map<String, dynamic>),
      pickup: json['pickup'] as bool?,
      delivery: json['delivery'] as bool?,
      showMenuInPortal: json['showMenuInPortal'] as bool?,
      mobilePickup: json['mobilePickup'] as bool?,
      portalPickup: json['portalPickup'] as bool?,
      facebookPickup: json['facebookPickup'] as bool?,
      deliveryTime: json['deliveryTime'] == null
          ? null
          : TimeFromToInput.fromJson(
              json['deliveryTime'] as Map<String, dynamic>),
      mobileDelivery: json['mobileDelivery'] as bool?,
      portalDelivery: json['portalDelivery'] as bool?,
      facebookDelivery: json['facebookDelivery'] as bool?,
      nonDeliveryDays: (json['nonDeliveryDays'] as List<dynamic>?)
          ?.map((e) => MonthDaysInput.fromJson(e as Map<String, dynamic>))
          .toList(),
      nonPickupDays: (json['nonPickupDays'] as List<dynamic>?)
          ?.map((e) => MonthDaysInput.fromJson(e as Map<String, dynamic>))
          .toList(),
      deliveryCountries: (json['deliveryCountries'] as List<dynamic>?)
          ?.map((e) => e as String)
          .toList(),
      deliveryStates: (json['deliveryStates'] as List<dynamic>?)
          ?.map((e) => e as String)
          .toList(),
      extraFees: (json['extraFees'] as List<dynamic>?)
          ?.map((e) =>
              OrderSettingsExtraFeesInput.fromJson(e as Map<String, dynamic>))
          .toList(),
      emails: (json['emails'] as List<dynamic>?)
          ?.map((e) =>
              OrderSettingsEmailsInput.fromJson(e as Map<String, dynamic>))
          .toList(),
    );

Map<String, dynamic> _$OrderSettingsInputToJson(OrderSettingsInput instance) {
  final val = <String, dynamic>{
    'target': instance.target.toJson(),
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('pickupTime', instance.pickupTime?.toJson());
  writeNotNull('pickup', instance.pickup);
  writeNotNull('delivery', instance.delivery);
  writeNotNull('showMenuInPortal', instance.showMenuInPortal);
  writeNotNull('mobilePickup', instance.mobilePickup);
  writeNotNull('portalPickup', instance.portalPickup);
  writeNotNull('facebookPickup', instance.facebookPickup);
  writeNotNull('deliveryTime', instance.deliveryTime?.toJson());
  writeNotNull('mobileDelivery', instance.mobileDelivery);
  writeNotNull('portalDelivery', instance.portalDelivery);
  writeNotNull('facebookDelivery', instance.facebookDelivery);
  writeNotNull('nonDeliveryDays',
      instance.nonDeliveryDays?.map((e) => e.toJson()).toList());
  writeNotNull(
      'nonPickupDays', instance.nonPickupDays?.map((e) => e.toJson()).toList());
  writeNotNull('deliveryCountries', instance.deliveryCountries);
  writeNotNull('deliveryStates', instance.deliveryStates);
  writeNotNull(
      'extraFees', instance.extraFees?.map((e) => e.toJson()).toList());
  writeNotNull('emails', instance.emails?.map((e) => e.toJson()).toList());
  return val;
}

TimeFromToInput _$TimeFromToInputFromJson(Map<String, dynamic> json) =>
    TimeFromToInput(
      from: json['from'] as String?,
      to: json['to'] as String?,
    );

Map<String, dynamic> _$TimeFromToInputToJson(TimeFromToInput instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('from', instance.from);
  writeNotNull('to', instance.to);
  return val;
}

MonthDaysInput _$MonthDaysInputFromJson(Map<String, dynamic> json) =>
    MonthDaysInput(
      month: json['month'] as int,
      days: (json['days'] as List<dynamic>?)?.map((e) => e as int).toList(),
    );

Map<String, dynamic> _$MonthDaysInputToJson(MonthDaysInput instance) {
  final val = <String, dynamic>{
    'month': instance.month,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('days', instance.days);
  return val;
}

OrderSettingsExtraFeesInput _$OrderSettingsExtraFeesInputFromJson(
        Map<String, dynamic> json) =>
    OrderSettingsExtraFeesInput(
      key: json['key'] as String?,
      value: json['value'] as String?,
    );

Map<String, dynamic> _$OrderSettingsExtraFeesInputToJson(
    OrderSettingsExtraFeesInput instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('key', instance.key);
  writeNotNull('value', instance.value);
  return val;
}

OrderSettingsEmailsInput _$OrderSettingsEmailsInputFromJson(
        Map<String, dynamic> json) =>
    OrderSettingsEmailsInput(
      definition: $enumDecodeNullable(
          _$OrderEmailActionEnumEnumMap, json['definition'],
          unknownValue: OrderEmailActionEnum.artemisUnknown),
      enabled: json['enabled'] as bool?,
    );

Map<String, dynamic> _$OrderSettingsEmailsInputToJson(
    OrderSettingsEmailsInput instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull(
      'definition', _$OrderEmailActionEnumEnumMap[instance.definition]);
  writeNotNull('enabled', instance.enabled);
  return val;
}

UpdateOrderSettings$Mutation$OrderSettingsFullType$TimeFromToType
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$TimeFromToTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateOrderSettings$Mutation$OrderSettingsFullType$TimeFromToType()
          ..from = json['from'] as String?
          ..to = json['to'] as String?;

Map<String, dynamic>
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$TimeFromToTypeToJson(
        UpdateOrderSettings$Mutation$OrderSettingsFullType$TimeFromToType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('from', instance.from);
  writeNotNull('to', instance.to);
  return val;
}

UpdateOrderSettings$Mutation$OrderSettingsFullType$MonthDaysType
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$MonthDaysTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateOrderSettings$Mutation$OrderSettingsFullType$MonthDaysType()
          ..month = json['month'] as int
          ..days =
              (json['days'] as List<dynamic>?)?.map((e) => e as int).toList();

Map<String, dynamic>
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$MonthDaysTypeToJson(
        UpdateOrderSettings$Mutation$OrderSettingsFullType$MonthDaysType
            instance) {
  final val = <String, dynamic>{
    'month': instance.month,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('days', instance.days);
  return val;
}

UpdateOrderSettings$Mutation$OrderSettingsFullType$CountryType$PictureType
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateOrderSettings$Mutation$OrderSettingsFullType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$CountryType$PictureTypeToJson(
        UpdateOrderSettings$Mutation$OrderSettingsFullType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateOrderSettings$Mutation$OrderSettingsFullType$CountryType
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateOrderSettings$Mutation$OrderSettingsFullType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateOrderSettings$Mutation$OrderSettingsFullType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateOrderSettings$Mutation$OrderSettingsFullType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$CountryTypeToJson(
        UpdateOrderSettings$Mutation$OrderSettingsFullType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryType$PictureType
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryType$PictureTypeToJson(
        UpdateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryType
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..dialCode = json['dialCode'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryTypeToJson(
        UpdateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('dialCode', instance.dialCode);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateOrderSettings$Mutation$OrderSettingsFullType$StateType$PictureType
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$StateType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateOrderSettings$Mutation$OrderSettingsFullType$StateType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$StateType$PictureTypeToJson(
        UpdateOrderSettings$Mutation$OrderSettingsFullType$StateType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateOrderSettings$Mutation$OrderSettingsFullType$StateType
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$StateTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateOrderSettings$Mutation$OrderSettingsFullType$StateType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..adminName = json['adminName'] as String?
          ..capital = $enumDecodeNullable(
              _$StateCapitalEnumEnumMap, json['capital'],
              unknownValue: StateCapitalEnum.artemisUnknown)
          ..population = json['population'] as String?
          ..ascii = json['ascii'] as String?
          ..lat = json['lat'] as String?
          ..lng = json['lng'] as String?
          ..country = json['country'] == null
              ? null
              : UpdateOrderSettings$Mutation$OrderSettingsFullType$StateType$CountryType
                  .fromJson(json['country'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateOrderSettings$Mutation$OrderSettingsFullType$StateType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateOrderSettings$Mutation$OrderSettingsFullType$StateType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$StateTypeToJson(
        UpdateOrderSettings$Mutation$OrderSettingsFullType$StateType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('adminName', instance.adminName);
  writeNotNull('capital', _$StateCapitalEnumEnumMap[instance.capital]);
  writeNotNull('population', instance.population);
  writeNotNull('ascii', instance.ascii);
  writeNotNull('lat', instance.lat);
  writeNotNull('lng', instance.lng);
  writeNotNull('country', instance.country?.toJson());
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateOrderSettings$Mutation$OrderSettingsFullType$OrderSettingsExtraFeesType
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$OrderSettingsExtraFeesTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateOrderSettings$Mutation$OrderSettingsFullType$OrderSettingsExtraFeesType()
          ..key = json['key'] as String?
          ..value = json['value'] as String?;

Map<String, dynamic>
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$OrderSettingsExtraFeesTypeToJson(
        UpdateOrderSettings$Mutation$OrderSettingsFullType$OrderSettingsExtraFeesType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('key', instance.key);
  writeNotNull('value', instance.value);
  return val;
}

UpdateOrderSettings$Mutation$OrderSettingsFullType$OrderSettingsEmailsType
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$OrderSettingsEmailsTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateOrderSettings$Mutation$OrderSettingsFullType$OrderSettingsEmailsType()
          ..definition = $enumDecodeNullable(
              _$OrderEmailActionEnumEnumMap, json['definition'],
              unknownValue: OrderEmailActionEnum.artemisUnknown)
          ..enabled = json['enabled'] as bool?;

Map<String, dynamic>
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$OrderSettingsEmailsTypeToJson(
        UpdateOrderSettings$Mutation$OrderSettingsFullType$OrderSettingsEmailsType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull(
      'definition', _$OrderEmailActionEnumEnumMap[instance.definition]);
  writeNotNull('enabled', instance.enabled);
  return val;
}

UpdateOrderSettings$Mutation$OrderSettingsFullType$TargetType$PointOfSaleType
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$TargetType$PointOfSaleTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateOrderSettings$Mutation$OrderSettingsFullType$TargetType$PointOfSaleType()
          ..id = json['id'] as String;

Map<String, dynamic>
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$TargetType$PointOfSaleTypeToJson(
            UpdateOrderSettings$Mutation$OrderSettingsFullType$TargetType$PointOfSaleType
                instance) =>
        <String, dynamic>{
          'id': instance.id,
        };

UpdateOrderSettings$Mutation$OrderSettingsFullType$TargetType$WholesalerType
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$TargetType$WholesalerTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateOrderSettings$Mutation$OrderSettingsFullType$TargetType$WholesalerType()
          ..id = json['id'] as String;

Map<String, dynamic>
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$TargetType$WholesalerTypeToJson(
            UpdateOrderSettings$Mutation$OrderSettingsFullType$TargetType$WholesalerType
                instance) =>
        <String, dynamic>{
          'id': instance.id,
        };

UpdateOrderSettings$Mutation$OrderSettingsFullType$TargetType$ManufacturerType
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$TargetType$ManufacturerTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateOrderSettings$Mutation$OrderSettingsFullType$TargetType$ManufacturerType()
          ..id = json['id'] as String;

Map<String, dynamic>
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$TargetType$ManufacturerTypeToJson(
            UpdateOrderSettings$Mutation$OrderSettingsFullType$TargetType$ManufacturerType
                instance) =>
        <String, dynamic>{
          'id': instance.id,
        };

UpdateOrderSettings$Mutation$OrderSettingsFullType$TargetType
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$TargetTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateOrderSettings$Mutation$OrderSettingsFullType$TargetType()
          ..pos = json['pos'] == null
              ? null
              : UpdateOrderSettings$Mutation$OrderSettingsFullType$TargetType$PointOfSaleType
                  .fromJson(json['pos'] as Map<String, dynamic>)
          ..wholesaler = json['wholesaler'] == null
              ? null
              : UpdateOrderSettings$Mutation$OrderSettingsFullType$TargetType$WholesalerType
                  .fromJson(json['wholesaler'] as Map<String, dynamic>)
          ..manufacturer = json['manufacturer'] == null
              ? null
              : UpdateOrderSettings$Mutation$OrderSettingsFullType$TargetType$ManufacturerType
                  .fromJson(json['manufacturer'] as Map<String, dynamic>);

Map<String, dynamic>
    _$UpdateOrderSettings$Mutation$OrderSettingsFullType$TargetTypeToJson(
        UpdateOrderSettings$Mutation$OrderSettingsFullType$TargetType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('pos', instance.pos?.toJson());
  writeNotNull('wholesaler', instance.wholesaler?.toJson());
  writeNotNull('manufacturer', instance.manufacturer?.toJson());
  return val;
}

UpdateOrderSettings$Mutation$OrderSettingsFullType
    _$UpdateOrderSettings$Mutation$OrderSettingsFullTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateOrderSettings$Mutation$OrderSettingsFullType()
          ..id = json['id'] as String
          ..pickup = json['pickup'] as bool?
          ..delivery = json['delivery'] as bool?
          ..mobilePickup = json['mobilePickup'] as bool?
          ..portalPickup = json['portalPickup'] as bool?
          ..pickupTime = json['pickupTime'] == null
              ? null
              : UpdateOrderSettings$Mutation$OrderSettingsFullType$TimeFromToType
                  .fromJson(json['pickupTime'] as Map<String, dynamic>)
          ..facebookPickup = json['facebookPickup'] as bool?
          ..mobileDelivery = json['mobileDelivery'] as bool?
          ..portalDelivery = json['portalDelivery'] as bool?
          ..showMenuInPortal = json['showMenuInPortal'] as bool?
          ..deliveryTime = json['deliveryTime'] == null
              ? null
              : UpdateOrderSettings$Mutation$OrderSettingsFullType$TimeFromToType
                  .fromJson(json['deliveryTime'] as Map<String, dynamic>)
          ..facebookDelivery = json['facebookDelivery'] as bool?
          ..nonPickupDays = (json['nonPickupDays'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateOrderSettings$Mutation$OrderSettingsFullType$MonthDaysType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..nonDeliveryDays = (json['nonDeliveryDays'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateOrderSettings$Mutation$OrderSettingsFullType$MonthDaysType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..deliveryCountries = (json['deliveryCountries'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateOrderSettings$Mutation$OrderSettingsFullType$CountryType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..deliveryStates = (json['deliveryStates'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateOrderSettings$Mutation$OrderSettingsFullType$StateType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..extraFees = (json['extraFees'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateOrderSettings$Mutation$OrderSettingsFullType$OrderSettingsExtraFeesType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..emails = (json['emails'] as List<dynamic>?)
              ?.map((e) =>
                  UpdateOrderSettings$Mutation$OrderSettingsFullType$OrderSettingsEmailsType
                      .fromJson(e as Map<String, dynamic>))
              .toList()
          ..target =
              UpdateOrderSettings$Mutation$OrderSettingsFullType$TargetType
                  .fromJson(json['target'] as Map<String, dynamic>)
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String);

Map<String, dynamic> _$UpdateOrderSettings$Mutation$OrderSettingsFullTypeToJson(
    UpdateOrderSettings$Mutation$OrderSettingsFullType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('pickup', instance.pickup);
  writeNotNull('delivery', instance.delivery);
  writeNotNull('mobilePickup', instance.mobilePickup);
  writeNotNull('portalPickup', instance.portalPickup);
  writeNotNull('pickupTime', instance.pickupTime?.toJson());
  writeNotNull('facebookPickup', instance.facebookPickup);
  writeNotNull('mobileDelivery', instance.mobileDelivery);
  writeNotNull('portalDelivery', instance.portalDelivery);
  writeNotNull('showMenuInPortal', instance.showMenuInPortal);
  writeNotNull('deliveryTime', instance.deliveryTime?.toJson());
  writeNotNull('facebookDelivery', instance.facebookDelivery);
  writeNotNull(
      'nonPickupDays', instance.nonPickupDays?.map((e) => e.toJson()).toList());
  writeNotNull('nonDeliveryDays',
      instance.nonDeliveryDays?.map((e) => e.toJson()).toList());
  writeNotNull('deliveryCountries',
      instance.deliveryCountries?.map((e) => e.toJson()).toList());
  writeNotNull('deliveryStates',
      instance.deliveryStates?.map((e) => e.toJson()).toList());
  writeNotNull(
      'extraFees', instance.extraFees?.map((e) => e.toJson()).toList());
  writeNotNull('emails', instance.emails?.map((e) => e.toJson()).toList());
  val['target'] = instance.target.toJson();
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  return val;
}

UpdateOrderSettings$Mutation _$UpdateOrderSettings$MutationFromJson(
        Map<String, dynamic> json) =>
    UpdateOrderSettings$Mutation()
      ..updateOrderSettings =
          UpdateOrderSettings$Mutation$OrderSettingsFullType.fromJson(
              json['updateOrderSettings'] as Map<String, dynamic>);

Map<String, dynamic> _$UpdateOrderSettings$MutationToJson(
        UpdateOrderSettings$Mutation instance) =>
    <String, dynamic>{
      'updateOrderSettings': instance.updateOrderSettings.toJson(),
    };

OrderSettingsUpdateInput _$OrderSettingsUpdateInputFromJson(
        Map<String, dynamic> json) =>
    OrderSettingsUpdateInput(
      pickupTime: json['pickupTime'] == null
          ? null
          : TimeFromToInput.fromJson(
              json['pickupTime'] as Map<String, dynamic>),
      pickup: json['pickup'] as bool?,
      delivery: json['delivery'] as bool?,
      showMenuInPortal: json['showMenuInPortal'] as bool?,
      mobilePickup: json['mobilePickup'] as bool?,
      portalPickup: json['portalPickup'] as bool?,
      facebookPickup: json['facebookPickup'] as bool?,
      deliveryTime: json['deliveryTime'] == null
          ? null
          : TimeFromToInput.fromJson(
              json['deliveryTime'] as Map<String, dynamic>),
      mobileDelivery: json['mobileDelivery'] as bool?,
      portalDelivery: json['portalDelivery'] as bool?,
      facebookDelivery: json['facebookDelivery'] as bool?,
      nonDeliveryDays: (json['nonDeliveryDays'] as List<dynamic>?)
          ?.map((e) => MonthDaysInput.fromJson(e as Map<String, dynamic>))
          .toList(),
      nonPickupDays: (json['nonPickupDays'] as List<dynamic>?)
          ?.map((e) => MonthDaysInput.fromJson(e as Map<String, dynamic>))
          .toList(),
      deliveryCountries: (json['deliveryCountries'] as List<dynamic>?)
          ?.map((e) => e as String)
          .toList(),
      deliveryStates: (json['deliveryStates'] as List<dynamic>?)
          ?.map((e) => e as String)
          .toList(),
      extraFees: (json['extraFees'] as List<dynamic>?)
          ?.map((e) =>
              OrderSettingsExtraFeesInput.fromJson(e as Map<String, dynamic>))
          .toList(),
      emails: (json['emails'] as List<dynamic>?)
          ?.map((e) =>
              OrderSettingsEmailsInput.fromJson(e as Map<String, dynamic>))
          .toList(),
    );

Map<String, dynamic> _$OrderSettingsUpdateInputToJson(
    OrderSettingsUpdateInput instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('pickupTime', instance.pickupTime?.toJson());
  writeNotNull('pickup', instance.pickup);
  writeNotNull('delivery', instance.delivery);
  writeNotNull('showMenuInPortal', instance.showMenuInPortal);
  writeNotNull('mobilePickup', instance.mobilePickup);
  writeNotNull('portalPickup', instance.portalPickup);
  writeNotNull('facebookPickup', instance.facebookPickup);
  writeNotNull('deliveryTime', instance.deliveryTime?.toJson());
  writeNotNull('mobileDelivery', instance.mobileDelivery);
  writeNotNull('portalDelivery', instance.portalDelivery);
  writeNotNull('facebookDelivery', instance.facebookDelivery);
  writeNotNull('nonDeliveryDays',
      instance.nonDeliveryDays?.map((e) => e.toJson()).toList());
  writeNotNull(
      'nonPickupDays', instance.nonPickupDays?.map((e) => e.toJson()).toList());
  writeNotNull('deliveryCountries', instance.deliveryCountries);
  writeNotNull('deliveryStates', instance.deliveryStates);
  writeNotNull(
      'extraFees', instance.extraFees?.map((e) => e.toJson()).toList());
  writeNotNull('emails', instance.emails?.map((e) => e.toJson()).toList());
  return val;
}

GetOrderSettingsByTargetArguments _$GetOrderSettingsByTargetArgumentsFromJson(
        Map<String, dynamic> json) =>
    GetOrderSettingsByTargetArguments(
      target: TargetACIInput.fromJson(json['target'] as Map<String, dynamic>),
    );

Map<String, dynamic> _$GetOrderSettingsByTargetArgumentsToJson(
        GetOrderSettingsByTargetArguments instance) =>
    <String, dynamic>{
      'target': instance.target.toJson(),
    };

CreateOrderSettingsArguments _$CreateOrderSettingsArgumentsFromJson(
        Map<String, dynamic> json) =>
    CreateOrderSettingsArguments(
      input: OrderSettingsInput.fromJson(json['input'] as Map<String, dynamic>),
    );

Map<String, dynamic> _$CreateOrderSettingsArgumentsToJson(
        CreateOrderSettingsArguments instance) =>
    <String, dynamic>{
      'input': instance.input.toJson(),
    };

UpdateOrderSettingsArguments _$UpdateOrderSettingsArgumentsFromJson(
        Map<String, dynamic> json) =>
    UpdateOrderSettingsArguments(
      id: json['id'] as String,
      input: OrderSettingsUpdateInput.fromJson(
          json['input'] as Map<String, dynamic>),
    );

Map<String, dynamic> _$UpdateOrderSettingsArgumentsToJson(
        UpdateOrderSettingsArguments instance) =>
    <String, dynamic>{
      'id': instance.id,
      'input': instance.input.toJson(),
    };
