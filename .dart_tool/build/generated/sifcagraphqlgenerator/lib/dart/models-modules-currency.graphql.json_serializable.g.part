// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

FindCurrencyById$Query$CurrencyType$PictureType
    _$FindCurrencyById$Query$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        FindCurrencyById$Query$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic> _$FindCurrencyById$Query$CurrencyType$PictureTypeToJson(
    FindCurrencyById$Query$CurrencyType$PictureType instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

FindCurrencyById$Query$CurrencyType
    _$FindCurrencyById$Query$CurrencyTypeFromJson(Map<String, dynamic> json) =>
        FindCurrencyById$Query$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : FindCurrencyById$Query$CurrencyType$PictureType.fromJson(
                  json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : FindCurrencyById$Query$CurrencyType$PictureType.fromJson(
                  json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic> _$FindCurrencyById$Query$CurrencyTypeToJson(
    FindCurrencyById$Query$CurrencyType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

FindCurrencyById$Query _$FindCurrencyById$QueryFromJson(
        Map<String, dynamic> json) =>
    FindCurrencyById$Query()
      ..findCurrencyById = FindCurrencyById$Query$CurrencyType.fromJson(
          json['findCurrencyById'] as Map<String, dynamic>);

Map<String, dynamic> _$FindCurrencyById$QueryToJson(
        FindCurrencyById$Query instance) =>
    <String, dynamic>{
      'findCurrencyById': instance.findCurrencyById.toJson(),
    };

GetCurrencies$Query$CurrencyType$PictureType
    _$GetCurrencies$Query$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        GetCurrencies$Query$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic> _$GetCurrencies$Query$CurrencyType$PictureTypeToJson(
    GetCurrencies$Query$CurrencyType$PictureType instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

GetCurrencies$Query$CurrencyType _$GetCurrencies$Query$CurrencyTypeFromJson(
        Map<String, dynamic> json) =>
    GetCurrencies$Query$CurrencyType()
      ..id = json['id'] as String
      ..name = json['name'] as String
      ..code = json['code'] as String?
      ..symbol = json['symbol'] as String?
      ..iconFlag = json['iconFlag'] as String?
      ..createdAt = DateTime.parse(json['createdAt'] as String)
      ..updatedAt = DateTime.parse(json['updatedAt'] as String)
      ..flagSquare = json['flagSquare'] == null
          ? null
          : GetCurrencies$Query$CurrencyType$PictureType.fromJson(
              json['flagSquare'] as Map<String, dynamic>)
      ..flagWide = json['flagWide'] == null
          ? null
          : GetCurrencies$Query$CurrencyType$PictureType.fromJson(
              json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic> _$GetCurrencies$Query$CurrencyTypeToJson(
    GetCurrencies$Query$CurrencyType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

GetCurrencies$Query _$GetCurrencies$QueryFromJson(Map<String, dynamic> json) =>
    GetCurrencies$Query()
      ..getCurrencies = (json['getCurrencies'] as List<dynamic>)
          .map((e) => GetCurrencies$Query$CurrencyType.fromJson(
              e as Map<String, dynamic>))
          .toList();

Map<String, dynamic> _$GetCurrencies$QueryToJson(
        GetCurrencies$Query instance) =>
    <String, dynamic>{
      'getCurrencies': instance.getCurrencies.map((e) => e.toJson()).toList(),
    };

FindCurrenciesPagination$Query$CurrencyPaginatedType$CurrencyType$PictureType
    _$FindCurrenciesPagination$Query$CurrencyPaginatedType$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        FindCurrenciesPagination$Query$CurrencyPaginatedType$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic>
    _$FindCurrenciesPagination$Query$CurrencyPaginatedType$CurrencyType$PictureTypeToJson(
        FindCurrenciesPagination$Query$CurrencyPaginatedType$CurrencyType$PictureType
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

FindCurrenciesPagination$Query$CurrencyPaginatedType$CurrencyType
    _$FindCurrenciesPagination$Query$CurrencyPaginatedType$CurrencyTypeFromJson(
            Map<String, dynamic> json) =>
        FindCurrenciesPagination$Query$CurrencyPaginatedType$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : FindCurrenciesPagination$Query$CurrencyPaginatedType$CurrencyType$PictureType
                  .fromJson(json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : FindCurrenciesPagination$Query$CurrencyPaginatedType$CurrencyType$PictureType
                  .fromJson(json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic>
    _$FindCurrenciesPagination$Query$CurrencyPaginatedType$CurrencyTypeToJson(
        FindCurrenciesPagination$Query$CurrencyPaginatedType$CurrencyType
            instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

FindCurrenciesPagination$Query$CurrencyPaginatedType
    _$FindCurrenciesPagination$Query$CurrencyPaginatedTypeFromJson(
            Map<String, dynamic> json) =>
        FindCurrenciesPagination$Query$CurrencyPaginatedType()
          ..count = json['count'] as int?
          ..isLast = json['isLast'] as bool?
          ..objects = (json['objects'] as List<dynamic>)
              .map((e) =>
                  FindCurrenciesPagination$Query$CurrencyPaginatedType$CurrencyType
                      .fromJson(e as Map<String, dynamic>))
              .toList();

Map<String, dynamic>
    _$FindCurrenciesPagination$Query$CurrencyPaginatedTypeToJson(
        FindCurrenciesPagination$Query$CurrencyPaginatedType instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('count', instance.count);
  writeNotNull('isLast', instance.isLast);
  val['objects'] = instance.objects.map((e) => e.toJson()).toList();
  return val;
}

FindCurrenciesPagination$Query _$FindCurrenciesPagination$QueryFromJson(
        Map<String, dynamic> json) =>
    FindCurrenciesPagination$Query()
      ..findCurrenciesPagination =
          FindCurrenciesPagination$Query$CurrencyPaginatedType.fromJson(
              json['findCurrenciesPagination'] as Map<String, dynamic>);

Map<String, dynamic> _$FindCurrenciesPagination$QueryToJson(
        FindCurrenciesPagination$Query instance) =>
    <String, dynamic>{
      'findCurrenciesPagination': instance.findCurrenciesPagination.toJson(),
    };

PaginationInput _$PaginationInputFromJson(Map<String, dynamic> json) =>
    PaginationInput(
      page: json['page'] as int?,
      limit: json['limit'] as int?,
    );

Map<String, dynamic> _$PaginationInputToJson(PaginationInput instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('page', instance.page);
  writeNotNull('limit', instance.limit);
  return val;
}

CreateCurrency$Mutation$CurrencyType$PictureType
    _$CreateCurrency$Mutation$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        CreateCurrency$Mutation$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic> _$CreateCurrency$Mutation$CurrencyType$PictureTypeToJson(
    CreateCurrency$Mutation$CurrencyType$PictureType instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

CreateCurrency$Mutation$CurrencyType
    _$CreateCurrency$Mutation$CurrencyTypeFromJson(Map<String, dynamic> json) =>
        CreateCurrency$Mutation$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : CreateCurrency$Mutation$CurrencyType$PictureType.fromJson(
                  json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : CreateCurrency$Mutation$CurrencyType$PictureType.fromJson(
                  json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic> _$CreateCurrency$Mutation$CurrencyTypeToJson(
    CreateCurrency$Mutation$CurrencyType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

CreateCurrency$Mutation _$CreateCurrency$MutationFromJson(
        Map<String, dynamic> json) =>
    CreateCurrency$Mutation()
      ..createCurrency = CreateCurrency$Mutation$CurrencyType.fromJson(
          json['createCurrency'] as Map<String, dynamic>);

Map<String, dynamic> _$CreateCurrency$MutationToJson(
        CreateCurrency$Mutation instance) =>
    <String, dynamic>{
      'createCurrency': instance.createCurrency.toJson(),
    };

CurrencyInput _$CurrencyInputFromJson(Map<String, dynamic> json) =>
    CurrencyInput(
      name: json['name'] as String,
      code: json['code'] as String?,
      symbol: json['symbol'] as String?,
      flagSquare: json['flagSquare'] == null
          ? null
          : PictureInput.fromJson(json['flagSquare'] as Map<String, dynamic>),
      flagWide: json['flagWide'] == null
          ? null
          : PictureInput.fromJson(json['flagWide'] as Map<String, dynamic>),
      iconFlag: json['iconFlag'] as String?,
    );

Map<String, dynamic> _$CurrencyInputToJson(CurrencyInput instance) {
  final val = <String, dynamic>{
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  writeNotNull('iconFlag', instance.iconFlag);
  return val;
}

PictureInput _$PictureInputFromJson(Map<String, dynamic> json) => PictureInput(
      width: json['width'] as int?,
      height: json['height'] as int?,
      x: json['x'] as int?,
      y: json['y'] as int?,
      alt: json['alt'] as String?,
      baseUrl: json['baseUrl'] as String,
      path: json['path'] as String,
    );

Map<String, dynamic> _$PictureInputToJson(PictureInput instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  val['baseUrl'] = instance.baseUrl;
  val['path'] = instance.path;
  return val;
}

UpdateCurrency$Mutation$CurrencyType$PictureType
    _$UpdateCurrency$Mutation$CurrencyType$PictureTypeFromJson(
            Map<String, dynamic> json) =>
        UpdateCurrency$Mutation$CurrencyType$PictureType()
          ..baseUrl = json['baseUrl'] as String?
          ..path = json['path'] as String?
          ..width = json['width'] as int?
          ..height = json['height'] as int?
          ..x = json['x'] as int?
          ..y = json['y'] as int?
          ..alt = json['alt'] as String?;

Map<String, dynamic> _$UpdateCurrency$Mutation$CurrencyType$PictureTypeToJson(
    UpdateCurrency$Mutation$CurrencyType$PictureType instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('baseUrl', instance.baseUrl);
  writeNotNull('path', instance.path);
  writeNotNull('width', instance.width);
  writeNotNull('height', instance.height);
  writeNotNull('x', instance.x);
  writeNotNull('y', instance.y);
  writeNotNull('alt', instance.alt);
  return val;
}

UpdateCurrency$Mutation$CurrencyType
    _$UpdateCurrency$Mutation$CurrencyTypeFromJson(Map<String, dynamic> json) =>
        UpdateCurrency$Mutation$CurrencyType()
          ..id = json['id'] as String
          ..name = json['name'] as String
          ..code = json['code'] as String?
          ..symbol = json['symbol'] as String?
          ..iconFlag = json['iconFlag'] as String?
          ..createdAt = DateTime.parse(json['createdAt'] as String)
          ..updatedAt = DateTime.parse(json['updatedAt'] as String)
          ..flagSquare = json['flagSquare'] == null
              ? null
              : UpdateCurrency$Mutation$CurrencyType$PictureType.fromJson(
                  json['flagSquare'] as Map<String, dynamic>)
          ..flagWide = json['flagWide'] == null
              ? null
              : UpdateCurrency$Mutation$CurrencyType$PictureType.fromJson(
                  json['flagWide'] as Map<String, dynamic>);

Map<String, dynamic> _$UpdateCurrency$Mutation$CurrencyTypeToJson(
    UpdateCurrency$Mutation$CurrencyType instance) {
  final val = <String, dynamic>{
    'id': instance.id,
    'name': instance.name,
  };

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('code', instance.code);
  writeNotNull('symbol', instance.symbol);
  writeNotNull('iconFlag', instance.iconFlag);
  val['createdAt'] = instance.createdAt.toIso8601String();
  val['updatedAt'] = instance.updatedAt.toIso8601String();
  writeNotNull('flagSquare', instance.flagSquare?.toJson());
  writeNotNull('flagWide', instance.flagWide?.toJson());
  return val;
}

UpdateCurrency$Mutation _$UpdateCurrency$MutationFromJson(
        Map<String, dynamic> json) =>
    UpdateCurrency$Mutation()
      ..updateCurrency = UpdateCurrency$Mutation$CurrencyType.fromJson(
          json['updateCurrency'] as Map<String, dynamic>);

Map<String, dynamic> _$UpdateCurrency$MutationToJson(
        UpdateCurrency$Mutation instance) =>
    <String, dynamic>{
      'updateCurrency': instance.updateCurrency.toJson(),
    };

DeleteCurrency$Mutation$DeleteResponseDtoType
    _$DeleteCurrency$Mutation$DeleteResponseDtoTypeFromJson(
            Map<String, dynamic> json) =>
        DeleteCurrency$Mutation$DeleteResponseDtoType()
          ..success = json['success'] as bool
          ..message = json['message'] as String;

Map<String, dynamic> _$DeleteCurrency$Mutation$DeleteResponseDtoTypeToJson(
        DeleteCurrency$Mutation$DeleteResponseDtoType instance) =>
    <String, dynamic>{
      'success': instance.success,
      'message': instance.message,
    };

DeleteCurrency$Mutation _$DeleteCurrency$MutationFromJson(
        Map<String, dynamic> json) =>
    DeleteCurrency$Mutation()
      ..deleteCurrency = DeleteCurrency$Mutation$DeleteResponseDtoType.fromJson(
          json['deleteCurrency'] as Map<String, dynamic>);

Map<String, dynamic> _$DeleteCurrency$MutationToJson(
        DeleteCurrency$Mutation instance) =>
    <String, dynamic>{
      'deleteCurrency': instance.deleteCurrency.toJson(),
    };

FindCurrencyByIdArguments _$FindCurrencyByIdArgumentsFromJson(
        Map<String, dynamic> json) =>
    FindCurrencyByIdArguments(
      id: json['id'] as String,
    );

Map<String, dynamic> _$FindCurrencyByIdArgumentsToJson(
        FindCurrencyByIdArguments instance) =>
    <String, dynamic>{
      'id': instance.id,
    };

FindCurrenciesPaginationArguments _$FindCurrenciesPaginationArgumentsFromJson(
        Map<String, dynamic> json) =>
    FindCurrenciesPaginationArguments(
      pagination: json['pagination'] == null
          ? null
          : PaginationInput.fromJson(
              json['pagination'] as Map<String, dynamic>),
    );

Map<String, dynamic> _$FindCurrenciesPaginationArgumentsToJson(
    FindCurrenciesPaginationArguments instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('pagination', instance.pagination?.toJson());
  return val;
}

CreateCurrencyArguments _$CreateCurrencyArgumentsFromJson(
        Map<String, dynamic> json) =>
    CreateCurrencyArguments(
      input: CurrencyInput.fromJson(json['input'] as Map<String, dynamic>),
    );

Map<String, dynamic> _$CreateCurrencyArgumentsToJson(
        CreateCurrencyArguments instance) =>
    <String, dynamic>{
      'input': instance.input.toJson(),
    };

UpdateCurrencyArguments _$UpdateCurrencyArgumentsFromJson(
        Map<String, dynamic> json) =>
    UpdateCurrencyArguments(
      id: json['id'] as String,
      input: CurrencyInput.fromJson(json['input'] as Map<String, dynamic>),
    );

Map<String, dynamic> _$UpdateCurrencyArgumentsToJson(
        UpdateCurrencyArguments instance) =>
    <String, dynamic>{
      'id': instance.id,
      'input': instance.input.toJson(),
    };

DeleteCurrencyArguments _$DeleteCurrencyArgumentsFromJson(
        Map<String, dynamic> json) =>
    DeleteCurrencyArguments(
      id: json['id'] as String,
    );

Map<String, dynamic> _$DeleteCurrencyArgumentsToJson(
        DeleteCurrencyArguments instance) =>
    <String, dynamic>{
      'id': instance.id,
    };
